openapi: 3.0.3
info:
  title: Formaloo API Documentation
  version: 2.0.0
  description: This is *Formaloo*!
  termsOfService: 'http://example.com/terms/'
  contact:
    name: Support
    email: dev@formaloo.com
    url: 'https://help.formaloo.com/en/'
  externalDocs:
    description: Find out more
    url: 'https://help.formaloo.com/en/'
servers:
  - url: 'http://api.formaloo.net'
    description: Main (production) server
paths:
  /v2.0/businesses/:
    get:
      operationId: businessesList
      description: TBD
      summary: Get Business List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessShort'
          description: ''
    post:
      operationId: businessesCreate
      description: TBD
      summary: Create Business
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessCreate'
          description: ''
  '/v2.0/businesses/{businessSlug}/invitations/{invitationKey}/':
    delete:
      operationId: businessesInvitationsDestroy
      description: Use to revoke an invitation to join a workspace or the public join link.
      summary: Delete Workspace Invitation
      parameters:
        - in: path
          name: businessSlug
          schema:
            type: string
          required: true
        - in: path
          name: invitationKey
          schema:
            type: string
            format: uuid
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/businesses/{slug}/':
    get:
      operationId: businessesRetrieve
      description: Use to get a business by it's slug (icas slug).
      summary: Get Business
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    put:
      operationId: businessesUpdate
      description: Use to update a business' data.
      summary: Edit Business
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
    patch:
      operationId: businessesPartialUpdate
      description: Use to update a business' data.
      summary: Edit Business
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  '/v2.0/businesses/{slug}/invitations/':
    get:
      operationId: businessesInvitationsRetrieve
      description: Use to get a workspace's members and invitation data.
      summary: Get Workspace Invitation List
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessInvitaion'
          description: ''
    post:
      operationId: businessesInvitationsCreate
      description: >-
        Send a user's email (or a list of emails) to add or invite them to your
        workspace.
      summary: Create Workspace Invitation
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  '/v2.0/businesses/{slug}/members/':
    get:
      operationId: businessesMembersList
      description: Use to get a workspace's members and invitation data.
      summary: Workspace Member
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessMember'
          description: ''
  '/v2.0/businesses/{slug}/members/{username}/':
    delete:
      operationId: businessesMembersDestroy
      description: Use to remove a member from your workspace.
      summary: Workspace Member Remove
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: path
          name: username
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/businesses/{slug}/packages/':
    post:
      operationId: businessesPackagesCreate
      description: TBD
      summary: Purchase Package
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  '/v2.0/businesses/{slug}/plans/':
    post:
      operationId: businessesPlansCreate
      description: purchase a plan
      summary: Purchase Plan
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - businesses
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  /v2.0/in-app-purchases/:
    post:
      operationId: inAppPurchasesCreate
      description: TBD
      summary: In App Purchase Business Plan Confirm
      parameters:
        - in: query
          name: active_business
          schema:
            type: string
          description: Slug of the business we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - in-app-purchases
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  /v2.0/oauth/authorize/:
    post:
      operationId: oauthAuthorizeCreate
      description: Returns a JSON Web Token that can be used for authenticated requests.
      summary: Obtain Authorization Token
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - oauth
      security:
        - JWT Authentication: []
      responses:
        '200':
          description: No response body
  /v2.0/oauth/session/:
    post:
      operationId: oauthSessionCreate
      description: TBD
      summary: Obtain Session Token
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - oauth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /v2.0/oauth2/authorization-token/:
    post:
      operationId: oauth2AuthorizationTokenCreate
      description: >-
        send the credentials in header ('Authorization' = 'Basic {credentials}')
        to obtain a authorization token.
      summary: Authorization Token
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - oauth2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObtainSessionTokenRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObtainSessionTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObtainSessionTokenRequest'
        required: true
      security:
        - JWT Authentication: []
        - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObtainSessionToken'
          description: ''
  /v2.0/oauth2/slack/:
    get:
      operationId: oauth2SlackList
      description: TBD
      summary: Get Slack Auth List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - oauth2
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSlackAuthList'
          description: ''
  '/v2.0/oauth2/slack-auth/{slug}/':
    get:
      operationId: oauth2SlackAuthRetrieve
      description: TBD
      summary: Slack Auth Item
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - oauth2
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlackAuth'
          description: ''
    delete:
      operationId: oauth2SlackAuthDestroy
      description: TBD
      summary: Slack Auth Item
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - oauth2
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/packages/:
    get:
      operationId: packagesList
      description: TBD
      summary: Get Packages List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - packages
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PackagesList'
          description: ''
  /v2.0/plans/:
    get:
      operationId: plansList
      description: list of all available plans
      summary: Get Plan List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - plans
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plan'
          description: ''
  /v2.0/profile/:
    get:
      operationId: profileRetrieve
      description: Gives full profile information for current user.
      summary: Profile
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    put:
      operationId: profileUpdate
      description: Updates the profile information.
      summary: Profile
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
    patch:
      operationId: profilePartialUpdate
      description: Updates the profile information.
      summary: Profile
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
          description: ''
  /v2.0/profile-teams/:
    get:
      operationId: profileTeamsList
      description: TBD
      summary: Get Profile Team List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile-teams
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProfileTeamList'
          description: ''
  /v2.0/profile/change-password/:
    post:
      operationId: profileChangePasswordCreate
      description: Use this endpoint to change user password
      summary: Change Password
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  /v2.0/profile/reset-password/email/:
    post:
      operationId: profileResetPasswordEmailCreate
      description: Use this endpoint to send email to user with password reset link.
      summary: Email Password Reset
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailPasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailPasswordResetRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPasswordReset'
          description: ''
  /v2.0/profile/reset-password/email/confirm/:
    post:
      operationId: profileResetPasswordEmailConfirmCreate
      description: Use this endpoint to finish email reset password process.
      summary: Email Password Reset Confirm
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailPasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailPasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailPasswordResetConfirmRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailPasswordResetConfirm'
          description: ''
  /v2.0/profile/reset-password/mobile/:
    post:
      operationId: profileResetPasswordMobileCreate
      description: Use this endpoint to send sms to user with password reset code.
      summary: Sms Password Reset
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSPasswordResetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SMSPasswordResetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SMSPasswordResetRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSPasswordReset'
          description: ''
  /v2.0/profile/reset-password/mobile/confirm/:
    post:
      operationId: profileResetPasswordMobileConfirmCreate
      description: Use this endpoint to finish sms reset password process.
      summary: Sms Password Reset Confirm
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SMSPasswordResetConfirmRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SMSPasswordResetConfirmRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SMSPasswordResetConfirmRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSPasswordResetConfirm'
          description: ''
  /v2.0/profiles/:
    post:
      operationId: profilesCreate
      description: Signs up a profile in system.
      summary: Signup
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileSignupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileSignupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileSignupRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileSignup'
          description: ''
  '/v2.0/profiles/{type}/login/':
    post:
      operationId: profilesLoginCreate
      description: Use this endpoint to login with sms token
      summary: Verify Login
      parameters:
        - in: path
          name: type
          schema:
            type: string
            pattern: ^mobile|email$
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyLoginRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyLogin'
          description: ''
  '/v2.0/profiles/{type}/request-login/':
    post:
      operationId: profilesRequestLoginCreate
      description: Use this endpoint to send a login token to user
      summary: Request Login
      parameters:
        - in: path
          name: type
          schema:
            type: string
            pattern: ^mobile|email$
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestLoginRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestLogin'
          description: ''
  /v2.0/profiles/email/request-verification/:
    post:
      operationId: profilesEmailRequestVerificationCreate
      description: >-
        Use this endpoint to send email to user with password email verification
        link.
      summary: Request Email Verification
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      security:
        - JWT Authentication: []
      responses:
        '200':
          description: No response body
  /v2.0/profiles/email/verify/:
    post:
      operationId: profilesEmailVerifyCreate
      description: Use this endpoint to verify user email
      summary: Verify Email
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmail'
          description: ''
  /v2.0/profiles/mobile/request-verification/:
    post:
      operationId: profilesMobileRequestVerificationCreate
      description: >-
        Use this endpoint to send email to user with password email verification
        link.
      summary: Request Phone Verification
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      security:
        - JWT Authentication: []
      responses:
        '200':
          description: No response body
  /v2.0/profiles/mobile/verify/:
    post:
      operationId: profilesMobileVerifyCreate
      description: Use this endpoint to request verification for user phone number
      summary: Verify Phone
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - profiles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyPhoneRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhone'
          description: ''
  '/v2.0/services/{sourceService}/businesses/{sourceSlug}/':
    get:
      operationId: servicesBusinessesRetrieve
      description: TBD
      summary: Business Service
      parameters:
        - in: path
          name: sourceService
          schema:
            type: string
          required: true
        - in: path
          name: sourceSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - services
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessShort'
          description: ''
  '/v2.0/services/{sourceService}/businesses/{sourceSlug}/packages/':
    post:
      operationId: servicesBusinessesPackagesCreate
      description: TBD
      summary: Purchase Package
      parameters:
        - in: path
          name: sourceService
          schema:
            type: string
          required: true
        - in: path
          name: sourceSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - services
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  '/v2.0/services/{sourceService}/businesses/{sourceSlug}/plans/':
    post:
      operationId: servicesBusinessesPlansCreate
      description: purchase a plan
      summary: Purchase Plan
      parameters:
        - in: path
          name: sourceService
          schema:
            type: string
          required: true
        - in: path
          name: sourceSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - services
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  /v2.0/social-auth/convert-token/:
    post:
      operationId: socialAuthConvertTokenCreate
      description: |-
        Implements an endpoint to convert a provider token to an access token

        The endpoint is used in the following flows:

        * Authorization code
        * Client credentials
      summary: Convert Token
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - social-auth
      security:
        - JWT Authentication: []
        - {}
      responses:
        '200':
          description: No response body
  /v2.0/social-auth/disconnect-backend/:
    post:
      operationId: socialAuthDisconnectBackendCreate
      description: >-
        An endpoint for disconnect social auth backend providers such as
        Facebook.
      summary: Disconnect Backend
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - social-auth
      security:
        - JWT Authentication: []
      responses:
        '200':
          description: No response body
  /v2.0/social-auth/invalidate-sessions/:
    post:
      operationId: socialAuthInvalidateSessionsCreate
      description: TBD
      summary: Invalidate Sessions
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - social-auth
      responses:
        '200':
          description: No response body
  /v2.0/social-auth/login/:
    post:
      operationId: socialAuthLoginCreate
      description: signup/login base
      summary: Social Login
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - social-auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SocialRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SocialRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Social'
          description: ''
  /v2.0/social-auth/revoke-token/:
    post:
      operationId: socialAuthRevokeTokenCreate
      description: Implements an endpoint to revoke access or refresh tokens
      summary: Revoke Token
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - social-auth
      security:
        - JWT Authentication: []
        - {}
      responses:
        '200':
          description: No response body
  /v2.0/social-auth/token/:
    post:
      operationId: socialAuthTokenCreate
      description: |-
        Implements an endpoint to provide access tokens

        The endpoint is used in the following flows:

        * Authorization code
        * Password
        * Client credentials
      summary: Token
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - social-auth
      security:
        - JWT Authentication: []
        - {}
      responses:
        '200':
          description: No response body
  /v2.0/access-type-descriptions/:
    get:
      operationId: accessTypeDescriptionsList
      description: Get a list of access types and their descriptions.
      summary: Get Access Type Description List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - access-type-descriptions
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccessTypeDescriptionList'
          description: ''
  /v2.0/applications/:
    post:
      operationId: applicationsCreate
      description: TBD
      summary: Request Api Key
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - applications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAPIKeyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAPIKeyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAPIKeyRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAPIKey'
          description: ''
  /v2.0/available-email-servers/:
    get:
      operationId: availableEmailServersList
      description: Get a list of the email servers available for the user.
      summary: Get Email Server Available List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - available-email-servers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailSenderShortList'
          description: ''
    post:
      operationId: availableEmailServersCreate
      description: Create an email server for the user.
      summary: Email Server Available List
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - available-email-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSenderShortRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailSenderShortRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailSenderShortRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSenderShort'
          description: ''
  /v2.0/board-templates/:
    get:
      operationId: boardTemplatesList
      description: TBD
      summary: Get Board Template List
      parameters:
        - in: query
          name: is_default
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - board-templates
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBoardTemplateList'
          description: ''
    post:
      operationId: boardTemplatesCreate
      description: TBD
      summary: Board Template List
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - board-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardTemplateRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardTemplate'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/':
    get:
      operationId: boardsBlocksList
      description: Get a list of boards belonging to a specific form.
      summary: Get Block List
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: query
          name: location
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: type
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlockList'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/{blockSlug}/':
    get:
      operationId: boardsBlocksRetrieve
      description: Get a block with it's main data.
      summary: Block Action
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: ''
    put:
      operationId: boardsBlocksUpdate
      description: Update a block.
      summary: Block Action
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BlockRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: ''
    patch:
      operationId: boardsBlocksPartialUpdate
      description: update a block.
      summary: Block Action
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBlockRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: ''
    delete:
      operationId: boardsBlocksDestroy
      description: delete a block.
      summary: Block Action
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/boards/{boardSlug}/blocks/{blockSlug}/content/':
    get:
      operationId: boardsBlocksContentList
      description: Get content of a block.
      summary: Block Content
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: query
          name: created_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: submit_time
          schema:
            type: string
            format: date-time
          description: >-
            Filter list using timestamps. You can get item on the exact time,
            before (by adding `_lt` and `_lte`), or after that (by adding `_gt`
            and `_gte`) (e.g. `submit_time_gte`).
          examples:
            Example(valueIsUrlencoded):
              value: 2020-12-01T01%3A05%3A37.555114
              summary: Example (value is urlencoded)
        - in: query
          name: tags
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: tracking_code
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlockList'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/form-charts/':
    post:
      operationId: boardsBlocksFormChartsCreate
      description: Use this endpoint to create a form charts block.
      summary: Create Form Charts Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormChartsBlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormChartsBlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormChartsBlockRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormChartsBlock'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/form-display/':
    post:
      operationId: boardsBlocksFormDisplayCreate
      description: Use this endpoint to create a form display block.
      summary: Create Form Display Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormDisplayBlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormDisplayBlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormDisplayBlockRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormDisplayBlock'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/form-result/':
    post:
      operationId: boardsBlocksFormResultCreate
      description: Use this endpoint to create a form result block.
      summary: Create Form Result Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormResultBlockCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormResultBlockCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormResultBlockCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResultBlockCreate'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/form-result/{blockSlug}/duplicate/':
    post:
      operationId: boardsBlocksFormResultDuplicateCreate
      description: Use this endpoint to duplicate a form result block.
      summary: Form Result Block Duplicate
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormResultBlockDuplicateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormResultBlockDuplicateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormResultBlockDuplicateRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormResultBlockDuplicate'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/kanbans/':
    post:
      operationId: boardsBlocksKanbansCreate
      description: Use this endpoint to create a form kanban block.
      summary: Create Kanban Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KanbanBlockCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KanbanBlockCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KanbanBlockCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KanbanBlockCreate'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/menu/':
    post:
      operationId: boardsBlocksMenuCreate
      description: Use this endpoint to create a menu block.
      summary: Create Menu Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuBlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuBlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuBlockRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuBlock'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/reports/':
    post:
      operationId: boardsBlocksReportsCreate
      description: Use this endpoint to create a report block.
      summary: Create Report Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportBlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportBlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportBlockRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportBlock'
          description: ''
  '/v2.0/boards/{boardSlug}/blocks/stats/':
    post:
      operationId: boardsBlocksStatsCreate
      description: Use this endpoint to create a stats block.
      summary: Create Stats Block
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StatsBlockRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StatsBlockRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StatsBlockRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsBlock'
          description: ''
  /v2.0/boards/available-stats/:
    get:
      operationId: boardsAvailableStatsList
      description: Get a list of available stats with their description.
      summary: Get Available Stats List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BoardFormStats'
          description: ''
  /v2.0/categories/:
    get:
      operationId: categoriesList
      description: Get a list of user's forms' categories.
      summary: Get Category List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: categoriesCreate
      description: Create a category for user's forms.
      summary: Create Category
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  '/v2.0/categories/{slug}/':
    get:
      operationId: categoriesRetrieve
      description: Show a category.
      summary: Get Category
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categoriesUpdate
      description: Update a category.
      summary: Edit Category
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categoriesPartialUpdate
      description: Update a category.
      summary: Edit Category
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categoriesDestroy
      description: Delete a category.
      summary: Delete Category
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/categories/{slug}/breadcrumb/':
    get:
      operationId: categoriesBreadcrumbRetrieve
      description: Show a category's breadcrumb.
      summary: Category Breadcrumb
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryBreadcrumb'
          description: ''
  '/v2.0/categories/{slug}/category-users/':
    get:
      operationId: categoriesCategoryUsersList
      description: TBD
      summary: Get Category Users Of Category List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryUserList'
          description: ''
  '/v2.0/categories/{slug}/users/':
    get:
      operationId: categoriesUsersList
      description: TBD
      summary: Get Users Of Category List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - categories
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserShortWithCategoryAccessList'
          description: ''
  /v2.0/category-users/:
    post:
      operationId: categoryUsersCreate
      description: TBD
      summary: Create Category Users
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - category-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryUserRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryUser'
          description: ''
  '/v2.0/category-users/{slug}/':
    delete:
      operationId: categoryUsersDestroy
      description: TBD
      summary: Category User Delete
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - category-users
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/draft-rows/{submitCode}/':
    get:
      operationId: draftRowsRetrieve
      description: TBD
      summary: Draft Row
      parameters:
        - in: path
          name: submitCode
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - draft-rows
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowActions'
          description: ''
    put:
      operationId: draftRowsUpdate
      description: TBD
      summary: Draft Row
      parameters:
        - in: path
          name: submitCode
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - draft-rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowActionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowActionsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowActionsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowActions'
          description: ''
    patch:
      operationId: draftRowsPartialUpdate
      description: TBD
      summary: Draft Row
      parameters:
        - in: path
          name: submitCode
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - draft-rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRowActionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRowActionsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRowActionsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowActions'
          description: ''
  /v2.0/email-servers/:
    get:
      operationId: emailServersList
      description: Get a list of the email servers owned by the user.
      summary: Get Email Server List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-servers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailSenderList'
          description: ''
    post:
      operationId: emailServersCreate
      description: Create a new email server for the user.
      summary: Create Email Server
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSenderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailSenderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailSenderRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSender'
          description: ''
  '/v2.0/email-servers/{slug}/':
    get:
      operationId: emailServersRetrieve
      description: Get an email server object.
      summary: Get Email Server
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-servers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSender'
          description: ''
    put:
      operationId: emailServersUpdate
      description: Update an email server.
      summary: Edit Email Server
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSenderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailSenderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailSenderRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSender'
          description: ''
    patch:
      operationId: emailServersPartialUpdate
      description: Update an email server.
      summary: Edit Email Server
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-servers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailSenderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailSenderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailSenderRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSender'
          description: ''
    delete:
      operationId: emailServersDestroy
      description: Delete an email server.
      summary: Delete Email Server
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-servers
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/email-template-examples/:
    get:
      operationId: emailTemplateExamplesList
      description: Use to get a list of email template examples.
      summary: Get Email Template Example List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-template-examples
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailTemplateExampleList'
          description: ''
    post:
      operationId: emailTemplateExamplesCreate
      description: Use to create an email template.
      summary: Email Template Example List
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-template-examples
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateExampleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTemplateExampleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTemplateExampleRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateExample'
          description: ''
  /v2.0/email-templates/:
    get:
      operationId: emailTemplatesList
      description: Use to get a list of User's email templates.
      summary: Get Email Template List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEmailTemplateList'
          description: ''
    post:
      operationId: emailTemplatesCreate
      description: Use to create an email template.
      summary: Create Email Template
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTemplateRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
  '/v2.0/email-templates/{slug}/':
    get:
      operationId: emailTemplatesRetrieve
      description: Use to get the email template object.
      summary: Get Email Template Object
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
    put:
      operationId: emailTemplatesUpdate
      description: Use to update the email template object.
      summary: Edit Email Template Object
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailTemplateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
    patch:
      operationId: emailTemplatesPartialUpdate
      description: Use to update the email template object.
      summary: Edit Email Template Object
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmailTemplateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmailTemplateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmailTemplateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplate'
          description: ''
    delete:
      operationId: emailTemplatesDestroy
      description: Use to delete the email template object.
      summary: Delete Email Template Object
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/email-templates/{slug}/copy/':
    post:
      operationId: emailTemplatesCopyCreate
      description: Use to copy an email template.
      summary: Email Template Copy
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email-templates
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  /v2.0/email_verifications/:
    post:
      operationId: emailVerificationsCreate
      description: Create an Email OTP and return UUID for further verification with token.
      summary: Request Email Verification
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email_verifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEmailVerificationOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestEmailVerificationOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestEmailVerificationOTPRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestEmailVerificationOTP'
          description: ''
  '/v2.0/email_verifications/{uuid}/resend/':
    put:
      operationId: emailVerificationsResendUpdate
      description: Update an Email OTP. (give the UUID and token.)
      summary: Resend Email Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email_verifications
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailOTP'
          description: ''
    patch:
      operationId: emailVerificationsResendPartialUpdate
      description: Update an Email OTP. (give the UUID and token.)
      summary: Resend Email Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email_verifications
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendEmailOTP'
          description: ''
  '/v2.0/email_verifications/{uuid}/verify/':
    put:
      operationId: emailVerificationsVerifyUpdate
      description: Update an Email OTP. (give the UUID and token.)
      summary: Verify Email Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email_verifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmailOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmailOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmailOTPRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmailOTP'
          description: ''
    patch:
      operationId: emailVerificationsVerifyPartialUpdate
      description: Update an Email OTP. (give the UUID and token.)
      summary: Verify Email Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - email_verifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVerifyEmailOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVerifyEmailOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVerifyEmailOTPRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyEmailOTP'
          description: ''
  /v2.0/fields/:
    post:
      operationId: fieldsCreate
      description: >-
        This endpoint is used to create a field with any type. Although it only
        shows the general fields options on the schema, it accepts and excepts
        all the options needed for the given type.
      summary: Create Generic Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field'
          description: ''
  '/v2.0/fields/{slug}/':
    get:
      operationId: fieldsRetrieve
      description: Read a field's data
      summary: Get Field
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAction'
          description: ''
    put:
      operationId: fieldsUpdate
      description: >-
        update a field's data. Although it only shows the general fields options
        on the schema, it accepts and excepts all the options needed for the
        given field's type.
      summary: Edit Field
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldActionRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAction'
          description: ''
    patch:
      operationId: fieldsPartialUpdate
      description: >-
        update a field's data. Although it only shows the general fields options
        on the schema, it accepts and excepts all the options needed for the
        given field's type.
      summary: Edit Field
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFieldActionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFieldActionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFieldActionRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAction'
          description: ''
    delete:
      operationId: fieldsDestroy
      description: delete a field.
      summary: Delete Field
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/fields/{slug}/choices/':
    get:
      operationId: fieldsChoicesList
      description: TBD
      summary: Field Choices
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: query
          name: slug
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChoiceListList'
          description: ''
  /v2.0/fields/barcode/:
    post:
      operationId: fieldsBarcodeCreate
      description: Use this endpoint to create a barcode field.
      summary: Create Barcode Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BarcodeFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BarcodeFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BarcodeFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarcodeField'
          description: ''
  /v2.0/fields/boolean/:
    post:
      operationId: fieldsBooleanCreate
      description: Use this endpoint to create a true/false input field.
      summary: Create Boolean Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooleanFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BooleanFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BooleanFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanField'
          description: ''
  /v2.0/fields/choice/:
    post:
      operationId: fieldsChoiceCreate
      description: Use this endpoint to create a radio choice input field.
      summary: Create Choice Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChoiceFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChoiceFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChoiceFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceField'
          description: ''
  /v2.0/fields/choice-fetch/:
    post:
      operationId: fieldsChoiceFetchCreate
      description: Use this endpoint to create a choice fetch field.
      summary: Create Choice Fetch Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChoiceFetchFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChoiceFetchFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChoiceFetchFieldRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceFetchField'
          description: ''
  /v2.0/fields/city/:
    post:
      operationId: fieldsCityCreate
      description: Use this endpoint to create a city field.
      summary: Create City Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CityFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CityFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CityField'
          description: ''
  /v2.0/fields/date/:
    post:
      operationId: fieldsDateCreate
      description: Use this endpoint to create a date input field.
      summary: Create Date Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DateFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DateFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateField'
          description: ''
  /v2.0/fields/dropdown/:
    post:
      operationId: fieldsDropdownCreate
      description: Use this endpoint to create a dropdown choice input field.
      summary: Create Drop Down Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropdownFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DropdownFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DropdownFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownField'
          description: ''
  /v2.0/fields/duplicate/:
    post:
      operationId: fieldsDuplicateCreate
      description: 'Copy a form, which is owned by user or a template'
      summary: Duplicate Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DuplicateFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DuplicateFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DuplicateFieldRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  /v2.0/fields/email/:
    post:
      operationId: fieldsEmailCreate
      description: Use this endpoint to create a email input field.
      summary: Create Email Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailField'
          description: ''
  /v2.0/fields/file/:
    post:
      operationId: fieldsFileCreate
      description: Use this endpoint to create a file input field.
      summary: Create File Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileField'
          description: ''
  /v2.0/fields/hidden/:
    post:
      operationId: fieldsHiddenCreate
      description: Use this endpoint to create a hidden field.
      summary: Create Hidden Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HiddenFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HiddenFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HiddenFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HiddenField'
          description: ''
  /v2.0/fields/location/:
    post:
      operationId: fieldsLocationCreate
      description: Use this endpoint to create a location field.
      summary: Create Location Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LocationFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LocationFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationField'
          description: ''
  /v2.0/fields/long_text/:
    post:
      operationId: fieldsLongTextCreate
      description: Use this endpoint to create a long text input field.
      summary: Create Text Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TextFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TextFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextField'
          description: ''
  /v2.0/fields/lookup/:
    post:
      operationId: fieldsLookupCreate
      description: Use this endpoint to create a lopkup field.
      summary: Create Lookup Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LookupFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LookupFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LookupFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupField'
          description: ''
  /v2.0/fields/matrix/:
    post:
      operationId: fieldsMatrixCreate
      description: Use this endpoint to create a matrix input field.
      summary: Create Matrix Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatrixFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MatrixFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MatrixFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatrixField'
          description: ''
  /v2.0/fields/meta/:
    post:
      operationId: fieldsMetaCreate
      description: Use this endpoint to create a meta field.
      summary: Create Meta Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MetaFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetaFieldRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaField'
          description: ''
  /v2.0/fields/money/:
    post:
      operationId: fieldsMoneyCreate
      description: Use this endpoint to create a money input field.
      summary: Create Money Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MoneyFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MoneyFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyField'
          description: ''
  /v2.0/fields/multiple_select/:
    post:
      operationId: fieldsMultipleSelectCreate
      description: Use this endpoint to create a multiple select input field.
      summary: Create Multiple Select Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleSelectFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MultipleSelectFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipleSelectFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleSelectField'
          description: ''
  /v2.0/fields/number/:
    post:
      operationId: fieldsNumberCreate
      description: Use this endpoint to create a number input field.
      summary: Create Number Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NumberFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NumberFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberField'
          description: ''
  /v2.0/fields/oembed/:
    post:
      operationId: fieldsOembedCreate
      description: Use this endpoint to create a oembed field.
      summary: Create Oembed Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OembedFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OembedFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OembedFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OembedField'
          description: ''
  /v2.0/fields/phone/:
    post:
      operationId: fieldsPhoneCreate
      description: Use this endpoint to create a phone input field.
      summary: Create Phone Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneField'
          description: ''
  /v2.0/fields/phone_verification/:
    post:
      operationId: fieldsPhoneVerificationCreate
      description: Use this endpoint to create a phone input field.
      summary: Create Phone Verification Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneVerificationFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneVerificationFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneVerificationFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneVerificationField'
          description: ''
  /v2.0/fields/product/:
    post:
      operationId: fieldsProductCreate
      description: Use this endpoint to create a product.
      summary: Create Product Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductField'
          description: ''
  /v2.0/fields/rating/:
    post:
      operationId: fieldsRatingCreate
      description: Use this endpoint to create a rating input field.
      summary: Create Rating Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RatingFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RatingFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingField'
          description: ''
  /v2.0/fields/short_text/:
    post:
      operationId: fieldsShortTextCreate
      description: Use this endpoint to create a short text input field.
      summary: Create Char Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CharFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CharFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharField'
          description: ''
  /v2.0/fields/signature/:
    post:
      operationId: fieldsSignatureCreate
      description: Use this endpoint to create a signature input field.
      summary: Create Signature Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SignatureFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SignatureFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureField'
          description: ''
  /v2.0/fields/text_choice/:
    post:
      operationId: fieldsTextChoiceCreate
      description: Use this endpoint to create a text choice field.
      summary: Create Text Choice Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextChoiceFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TextChoiceFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TextChoiceFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextChoiceField'
          description: ''
  /v2.0/fields/time/:
    post:
      operationId: fieldsTimeCreate
      description: Use this endpoint to create a time input field.
      summary: Create Time Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeField'
          description: ''
  /v2.0/fields/website/:
    post:
      operationId: fieldsWebsiteCreate
      description: Use this endpoint to create a web input field.
      summary: Create Website Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsiteFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsiteFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsiteFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsiteField'
          description: ''
  /v2.0/fields/yes_no/:
    post:
      operationId: fieldsYesNoCreate
      description: Use this endpoint to create a yes/no input field.
      summary: Create Yes No Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YesNoFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/YesNoFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/YesNoFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YesNoField'
          description: ''
  /v2.0/force-updates/:
    get:
      operationId: forceUpdatesList
      description: Use this endpoint to see a list of force update items.
      summary: Get Force Updates List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - force-updates
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedForceUpdateList'
          description: ''
  /v2.0/form-and-rows/:
    get:
      operationId: formAndRowsList
      description: TBD
      summary: Search Forms And Rows
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-and-rows
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormSummaryList'
          description: ''
  '/v2.0/form-displays/address/{address}/':
    get:
      operationId: formDisplaysAddressRetrieve
      description: Show a form and it's fields by form address.
      summary: Show Form
      parameters:
        - in: path
          name: address
          schema:
            type: string
            description: >-
              A unique string to identify form for users. It's auto-generated if
              not set by user.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-displays
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowForm'
          description: ''
  /v2.0/form-displays/by-domain/:
    get:
      operationId: formDisplaysByDomainRetrieve
      description: Show a form and it's fields by form address.
      summary: Show Form
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-displays
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowForm'
          description: ''
  '/v2.0/form-displays/slug/{slug}/':
    get:
      operationId: formDisplaysSlugRetrieve
      description: Show a form and it's fields by form slug.
      summary: Get Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-displays
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowForm'
          description: ''
  '/v2.0/form-displays/slug/{slug}/submit/':
    post:
      operationId: formDisplaysSlugSubmitCreate
      description: Submit a form.
      summary: Submit Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-displays
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubmitFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubmitFormRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitForm'
          description: ''
  '/v2.0/form-displays/tag/{address}/':
    get:
      operationId: formDisplaysTagList
      description: Show a list of forms that have a specific tag
      summary: Tag Forms
      parameters:
        - in: path
          name: address
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-displays
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShowFormSummaryList'
          description: ''
  /v2.0/form-excel-imports/:
    post:
      operationId: formExcelImportsCreate
      description: TBD
      summary: Form Import Api
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-excel-imports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormImportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormImportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormImportRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  '/v2.0/form-shares/{slug}/':
    delete:
      operationId: formSharesDestroy
      description: TBD
      summary: Remove Access On Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-shares
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/form-tags/:
    get:
      operationId: formTagsList
      description: Get a list of form tags created by current user.
      summary: Get Form Tag List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-tags
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormTagList'
          description: ''
    post:
      operationId: formTagsCreate
      description: Create a form tag.
      summary: Create Form Tag
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormTagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormTag'
          description: ''
  '/v2.0/form-tags/{slug}/':
    get:
      operationId: formTagsRetrieve
      description: Show a form tag.
      summary: Get Form Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-tags
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormTag'
          description: ''
    put:
      operationId: formTagsUpdate
      description: Update a form tag.
      summary: Edit Form Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormTagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormTag'
          description: ''
    patch:
      operationId: formTagsPartialUpdate
      description: Update a form tag.
      summary: Edit Form Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormTagRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormTag'
          description: ''
    delete:
      operationId: formTagsDestroy
      description: Delete a form tag.
      summary: Delete Form Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-tags
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/form-templates/:
    get:
      operationId: formTemplatesList
      description: Show a list of templates list.
      summary: Get Form Template List
      parameters:
        - in: query
          name: categories
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: tags
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-templates
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormTemplateList'
          description: ''
  /v2.0/form-themes/:
    get:
      operationId: formThemesList
      description: Get a list of form
      summary: Get Theme List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-themes
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedThemeList'
          description: ''
    post:
      operationId: formThemesCreate
      description: Create a category for user's forms.
      summary: Create Theme
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - form-themes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThemeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ThemeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ThemeRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Theme'
          description: ''
  /v2.0/forms/:
    get:
      operationId: formsList
      description: Give a list of all forms created by or shared with the current user.
      summary: Get Form List
      parameters:
        - in: query
          name: categories
          schema:
            type: string
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: copied_from
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: slug
          schema:
            type: string
        - in: query
          name: tag
          schema:
            type: string
        - in: query
          name: tags
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormSummaryList'
          description: ''
    post:
      operationId: formsCreate
      description: Creates a dynamic form for the current user.
      summary: Create Form
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateFormRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateForm'
          description: ''
  /v2.0/forms-businesses/:
    get:
      operationId: formsBusinessesList
      description: TBD
      summary: Get Business List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms-businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortBusiness'
          description: ''
  /v2.0/forms-currencies/:
    get:
      operationId: formsCurrenciesList
      description: TBD
      summary: Get Currency List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms-currencies
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCurrencyList'
          description: ''
  /v2.0/forms-profile/:
    get:
      operationId: formsProfileRetrieve
      description: Gives full profile information.
      summary: Get Profile Edit
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms-profile
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile1'
          description: ''
    put:
      operationId: formsProfileUpdate
      description: Updates the profile information.
      summary: Profile Retrieve Edit
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms-profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileUpdateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileUpdate'
          description: ''
    patch:
      operationId: formsProfilePartialUpdate
      description: Updates the profile information.
      summary: Profile Retrieve Edit
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms-profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProfileUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileUpdate'
          description: ''
  /v2.0/forms-profile/extensions-stats/:
    get:
      operationId: formsProfileExtensionsStatsRetrieve
      description: TBD
      summary: Profile Extensions Stats
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms-profile
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileExtensionsStats'
          description: ''
  '/v2.0/forms/{formSlug}/boards/':
    get:
      operationId: formsBoardsList
      description: Get a list of boards belonging to a specific form.
      summary: Get Board List
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBoardListList'
          description: ''
    post:
      operationId: formsBoardsCreate
      description: Get a new board for the form.
      summary: Create Board
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
  '/v2.0/forms/{formSlug}/boards/{boardShareAddress}/copy/':
    post:
      operationId: formsBoardsCopyCreate
      description: copy a board
      summary: Board Copy
      parameters:
        - in: path
          name: boardShareAddress
          schema:
            type: string
          required: true
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardCopyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardCopyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardCopyRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardCopy'
          description: ''
  '/v2.0/forms/{formSlug}/boards/{boardSlug}/':
    get:
      operationId: formsBoardsRetrieve
      description: Get a board with it's main data.
      summary: Board Action
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateBoard'
          description: ''
    put:
      operationId: formsBoardsUpdate
      description: Update a board.
      summary: Board Action
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUpdate'
          description: ''
    patch:
      operationId: formsBoardsPartialUpdate
      description: Update a board.
      summary: Board Action
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBoardUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBoardUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBoardUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUpdate'
          description: ''
    delete:
      operationId: formsBoardsDestroy
      description: Delete a board.
      summary: Board Action
      parameters:
        - in: path
          name: boardSlug
          schema:
            type: string
          required: true
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/forms/{formSlug}/boards/primary/':
    get:
      operationId: formsBoardsPrimaryRetrieve
      description: Get the form's primary board.
      summary: Primary Board
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateBoard'
          description: ''
    put:
      operationId: formsBoardsPrimaryUpdate
      description: Update the form's primary board.
      summary: Primary Board
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BoardUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BoardUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BoardUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUpdate'
          description: ''
    patch:
      operationId: formsBoardsPrimaryPartialUpdate
      description: Update the form's primary board.
      summary: Primary Board
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBoardUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBoardUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBoardUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BoardUpdate'
          description: ''
    delete:
      operationId: formsBoardsPrimaryDestroy
      description: Delete the form's primary board.
      summary: Primary Board
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/forms/{formSlug}/combined-fields-charts/':
    get:
      operationId: formsCombinedFieldsChartsList
      description: Get a list of combined_fields_charts belonging to a specific form.
      summary: Get Form Combined Fields Chart List
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: type
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCombinedFieldsChartList'
          description: ''
  '/v2.0/forms/{formSlug}/reports/':
    get:
      operationId: formsReportsList
      description: Get a list of combined_fields_charts belonging to a specific form.
      summary: Get Form Reports List
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: type
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReportList'
          description: ''
  '/v2.0/forms/{formSlug}/table-charts/':
    get:
      operationId: formsTableChartsList
      description: Get a list of table charts belonging to a specific form.
      summary: Get Form Table Chart List
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: type
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTableChartList'
          description: ''
  '/v2.0/forms/{formSlug}/webhooks/':
    get:
      operationId: formsWebhooksList
      description: TBD
      summary: Get Form Webhook List
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormWebhook'
          description: ''
    post:
      operationId: formsWebhooksCreate
      description: TBD
      summary: Create Form Webhook
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormWebhookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormWebhookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormWebhookRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormWebhook'
          description: ''
  '/v2.0/forms/{formSlug}/webhooks/{slug}/':
    get:
      operationId: formsWebhooksRetrieve
      description: Show a form webhook.
      summary: Get Form Webhook
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormWebhook'
          description: ''
    put:
      operationId: formsWebhooksUpdate
      description: Update a form webhook.
      summary: Edit Form Webhook
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormWebhookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormWebhookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormWebhookRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormWebhook'
          description: ''
    patch:
      operationId: formsWebhooksPartialUpdate
      description: Update a form webhook.
      summary: Edit Form Webhook
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormWebhookRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormWebhookRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormWebhookRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormWebhook'
          description: ''
    delete:
      operationId: formsWebhooksDestroy
      description: Delete a form webhook.
      summary: Delete Form Webhook
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/forms/{formSlug}/webhooks/{slug}/sample-data/':
    get:
      operationId: formsWebhooksSampleDataRetrieve
      description: TBD
      summary: Webhook Sample Data
      parameters:
        - in: path
          name: formSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookSampleData'
          description: ''
  '/v2.0/forms/{slug}/':
    get:
      operationId: formsRetrieve
      description: Show a form and its fields.
      summary: Get Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormUpdate'
          description: ''
    put:
      operationId: formsUpdate
      description: Update a form.
      summary: Edit Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormUpdateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormUpdate'
          description: ''
    patch:
      operationId: formsPartialUpdate
      description: Update a form.
      summary: Edit Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormUpdate'
          description: ''
    delete:
      operationId: formsDestroy
      description: Delete a form and all its submitted data.
      summary: Delete Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/forms/{slug}/copy/':
    post:
      operationId: formsCopyCreate
      description: 'Copy a form, which is owned by user or a template'
      summary: Copy Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CopyFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CopyFormRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyForm'
          description: ''
  '/v2.0/forms/{slug}/excel-export/':
    post:
      operationId: formsExcelExportCreate
      description: Export form data to excel.
      summary: Export Excel
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  '/v2.0/forms/{slug}/fields/':
    put:
      operationId: formsFieldsUpdate
      description: Update a form's fields. (give the list of form fields.)
      summary: Form Fields
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormFieldRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormField'
          description: ''
    patch:
      operationId: formsFieldsPartialUpdate
      description: Update a form's fields. (give the list of form fields.)
      summary: Form Fields
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormFieldRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormFieldRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormFieldRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormField'
          description: ''
  '/v2.0/forms/{slug}/get-utm-query/':
    post:
      operationId: formsGetUtmQueryCreate
      description: Create a UTM tracker for the form.
      summary: Create Utm Tracker
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUTMTrackerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateUTMTrackerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateUTMTrackerRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUTMTracker'
          description: ''
  '/v2.0/forms/{slug}/google-sheet-export/':
    post:
      operationId: formsGoogleSheetExportCreate
      description: Export form data to excel.
      summary: Export To Google Sheets
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportToGoogleSheetsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExportToGoogleSheetsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExportToGoogleSheetsRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          description: No response body
  '/v2.0/forms/{slug}/live-dashboard-code/':
    get:
      operationId: formsLiveDashboardCodeRetrieve
      description: Create the form's current active live dashboard code.
      summary: Form Live Dashboard Code Get Create
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveDashboardCode'
          description: ''
    post:
      operationId: formsLiveDashboardCodeCreate
      description: 'Create a live dashboard code for a form, replacing any existing code.'
      summary: Create Form Live Dashboard Code Get
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LiveDashboardCode'
          description: ''
  '/v2.0/forms/{slug}/row-tags/':
    get:
      operationId: formsRowTagsList
      description: TBD
      summary: Row Tag
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRowTagList'
          description: ''
    post:
      operationId: formsRowTagsCreate
      description: TBD
      summary: Row Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowTagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowTag'
          description: ''
  '/v2.0/forms/{slug}/row-tags/{tagSlug}/':
    get:
      operationId: formsRowTagsRetrieve
      description: TBD
      summary: Row Tag
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: path
          name: tagSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowTag'
          description: ''
    put:
      operationId: formsRowTagsUpdate
      description: TBD
      summary: Row Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: path
          name: tagSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowTagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowTag'
          description: ''
    patch:
      operationId: formsRowTagsPartialUpdate
      description: TBD
      summary: Row Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: path
          name: tagSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRowTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRowTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRowTagRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowTag'
          description: ''
    delete:
      operationId: formsRowTagsDestroy
      description: TBD
      summary: Row Tag
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: path
          name: tagSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/forms/{slug}/rows/':
    get:
      operationId: formsRowsList
      description: Show a form with all of it's submitted data.
      summary: Form Rows
      parameters:
        - in: query
          name: created_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: query
          name: submit_time
          schema:
            type: string
            format: date-time
          description: >-
            Filter list using timestamps. You can get item on the exact time,
            before (by adding `_lt` and `_lte`), or after that (by adding `_gt`
            and `_gte`) (e.g. `submit_time_gte`).
          examples:
            Example(valueIsUrlencoded):
              value: 2020-12-01T01%3A05%3A37.555114
              summary: Example (value is urlencoded)
        - in: query
          name: tags
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: tracking_code
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRowList'
          description: ''
    post:
      operationId: formsRowsCreate
      description: Create a row (submit) on the form.
      summary: Form Rows
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRowRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRowRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRowRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRow'
          description: ''
  '/v2.0/forms/{slug}/rows/bulk-delete/':
    post:
      operationId: formsRowsBulkDeleteCreate
      description: TBD
      summary: Row Bulk Delete
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowBulkDeleteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowBulkDeleteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowBulkDeleteRequest'
        required: true
      security:
        - JWT Authentication: []
        - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowBulkDelete'
          description: ''
  '/v2.0/forms/{slug}/share/':
    post:
      operationId: formsShareCreate
      description: TBD
      summary: Share Access On Form
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShareAccessOnFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ShareAccessOnFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ShareAccessOnFormRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShareAccessOnForm'
          description: ''
  '/v2.0/forms/{slug}/shared-users/':
    get:
      operationId: formsSharedUsersList
      description: TBD
      summary: Get Form Shared Profiles List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFormSharedProfilesListList'
          description: ''
  '/v2.0/forms/{slug}/stats/':
    get:
      operationId: formsStatsRetrieve
      description: Give some simple stats about the form data
      summary: Form Stats
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - forms
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormStats'
          description: ''
  /v2.0/live-dashboards/:
    post:
      operationId: liveDashboardsCreate
      description: Get a form's data by its live dashboard code.
      summary: Form Live Dashboard Code
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLiveDashboardCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetLiveDashboardCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetLiveDashboardCodeRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLiveDashboardCode'
          description: ''
  '/v2.0/live-dashboards/{liveDashboardAddress}/':
    get:
      operationId: liveDashboardsRetrieve
      description: Give the stats for a live dashboard form.
      summary: Form Live Dashboard
      parameters:
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormLiveDashboard'
          description: ''
  '/v2.0/live-dashboards/{liveDashboardAddress}/rows/':
    get:
      operationId: liveDashboardsRowsList
      description: Give the list of all submits for a live dashboard form.
      summary: Form Live Dashboard Rows
      parameters:
        - in: query
          name: created_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: submit_time
          schema:
            type: string
            format: date-time
          description: >-
            Filter list using timestamps. You can get item on the exact time,
            before (by adding `_lt` and `_lte`), or after that (by adding `_gt`
            and `_gte`) (e.g. `submit_time_gte`).
          examples:
            Example(valueIsUrlencoded):
              value: 2020-12-01T01%3A05%3A37.555114
              summary: Example (value is urlencoded)
        - in: query
          name: tags
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: tracking_code
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRowList'
          description: ''
    post:
      operationId: liveDashboardsRowsCreate
      description: Give the list of all submits for a live dashboard form.
      summary: Form Live Dashboard Rows
      parameters:
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddRowRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AddRowRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AddRowRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddRow'
          description: ''
  '/v2.0/live-dashboards/{liveDashboardAddress}/rows/{rowSlug}/votes/':
    get:
      operationId: liveDashboardsRowsVotesRetrieve
      description: TBD
      summary: Form Live Dashboard Row Votes
      parameters:
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - in: path
          name: rowSlug
          schema:
            type: string
          required: true
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowVote'
          description: ''
    post:
      operationId: liveDashboardsRowsVotesCreate
      description: TBD
      summary: Form Live Dashboard Row Votes
      parameters:
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - in: path
          name: rowSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowVoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowVoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowVoteRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowVote'
          description: ''
  '/v2.0/live-dashboards/{liveDashboardAddress}/rows/{rowSlug}/votes/{slug}/':
    put:
      operationId: liveDashboardsRowsVotesUpdate
      description: TBD
      summary: Form Live Dashboard Row Votes
      parameters:
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - in: path
          name: rowSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowVoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowVoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowVoteRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowVote'
          description: ''
    delete:
      operationId: liveDashboardsRowsVotesDestroy
      description: TBD
      summary: Form Live Dashboard Row Votes
      parameters:
        - in: path
          name: liveDashboardAddress
          schema:
            type: string
          required: true
        - in: path
          name: rowSlug
          schema:
            type: string
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - live-dashboards
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/payment-methods/:
    get:
      operationId: paymentMethodsList
      description: TBD
      summary: Payment Method
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - payment-methods
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentMethodList'
          description: ''
    post:
      operationId: paymentMethodsCreate
      description: TBD
      summary: Payment Method
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
  '/v2.0/payment-methods/{slug}/':
    get:
      operationId: paymentMethodsRetrieve
      description: TBD
      summary: Payment Method
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - payment-methods
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
    put:
      operationId: paymentMethodsUpdate
      description: TBD
      summary: Payment Method
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - payment-methods
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMethodRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
          description: ''
  /v2.0/phone_verifications/:
    post:
      operationId: phoneVerificationsCreate
      description: Create SMSOTP and return UUID for further verification with token.
      summary: Request Phone Verification
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - phone_verifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerificationOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerificationOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RequestPhoneVerificationOTPRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPhoneVerificationOTP'
          description: ''
  '/v2.0/phone_verifications/{uuid}/resend/':
    put:
      operationId: phoneVerificationsResendUpdate
      description: Update a SMSOTP. (give the UUID and token.)
      summary: Resend Phone Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - phone_verifications
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendPhoneOTP'
          description: ''
    patch:
      operationId: phoneVerificationsResendPartialUpdate
      description: Update a SMSOTP. (give the UUID and token.)
      summary: Resend Phone Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - phone_verifications
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResendPhoneOTP'
          description: ''
  '/v2.0/phone_verifications/{uuid}/verify/':
    put:
      operationId: phoneVerificationsVerifyUpdate
      description: Update a SMSOTP. (give the UUID and token.)
      summary: Verify Phone Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - phone_verifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyPhoneOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyPhoneOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyPhoneOTPRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhoneOTP'
          description: ''
    patch:
      operationId: phoneVerificationsVerifyPartialUpdate
      description: Update a SMSOTP. (give the UUID and token.)
      summary: Verify Phone Verification
      parameters:
        - in: path
          name: uuid
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - phone_verifications
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVerifyPhoneOTPRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVerifyPhoneOTPRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVerifyPhoneOTPRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyPhoneOTP'
          description: ''
  /v2.0/push-notification-register/:
    post:
      operationId: pushNotificationRegisterCreate
      description: Register a user to receive notifications on a device.
      summary: Register Client
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - push-notification-register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterClientRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterClientRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RegisterClientRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterClient'
          description: ''
  /v2.0/push-notification-unregister/:
    post:
      operationId: pushNotificationUnregisterCreate
      description: Un-register a user from receiving notifications on a device.
      summary: Un Register Client
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - push-notification-unregister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnRegisterClientRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UnRegisterClientRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UnRegisterClientRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnRegisterClient'
          description: ''
  '/v2.0/reports/{reportSlug}/':
    get:
      operationId: reportsRetrieve
      description: Get a report with it's main data.
      summary: Report Action
      parameters:
        - in: path
          name: reportSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - reports
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    put:
      operationId: reportsUpdate
      description: Update a report.
      summary: Report Action
      parameters:
        - in: path
          name: reportSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ReportRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    patch:
      operationId: reportsPartialUpdate
      description: Update a report.
      summary: Report Action
      parameters:
        - in: path
          name: reportSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReportRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
          description: ''
    delete:
      operationId: reportsDestroy
      description: Delete a report.
      summary: Report Action
      parameters:
        - in: path
          name: reportSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - reports
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/reports/combined-fields-charts/:
    post:
      operationId: reportsCombinedFieldsChartsCreate
      description: Use this endpoint to create a combined fields chart.
      summary: Create Combined Fields Chart
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CombinedFieldsChartCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CombinedFieldsChartCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CombinedFieldsChartCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedFieldsChartCreate'
          description: ''
  /v2.0/reports/table-charts/:
    post:
      operationId: reportsTableChartsCreate
      description: Use this endpoint to create a table chart.
      summary: Create Table Chart
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - reports
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TableChartCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TableChartCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TableChartCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableChartCreate'
          description: ''
  '/v2.0/row-results/{submitCode}/':
    get:
      operationId: rowResultsRetrieve
      description: Use the submit code of a row to show it's submit results.
      summary: Row Result
      parameters:
        - in: path
          name: submitCode
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - row-results
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowResult'
          description: ''
  /v2.0/rows/:
    get:
      operationId: rowsList
      description: Show a list of all submitted data for user.
      summary: Get Row List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: tags
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: tracking_code
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - rows
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRowSearchList'
          description: ''
  '/v2.0/rows/{slug}/':
    get:
      operationId: rowsRetrieve
      description: Get a submitted row.
      summary: Row
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - rows
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowActions'
          description: ''
    put:
      operationId: rowsUpdate
      description: Update a submitted row.
      summary: Row
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RowActionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RowActionsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RowActionsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowActions'
          description: ''
    patch:
      operationId: rowsPartialUpdate
      description: Update a submitted row.
      summary: Row
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - rows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRowActionsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRowActionsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRowActionsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RowActions'
          description: ''
    delete:
      operationId: rowsDestroy
      description: Delete a submitted row.
      summary: Row
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - rows
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/shared-boards/{boardShareAddress}/':
    get:
      operationId: sharedBoardsRetrieve
      description: Use to retrieve a board shared by its share address.
      summary: Get Shared Board
      parameters:
        - in: path
          name: boardShareAddress
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - shared-boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
          description: ''
  '/v2.0/shared-boards/{boardShareAddress}/blocks/':
    get:
      operationId: sharedBoardsBlocksList
      description: >-
        Use to retrieve the list of blocks on a board shared by its share
        address.
      summary: Get Shared Board Block List
      parameters:
        - in: path
          name: boardShareAddress
          schema:
            type: string
          required: true
        - in: query
          name: location
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: type
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - shared-boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlockList'
          description: ''
  '/v2.0/shared-boards/{boardShareAddress}/blocks/{blockSlug}/':
    get:
      operationId: sharedBoardsBlocksRetrieve
      description: Use to retrieve a block from a board shared by its share address.
      summary: Get Shared Board Block
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardShareAddress
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - shared-boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Block'
          description: ''
  '/v2.0/shared-boards/{boardShareAddress}/blocks/{blockSlug}/content/':
    get:
      operationId: sharedBoardsBlocksContentList
      description: >-
        Use to retrieve contents of a block from a board shared by its share
        address.
      summary: Shared Board Block Content
      parameters:
        - in: path
          name: blockSlug
          schema:
            type: string
          required: true
        - in: path
          name: boardShareAddress
          schema:
            type: string
          required: true
        - in: query
          name: created_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: submit_time
          schema:
            type: string
            format: date-time
          description: >-
            Filter list using timestamps. You can get item on the exact time,
            before (by adding `_lt` and `_lte`), or after that (by adding `_gt`
            and `_gte`) (e.g. `submit_time_gte`).
          examples:
            Example(valueIsUrlencoded):
              value: 2020-12-01T01%3A05%3A37.555114
              summary: Example (value is urlencoded)
        - in: query
          name: tags
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: tracking_code
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - shared-boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBlockList'
          description: ''
  /v2.0/template-boards/:
    get:
      operationId: templateBoardsList
      description: TBD
      summary: Get Template Boards List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: tags
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - template-boards
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBoardListList'
          description: ''
  /v2.0/template-categories/:
    get:
      operationId: templateCategoriesList
      description: Get a list of templates' categories.
      summary: Get Template Category List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - template-categories
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /v2.0/template-tags/:
    get:
      operationId: templateTagsList
      description: Get a list of templates' tags.
      summary: Get Template Form Tag List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - template-tags
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormTag'
          description: ''
  /v2.0/files/:
    post:
      operationId: filesCreate
      description: TBD
      summary: File Upload
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpload'
          description: ''
  '/v2.0/files/{slug}/':
    get:
      operationId: filesRetrieve
      description: TBD
      summary: Get File
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - files
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileRetrieve'
          description: ''
  '/v2.0/files/{slug}/verify/':
    put:
      operationId: filesVerifyUpdate
      description: TBD
      summary: File Verify
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileVerifyRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVerify'
          description: ''
    patch:
      operationId: filesVerifyPartialUpdate
      description: TBD
      summary: File Verify
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFileVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFileVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFileVerifyRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileVerify'
          description: ''
  /v2.0/files/bulk-verify/:
    post:
      operationId: filesBulkVerifyCreate
      description: TBD
      summary: Bulk File Verify
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkFileVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BulkFileVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkFileVerifyRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkFileVerify'
          description: ''
  /v2.0/action-type-groups/:
    get:
      operationId: actionTypeGroupsList
      description: >-
        Use this endpoint to get a list of all action type groups, if you want
        to create your action type based on one of them.
      summary: Get Action Type Group List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-type-groups
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionTypeGroupList'
          description: ''
  /v2.0/action-types/:
    get:
      operationId: actionTypesList
      description: >-
        Use this endpoint to get a list of all action types defined on your
        integration, or the integrations you're using.
      summary: Get Action Type List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: query
          name: integration
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-types
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActionTypeList'
          description: ''
    post:
      operationId: actionTypesCreate
      description: >-
        Use this endpoint to create a custom action type on your integration, if
        you want to catch a desired activity (e.g. visiting a page).
      summary: Create Action Type
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionTypeCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionTypeCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionTypeCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeCreate'
          description: ''
  '/v2.0/action-types/{slug}/':
    get:
      operationId: actionTypesRetrieve
      description: Get a specific action type with its data.
      summary: Get Action Type
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-types
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionType'
          description: ''
    put:
      operationId: actionTypesUpdate
      description: Update an action type's data.
      summary: Edit Action Type
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActionTypeUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActionTypeUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActionTypeUpdateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeUpdate'
          description: ''
    patch:
      operationId: actionTypesPartialUpdate
      description: Update an action type's data.
      summary: Edit Action Type
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-types
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedActionTypeUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedActionTypeUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedActionTypeUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionTypeUpdate'
          description: ''
    delete:
      operationId: actionTypesDestroy
      description: Delete an action type.
      summary: Delete Action Type
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - action-types
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/activities/:
    get:
      operationId: activitiesList
      description: >-
        Use this endpoint to get a list of all activities created for the
        cuurent business using this integration.
      summary: Get Activity List
      parameters:
        - in: query
          name: action
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: action_type
          schema:
            type: string
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: query
          name: activity_date
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: query
          name: created_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: query
          name: customer
          schema:
            type: string
        - in: query
          name: operation_type
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - activities
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityListList'
          description: ''
    post:
      operationId: activitiesCreate
      description: >-
        Use this endpoint to create an activity for a new or existing customer
        (e.g. An rer was created, a form was submitted, etc).
      summary: Create Activity
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateActivitySrializerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateActivitySrializerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateActivitySrializerRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateActivitySrializer'
          description: ''
  /v2.0/activities/batch/:
    post:
      operationId: activitiesBatchCreate
      description: Create a batch activity creation job based on json data or json file.
      summary: Create Activity Batch Import
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - activities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityBatchImportSerialierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ActivityBatchImportSerialierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ActivityBatchImportSerialierRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityBatchImportSerialier'
          description: ''
  '/v2.0/activities/batch/{slug}/':
    get:
      operationId: activitiesBatchRetrieve
      description: Get a activity batch import object to see its status.
      summary: Get Activity Batch Import
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - activities
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityBatchImportSerialier'
          description: ''
  /v2.0/business-stats/:
    get:
      operationId: businessStatsRetrieve
      description: Gives the basic stats for the business.
      summary: Business Stats
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - business-stats
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessStats'
          description: ''
  /v2.0/cdp-businesses/:
    get:
      operationId: cdpBusinessesList
      description: Gives a list of available businesses for the current user.
      summary: Get Business List
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business1'
          description: ''
    post:
      operationId: cdpBusinessesCreate
      description: Create a new business for the current user.
      summary: Business List
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest1'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business1'
          description: ''
  '/v2.0/cdp-businesses/{slug}/':
    get:
      operationId: cdpBusinessesRetrieve
      description: Get a customer's data.
      summary: Get Business
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-businesses
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business1'
          description: ''
    put:
      operationId: cdpBusinessesUpdate
      description: Update a customer.
      summary: Edit Business
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessRequest1'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business1'
          description: ''
    patch:
      operationId: cdpBusinessesPartialUpdate
      description: Update a customer.
      summary: Edit Business
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessRequest1'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business1'
          description: ''
  /v2.0/cdp-businesses/business/gdpr-delete-requests/:
    post:
      operationId: cdpBusinessesBusinessGdprDeleteRequestsCreate
      description: Create a request to delete a business in complaince with GDPR rules.
      summary: Create Delete Business Request
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-businesses
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBusinessRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeleteBusinessRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeleteBusinessRequestRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBusinessRequest'
          description: ''
  /v2.0/cdp-fields/:
    get:
      operationId: cdpFieldsList
      description: Return a list of fields that the current user has created.
      summary: Get Field List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: type
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFieldList'
          description: ''
    post:
      operationId: cdpFieldsCreate
      description: >-
        This endpoint is used to create a field with any type. Although it only
        shows the general fields options on the schema, it accepts and excepts
        all the options needed for the given type.
      summary: Field List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldRequest1'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Field1'
          description: ''
  '/v2.0/cdp-fields/{slug}/':
    get:
      operationId: cdpFieldsRetrieve
      description: Read a field's data
      summary: Get Field
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAction1'
          description: ''
    put:
      operationId: cdpFieldsUpdate
      description: >-
        update a field's data. Although it only shows the general fields options
        on the schema, it accepts and excepts all the options needed for the
        given field's type.
      summary: Edit Field
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldActionRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FieldActionRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FieldActionRequest1'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAction1'
          description: ''
    patch:
      operationId: cdpFieldsPartialUpdate
      description: >-
        update a field's data. Although it only shows the general fields options
        on the schema, it accepts and excepts all the options needed for the
        given field's type.
      summary: Edit Field
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFieldActionRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFieldActionRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFieldActionRequest1'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldAction1'
          description: ''
    delete:
      operationId: cdpFieldsDestroy
      description: delete a field.
      summary: Delete Field
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/cdp-fields/boolean/:
    post:
      operationId: cdpFieldsBooleanCreate
      description: Use this endpoint to create a true/false input field.
      summary: Create Boolean Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooleanFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BooleanFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BooleanFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanField1'
          description: ''
  /v2.0/cdp-fields/choice/:
    post:
      operationId: cdpFieldsChoiceCreate
      description: Use this endpoint to create a radio choice input field.
      summary: Create Choice Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChoiceFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChoiceFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChoiceFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChoiceField1'
          description: ''
  /v2.0/cdp-fields/date/:
    post:
      operationId: cdpFieldsDateCreate
      description: Use this endpoint to create a date input field.
      summary: Create Date Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DateFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DateFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateField1'
          description: ''
  /v2.0/cdp-fields/dropdown/:
    post:
      operationId: cdpFieldsDropdownCreate
      description: Use this endpoint to create a dropdown choice input field.
      summary: Create Drop Down Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DropdownFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DropdownFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DropdownFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DropdownField1'
          description: ''
  /v2.0/cdp-fields/email/:
    post:
      operationId: cdpFieldsEmailCreate
      description: Use this endpoint to create a email input field.
      summary: Create Email Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmailFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmailFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailField1'
          description: ''
  /v2.0/cdp-fields/file/:
    post:
      operationId: cdpFieldsFileCreate
      description: Use this endpoint to create a file input field.
      summary: Create File Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileField1'
          description: ''
  /v2.0/cdp-fields/long_text/:
    post:
      operationId: cdpFieldsLongTextCreate
      description: Use this endpoint to create a long text input field.
      summary: Create Text Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TextFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TextFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextField1'
          description: ''
  /v2.0/cdp-fields/matrix/:
    post:
      operationId: cdpFieldsMatrixCreate
      description: Use this endpoint to create a matrix input field.
      summary: Create Matrix Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatrixFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MatrixFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MatrixFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatrixField1'
          description: ''
  /v2.0/cdp-fields/meta/:
    post:
      operationId: cdpFieldsMetaCreate
      description: Use this endpoint to create a meta field.
      summary: Create Meta Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MetaFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetaFieldRequest1'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaField1'
          description: ''
  /v2.0/cdp-fields/money/:
    post:
      operationId: cdpFieldsMoneyCreate
      description: Use this endpoint to create a money input field.
      summary: Create Money Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoneyFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MoneyFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MoneyFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoneyField1'
          description: ''
  /v2.0/cdp-fields/multiple_select/:
    post:
      operationId: cdpFieldsMultipleSelectCreate
      description: Use this endpoint to create a multiple select input field.
      summary: Create Multiple Select Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultipleSelectFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MultipleSelectFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultipleSelectFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultipleSelectField1'
          description: ''
  /v2.0/cdp-fields/number/:
    post:
      operationId: cdpFieldsNumberCreate
      description: Use this endpoint to create a number input field.
      summary: Create Number Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NumberFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NumberFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NumberFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NumberField1'
          description: ''
  /v2.0/cdp-fields/phone/:
    post:
      operationId: cdpFieldsPhoneCreate
      description: Use this endpoint to create a phone input field.
      summary: Create Phone Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PhoneFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PhoneFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhoneField1'
          description: ''
  /v2.0/cdp-fields/rating/:
    post:
      operationId: cdpFieldsRatingCreate
      description: Use this endpoint to create a rating input field.
      summary: Create Rating Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RatingFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RatingFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RatingField1'
          description: ''
  /v2.0/cdp-fields/short_text/:
    post:
      operationId: cdpFieldsShortTextCreate
      description: Use this endpoint to create a short text input field.
      summary: Create Char Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CharFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CharFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CharFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CharField1'
          description: ''
  /v2.0/cdp-fields/text_choice/:
    post:
      operationId: cdpFieldsTextChoiceCreate
      description: Use this endpoint to create a text choice field.
      summary: Create Text Choice Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextChoiceFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TextChoiceFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TextChoiceFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextChoiceField1'
          description: ''
  /v2.0/cdp-fields/time/:
    post:
      operationId: cdpFieldsTimeCreate
      description: Use this endpoint to create a time input field.
      summary: Create Time Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TimeFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TimeFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeField1'
          description: ''
  /v2.0/cdp-fields/website/:
    post:
      operationId: cdpFieldsWebsiteCreate
      description: Use this endpoint to create a web input field.
      summary: Create Website Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebsiteFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WebsiteFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WebsiteFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebsiteField1'
          description: ''
  /v2.0/cdp-fields/yes_no/:
    post:
      operationId: cdpFieldsYesNoCreate
      description: Use this endpoint to create a yes/no input field.
      summary: Create Yes No Field
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cdp-fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/YesNoFieldRequest1'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/YesNoFieldRequest1'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/YesNoFieldRequest1'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/YesNoField1'
          description: ''
  /v2.0/cities/:
    get:
      operationId: citiesList
      description: Get a list of all cities.
      summary: Get All City List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: state
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cities
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityList'
          description: ''
  '/v2.0/cities/{citySlug}/regions/':
    get:
      operationId: citiesRegionsList
      description: Get a list of regions in a city
      summary: Get Region List
      parameters:
        - in: path
          name: citySlug
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - cities
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRegionList'
          description: ''
  /v2.0/countries/:
    get:
      operationId: countriesList
      description: Get a list of countries.
      summary: Get Country List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - countries
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCountryList'
          description: ''
  '/v2.0/countries/{countrySlug}/states/':
    get:
      operationId: countriesStatesList
      description: Get a list of states in a country.
      summary: Get Country States List
      parameters:
        - in: path
          name: countrySlug
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - countries
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStateList'
          description: ''
  /v2.0/currencies/:
    get:
      operationId: currenciesList
      description: >-
        Use this endpoint to get a list of available currencies for activities'
        monetary value.
      summary: Get Currency List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - currencies
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCurrencyList1'
          description: ''
  /v2.0/customers/:
    get:
      operationId: customersList
      description: Gives a list of all customers on the current business.
      summary: Get Customer List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: query
          name: email
          schema:
            type: string
        - in: query
          name: level
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: phone_number
          schema:
            type: string
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: tag
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: usernames
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShortCustomerList'
          description: ''
    post:
      operationId: customersCreate
      description: Create a new customer on the current business.
      summary: Create Customer
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCustomer'
          description: ''
  '/v2.0/customers/{code}/':
    get:
      operationId: customersRetrieve
      description: Get a customer's data.
      summary: Get Customer
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: customersUpdate
      description: Update a customer.
      summary: Edit Customer
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerSeializerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateCustomerSeializerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateCustomerSeializerRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerSeializer'
          description: ''
    patch:
      operationId: customersPartialUpdate
      description: Update a customer.
      summary: Edit Customer
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCustomerSeializerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCustomerSeializerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateCustomerSeializerRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCustomerSeializer'
          description: ''
    delete:
      operationId: customersDestroy
      description: Delete a customer.
      summary: Delete Customer
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  '/v2.0/customers/{code}/gdpr-data-requests/':
    post:
      operationId: customersGdprDataRequestsCreate
      description: >-
        Create a request to receive a customer's data in complaince with GDPR
        rules.
      summary: Create Customer Data Request
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDataRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerDataRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerDataRequestRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDataRequest'
          description: ''
  '/v2.0/customers/{code}/gdpr-delete-requests/':
    post:
      operationId: customersGdprDeleteRequestsCreate
      description: Create a request to delete a customer in complaince with GDPR rules.
      summary: Create Delete Customer Request
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomerRequestRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeleteCustomerRequestRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeleteCustomerRequestRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCustomerRequest'
          description: ''
  '/v2.0/customers/{code}/notes/':
    get:
      operationId: customersNotesList
      description: Use to get a customers' notes.
      summary: Get Customer Note List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomerNoteList'
          description: ''
    post:
      operationId: customersNotesCreate
      description: Use to add a note on a customer.
      summary: Create Customer Note
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: code
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerNoteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerNoteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerNoteRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerNote'
          description: ''
  '/v2.0/customers/{slug}/activities/':
    get:
      operationId: customersActivitiesList
      description: Gives a list of a customer's activities.
      summary: Get Customer Activity List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: query
          name: operation
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: query
          name: type
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivityShortList'
          description: ''
  /v2.0/customers/batch/:
    post:
      operationId: customersBatchCreate
      description: Create a batch customer creation job based on json data or excel file.
      summary: Create Customer Batch Import
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBatchImportRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerBatchImportRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerBatchImportRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBatchImport'
          description: ''
  '/v2.0/customers/batch/{slug}/':
    get:
      operationId: customersBatchRetrieve
      description: Get a customer batch import object to see its status.
      summary: Get Customer Batch Import
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBatchImport'
          description: ''
  /v2.0/customers/bulk-delete/:
    post:
      operationId: customersBulkDeleteCreate
      description: Takes a list of customers and deletes them.
      summary: Customer Bulk Delete
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBulkDeleteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerBulkDeleteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerBulkDeleteRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBulkDelete'
          description: ''
  /v2.0/customers/bulk-tag/:
    post:
      operationId: customersBulkTagCreate
      description: Takes a list of customers and adds a tag to them.
      summary: Customer Bulk Add Tag
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerBulkAddTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomerBulkAddTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomerBulkAddTagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerBulkAddTag'
          description: ''
  /v2.0/gamification-calculation-formulas/:
    get:
      operationId: gamificationCalculationFormulasList
      description: >-
        Get a list of gamification calculation formulas either created by the
        current business or public.
      summary: Get Gamification Calculation Formula List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: query
          name: is_public
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-formulas
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginatedGamificationCalculationFormulaSerialierList
          description: ''
    post:
      operationId: gamificationCalculationFormulasCreate
      description: Create a gamification calculation formula for the current business.
      summary: Create Gamification Calculation Formula
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-formulas
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GamificationCalculationCreateFormulaSerialierRequest
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/GamificationCalculationCreateFormulaSerialierRequest
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/GamificationCalculationCreateFormulaSerialierRequest
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GamificationCalculationCreateFormulaSerialier
          description: ''
  '/v2.0/gamification-calculation-formulas/{slug}/':
    get:
      operationId: gamificationCalculationFormulasRetrieve
      description: Get a gamification calculation formula object.
      summary: Get Gamification Calculation Formula
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-formulas
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamificationCalculationFormulaSerialier'
          description: ''
    put:
      operationId: gamificationCalculationFormulasUpdate
      description: Update a gamification calculation formula owned by the current business.
      summary: Edit Gamification Calculation Formula
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-formulas
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/GamificationCalculationCreateFormulaSerialierRequest
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/GamificationCalculationCreateFormulaSerialierRequest
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/GamificationCalculationCreateFormulaSerialierRequest
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GamificationCalculationCreateFormulaSerialier
          description: ''
    patch:
      operationId: gamificationCalculationFormulasPartialUpdate
      description: Update a gamification calculation formula owned by the current business.
      summary: Edit Gamification Calculation Formula
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-formulas
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PatchedGamificationCalculationCreateFormulaSerialierRequest
          application/x-www-form-urlencoded:
            schema:
              $ref: >-
                #/components/schemas/PatchedGamificationCalculationCreateFormulaSerialierRequest
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PatchedGamificationCalculationCreateFormulaSerialierRequest
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/GamificationCalculationCreateFormulaSerialier
          description: ''
    delete:
      operationId: gamificationCalculationFormulasDestroy
      description: Delete a gamification calculation formula owned by the current business.
      summary: Delete Gamification Calculation Formula
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-formulas
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/gamification-calculation-jobs/:
    get:
      operationId: gamificationCalculationJobsList
      description: >-
        Get a list of gamification calculation jobs created by the current
        business.
      summary: Get Gamification Calculation Job List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: status
          schema:
            type: string
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-jobs
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PaginatedGamificationCalculationJobSerialierList
          description: ''
    post:
      operationId: gamificationCalculationJobsCreate
      description: create a gamification calculation job for the current business.
      summary: Create Gamification Calculation Job
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GamificationCalculationJobSerialierRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GamificationCalculationJobSerialierRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GamificationCalculationJobSerialierRequest'
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamificationCalculationJobSerialier'
          description: ''
  '/v2.0/gamification-calculation-jobs/{slug}/':
    get:
      operationId: gamificationCalculationJobsRetrieve
      description: Get a list of gamification calculation job along with status and data.
      summary: Get Gamification Calculation Job
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-calculation-jobs
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GamificationCalculationJobSerialier'
          description: ''
  /v2.0/gamification-settings/:
    get:
      operationId: gamificationSettingsRetrieve
      description: Get the gamification setting for the current business.
      summary: Business Gamification Settings
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-settings
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessGamificationSettings'
          description: ''
    put:
      operationId: gamificationSettingsUpdate
      description: Update the gamification setting for the current business.
      summary: Business Gamification Settings
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessGamificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessGamificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessGamificationSettingsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessGamificationSettings'
          description: ''
    patch:
      operationId: gamificationSettingsPartialUpdate
      description: Update the gamification setting for the current business.
      summary: Business Gamification Settings
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - gamification-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessGamificationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessGamificationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessGamificationSettingsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessGamificationSettings'
          description: ''
  /v2.0/integrations/:
    get:
      operationId: integrationsList
      description: Get a list of integrations created or accessed by the current user.
      summary: Get Integration List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedIntegrationListList'
          description: ''
    post:
      operationId: integrationsCreate
      description: create an integration
      summary: Create Integration
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateIntegrationRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateIntegration'
          description: ''
  /v2.0/integrations-settings/:
    get:
      operationId: integrationsSettingsRetrieve
      description: Get the gamification setting for the current business.
      summary: Business Integration Settings
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations-settings
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessIntegrationSettings'
          description: ''
    put:
      operationId: integrationsSettingsUpdate
      description: Update the gamification setting for the current business.
      summary: Business Integration Settings
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessIntegrationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BusinessIntegrationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BusinessIntegrationSettingsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessIntegrationSettings'
          description: ''
    patch:
      operationId: integrationsSettingsPartialUpdate
      description: Update the gamification setting for the current business.
      summary: Business Integration Settings
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations-settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusinessIntegrationSettingsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusinessIntegrationSettingsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusinessIntegrationSettingsRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessIntegrationSettings'
          description: ''
  '/v2.0/integrations/{slug}/':
    get:
      operationId: integrationsRetrieve
      description: Get a a specific integration with its data.
      summary: Get Integration
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
          description: ''
    put:
      operationId: integrationsUpdate
      description: Update an integration's data.
      summary: Edit Integration
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateIntegrationRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIntegration'
          description: ''
    patch:
      operationId: integrationsPartialUpdate
      description: Update an integration's data.
      summary: Edit Integration
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateIntegrationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateIntegrationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateIntegrationRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateIntegration'
          description: ''
    delete:
      operationId: integrationsDestroy
      description: Delete an integration.
      summary: Delete Integration
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - integrations
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/languages/:
    get:
      operationId: languagesList
      description: Gives a list of all available languages.
      summary: Get Language List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - languages
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Language'
          description: ''
  '/v2.0/states/{stateSlug}/cities/':
    get:
      operationId: statesCitiesList
      description: Get a list of cities in a state.
      summary: Get City List
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: path
          name: stateSlug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - states
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCityList'
          description: ''
  /v2.0/tags/:
    get:
      operationId: tagsList
      description: Use this endpoint to create a tag to use in action types' setttings.
      summary: Get Tag List
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: slug
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - tags
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShortTagList'
          description: ''
    post:
      operationId: tagsCreate
      description: Use this endpoint to get a list of all tags on a business.
      summary: Create Tag
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
  '/v2.0/tags/{slug}/':
    get:
      operationId: tagsRetrieve
      description: Get a specific tag.
      summary: Get Tag
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - tags
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    put:
      operationId: tagsUpdate
      description: Update a tag.
      summary: Edit Tag
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TagRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    patch:
      operationId: tagsPartialUpdate
      description: Update a tag.
      summary: Edit Tag
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTagRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
    delete:
      operationId: tagsDestroy
      description: Delete a tag.
      summary: Delete Tag
      parameters:
        - in: query
          name: active_workspace
          schema:
            type: string
          description: Slug of the workspace (business) we're performing the action on.
          required: true
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - tags
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/campaigns/:
    get:
      operationId: campaignsList
      description: Create a campaign to send messages to list of customers.
      summary: Get Campaign List
      parameters:
        - in: query
          name: created_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: query
          name: message_type
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - in: query
          name: scheduled_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: query
          name: sent_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: tag
          schema:
            type: string
          description: Comma seperated list.
          examples:
            Example:
              value: 'item1,item2,item3'
        - in: query
          name: updated_at
          schema:
            type: string
            format: date
          description: Query over the date.
          examples:
            Example:
              value: '1991-03-27'
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - campaigns
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedShortCampaignList'
          description: ''
    post:
      operationId: campaignsCreate
      description: Create a campaign to send messages to list of customers.
      summary: Create Campaign
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignCreateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignCreateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignCreateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignCreate'
          description: ''
  '/v2.0/campaigns/{slug}/':
    get:
      operationId: campaignsRetrieve
      description: Show a campaign's full data.
      summary: Get Campaign
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - campaigns
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCampaign'
          description: ''
    put:
      operationId: campaignsUpdate
      description: Show a campaign's full data.
      summary: Edit Campaign
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CampaignUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CampaignUpdateRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignUpdate'
          description: ''
    patch:
      operationId: campaignsPartialUpdate
      description: Show a campaign's full data.
      summary: Edit Campaign
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - campaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCampaignUpdateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCampaignUpdateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCampaignUpdateRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignUpdate'
          description: ''
    delete:
      operationId: campaignsDestroy
      description: Show a campaign's full data.
      summary: Delete Campaign
      parameters:
        - in: path
          name: slug
          schema:
            type: string
          required: true
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - campaigns
      security:
        - JWT Authentication: []
      responses:
        '204':
          description: No response body
  /v2.0/companies/:
    get:
      operationId: companiesList
      description: TBD
      summary: Get Company List Ciew
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: A search query on the list items.
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - companies
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShortCompany'
          description: ''
    post:
      operationId: companiesCreate
      description: TBD
      summary: Create Company  Ciew
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - companies
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /v2.0/company/:
    get:
      operationId: companyRetrieve
      description: TBD
      summary: Company
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - company
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: companyUpdate
      description: TBD
      summary: Company
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: companyPartialUpdate
      description: TBD
      summary: Company
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /v2.0/operator/:
    get:
      operationId: operatorRetrieve
      description: Shows the authenticated operator's profile info.
      summary: Operator
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - operator
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
          description: ''
    put:
      operationId: operatorUpdate
      description: Use to edit current operator's profile.
      summary: Operator
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - operator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OperatorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OperatorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OperatorRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
          description: ''
    patch:
      operationId: operatorPartialUpdate
      description: Use to edit current operator's profile.
      summary: Operator
      parameters:
        - in: header
          name: x-api-key
          schema:
            type: string
          description: The application secret provided to the client.
          required: true
      tags:
        - operator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOperatorRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOperatorRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOperatorRequest'
      security:
        - JWT Authentication: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Operator'
          description: ''
components:
  securitySchemes:
    JWT Authentication:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "JWT"
  schemas:
    AccessLevelEnum:
      enum:
        - owner
        - admin
        - team_member
        - guest
      type: string
    BlankEnum:
      enum:
        - ''
    Business:
      type: object
      properties:
        plan:
          type: string
          readOnly: true
        title:
          type: string
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        slug:
          type: string
          nullable: true
          readOnly: true
        last_update:
          type: string
          format: date-time
          nullable: true
          description: shows when was the user base data updated last time.
          readOnly: true
        business_services:
          type: array
          items:
            $ref: '#/components/schemas/BusinessService'
          readOnly: true
        business_identifier:
          type: string
          nullable: true
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          description: any custom extra data we want to keep about the business.
        access_level:
          type: string
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: a logo for the business
        forms_subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the business' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        forms_custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their business, if they want to show their
            forms on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
      required:
        - title
    BusinessCreate:
      type: object
      properties:
        plan:
          type: string
          readOnly: true
        title:
          type: string
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        slug:
          type: string
          nullable: true
          readOnly: true
        last_update:
          type: string
          format: date-time
          nullable: true
          description: shows when was the user base data updated last time.
          readOnly: true
        business_services:
          type: array
          items:
            $ref: '#/components/schemas/BusinessService'
          readOnly: true
        business_identifier:
          type: string
          nullable: true
          readOnly: true
        extra_data:
          type: object
          additionalProperties: {}
          description: any custom extra data we want to keep about the business.
        access_level:
          type: string
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: a logo for the business
        forms_subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the business' forms.
          readOnly: true
        forms_custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their business, if they want to show their
            forms on a custom domain (e.g. https://example.co/form_address/).
          readOnly: true
      required:
        - title
    BusinessCreateRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        extra_data:
          type: object
          additionalProperties: {}
          description: any custom extra data we want to keep about the business.
        logo:
          type: string
          format: binary
          nullable: true
          description: a logo for the business
      required:
        - title
    BusinessInvitaion:
      type: object
      properties:
        members:
          type: string
          readOnly: true
        total_available_seats:
          type: string
          readOnly: true
        used_seats:
          type: string
          readOnly: true
        join_key:
          allOf:
            - $ref: '#/components/schemas/BusinessTeamInvitationKey'
          readOnly: true
        pending_invitations:
          type: array
          items:
            $ref: '#/components/schemas/BusinessInvitationKey'
          readOnly: true
    BusinessInvitationKey:
      type: object
      properties:
        key:
          type: string
          format: uuid
          readOnly: true
          description: the unique identifier for this invitation.
        invitee_email:
          type: string
          format: email
          nullable: true
          description: 'if it''s an invitation, for whom is it created?'
          maxLength: 254
        link:
          type: string
          readOnly: true
    BusinessMember:
      type: object
      properties:
        profile:
          allOf:
            - $ref: '#/components/schemas/ProfileShortSeializer'
          readOnly: true
        access_level:
          allOf:
            - $ref: '#/components/schemas/AccessLevelEnum'
          description: what level of access does the profile have?
    BusinessRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        extra_data:
          type: object
          additionalProperties: {}
          description: any custom extra data we want to keep about the business.
        logo:
          type: string
          format: binary
          nullable: true
          description: a logo for the business
        forms_subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the business' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        forms_custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their business, if they want to show their
            forms on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
      required:
        - title
    BusinessService:
      type: object
      properties:
        source_slug:
          type: string
          description: business's slug in the service.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        source_service:
          nullable: true
          description: shows the service in wich the business resides.
          oneOf:
            - $ref: '#/components/schemas/SourceServiceEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - source_slug
    BusinessServiceRequest:
      type: object
      properties:
        source_slug:
          type: string
          minLength: 1
          description: business's slug in the service.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        source_service:
          nullable: true
          description: shows the service in wich the business resides.
          oneOf:
            - $ref: '#/components/schemas/SourceServiceEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - source_slug
    BusinessShort:
      type: object
      properties:
        title:
          type: string
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        slug:
          type: string
          nullable: true
          readOnly: true
        last_update:
          type: string
          format: date-time
          nullable: true
          description: shows when was the user base data updated last time.
          readOnly: true
        business_services:
          type: array
          items:
            $ref: '#/components/schemas/BusinessService'
          readOnly: true
        business_identifier:
          type: string
          nullable: true
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: a logo for the business
        access_level:
          type: string
          readOnly: true
      required:
        - title
    BusinessTeamInvitationKey:
      type: object
      properties:
        key:
          type: string
          format: uuid
          readOnly: true
          description: the unique identifier for this invitation.
        link:
          type: string
          readOnly: true
    ChangePasswordRequest:
      type: object
      properties:
        current_password:
          type: string
          writeOnly: true
          minLength: 1
        new_password:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - current_password
        - new_password
    EmailPasswordReset:
      type: object
      properties:
        email:
          type: string
      required:
        - email
    EmailPasswordResetConfirm:
      type: object
      properties:
        code:
          type: string
        token:
          type: string
        email:
          type: string
        new_password:
          type: string
      required:
        - code
        - email
        - new_password
        - token
    EmailPasswordResetConfirmRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        email:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
      required:
        - code
        - email
        - new_password
        - token
    EmailPasswordResetRequest:
      type: object
      properties:
        email:
          type: string
          minLength: 1
        user_type:
          type: string
          writeOnly: true
      required:
        - email
    Extension:
      type: object
      properties:
        deleted:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        title:
          type: string
          description: the title of extension.
          maxLength: 255
        description:
          type: string
          nullable: true
        quantity:
          type: integer
          maximum: 2147483647
          minimum: 0
        type:
          allOf:
            - $ref: '#/components/schemas/TypeEnum'
          description: determines the type of this extension.
        is_enabled:
          type: boolean
          title: Is enable
          description: is this extension enable or not
      required:
        - title
    GenderEnum:
      enum:
        - male
        - female
      type: string
    GrantTypeEnum:
      enum:
        - authorization-code
        - implicit
        - password
        - client-credentials
      type: string
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        user_type:
          type: string
      required:
        - password
        - username
    LoginRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
        user_type:
          type: string
      required:
        - password
        - username
    NullEnum:
      enum:
        - null
    ObtainSessionToken:
      type: object
      properties:
        authorization_token:
          type: string
          readOnly: true
    ObtainSessionTokenRequest:
      type: object
      properties:
        grant_type:
          allOf:
            - $ref: '#/components/schemas/GrantTypeEnum'
          writeOnly: true
      required:
        - grant_type
    PackagesList:
      type: object
      properties:
        discounted_price:
          type: string
          readOnly: true
        extensions:
          type: array
          items:
            $ref: '#/components/schemas/Extension'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        title:
          type: string
          description: the title of package.
          maxLength: 255
        description:
          type: string
          nullable: true
        price:
          type: string
          format: decimal
          pattern: '^-?\d{0,18}(?:\.\d{0,2})?$'
          description: the price of the package
        duration:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Duraion
          description: the duration of the package in days
        is_enabled:
          type: boolean
          title: Is enable
          description: is this package enable or not
        unlimited:
          type: boolean
          description: is this package unlimited
      required:
        - price
        - title
    PaginatedProfileTeamList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/profile-teams/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/profile-teams/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        profile-teams:
          type: array
          items:
            $ref: '#/components/schemas/ProfileTeam'
    PaginatedSlackAuthList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/slack_auths/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/slack_auths/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        slack_auths:
          type: array
          items:
            $ref: '#/components/schemas/SlackAuth'
    PatchedBusinessRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        extra_data:
          type: object
          additionalProperties: {}
          description: any custom extra data we want to keep about the business.
        logo:
          type: string
          format: binary
          nullable: true
          description: a logo for the business
        forms_subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the business' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        forms_custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their business, if they want to show their
            forms on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
    PatchedProfileRequest:
      type: object
      properties:
        team:
          type: string
        username:
          type: string
          minLength: 1
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: binary
          nullable: true
        gender:
          nullable: true
          description: 'choices: [''male'', ''female'']'
          oneOf:
            - $ref: '#/components/schemas/GenderEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
    Plan:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: the title of plan.
          maxLength: 255
        plan_type:
          allOf:
            - $ref: '#/components/schemas/PlanTypeEnum'
          description: 'type of the plan based, it could be among free to enterprise'
        description:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        deals:
          type: string
          readOnly: true
    PlanTypeEnum:
      enum:
        - free
        - plus
        - pro
        - advance
        - enterprise
      type: string
    Profile:
      type: object
      properties:
        verified_account:
          type: boolean
          readOnly: true
        verified_email:
          type: boolean
          readOnly: true
        verified_phone:
          type: boolean
          title: Verified phone number
          readOnly: true
        score:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: the score user has gained based on their in system.
          readOnly: true
        gift_credit:
          type: string
          format: decimal
          pattern: '^-?\d{0,18}(?:\.\d{0,2})?$'
          description: current amount of gift credit for the user.
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          title: Account balance
          readOnly: true
        total_credit:
          type: string
          readOnly: true
        team:
          type: string
        google_sheets_email:
          type: string
          nullable: true
          description: email for send data to google sheets
          readOnly: true
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: uri
          nullable: true
        gender:
          nullable: true
          description: 'choices: [''male'', ''female'']'
          oneOf:
            - $ref: '#/components/schemas/GenderEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - username
    ProfileRequest:
      type: object
      properties:
        team:
          type: string
        username:
          type: string
          minLength: 1
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: binary
          nullable: true
        gender:
          nullable: true
          description: 'choices: [''male'', ''female'']'
          oneOf:
            - $ref: '#/components/schemas/GenderEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
      required:
        - username
    ProfileShortSeializer:
      type: object
      properties:
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          title: Full name
          maxLength: 100
        avatar:
          type: string
          format: uri
          nullable: true
      required:
        - username
    ProfileSignup:
      type: object
      description: Signs up a user to system.
      properties:
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        phone_number:
          type: string
          pattern: '^09\d{9}$'
        session_token:
          type: string
          readOnly: true
        signed_up:
          type: boolean
          readOnly: true
        score:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: the score user has gained based on their in system.
          readOnly: true
        gift_credit:
          type: string
          format: decimal
          pattern: '^-?\d{0,18}(?:\.\d{0,2})?$'
          description: current amount of gift credit for the user.
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          title: Account balance
          readOnly: true
        total_credit:
          type: string
          readOnly: true
        team:
          type: string
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        gender:
          nullable: true
          description: 'choices: [''male'', ''female'']'
          oneOf:
            - $ref: '#/components/schemas/GenderEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        google_sheets_email:
          type: string
          nullable: true
          description: email for send data to google sheets
          maxLength: 250
      required:
        - first_name
    ProfileSignupRequest:
      type: object
      description: Signs up a user to system.
      properties:
        password:
          type: string
          writeOnly: true
          minLength: 1
        phone_number:
          type: string
          minLength: 1
          pattern: '^09\d{9}$'
        team:
          type: string
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        gender:
          nullable: true
          description: 'choices: [''male'', ''female'']'
          oneOf:
            - $ref: '#/components/schemas/GenderEnum'
            - $ref: '#/components/schemas/BlankEnum'
            - $ref: '#/components/schemas/NullEnum'
        google_sheets_email:
          type: string
          nullable: true
          description: email for send data to google sheets
          maxLength: 250
      required:
        - first_name
        - password
    ProfileTeam:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - title
    RequestLogin:
      type: object
      properties:
        invitation_code:
          type: string
          description: 'if user is registering with and invitation code, send it here.'
          pattern: '^[-a-zA-Z0-9_]+$'
    RequestLoginRequest:
      type: object
      properties:
        phone_number:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
        user_type:
          type: string
          writeOnly: true
        invitation_code:
          type: string
          minLength: 1
          description: 'if user is registering with and invitation code, send it here.'
          pattern: '^[-a-zA-Z0-9_]+$'
    SMSPasswordReset:
      type: object
      properties:
        phone_number:
          type: string
      required:
        - phone_number
    SMSPasswordResetConfirm:
      type: object
      properties:
        code:
          type: string
        token:
          type: string
        phone_number:
          type: string
        new_password:
          type: string
      required:
        - code
        - new_password
        - phone_number
        - token
    SMSPasswordResetConfirmRequest:
      type: object
      properties:
        code:
          type: string
          minLength: 1
        token:
          type: string
          minLength: 1
        phone_number:
          type: string
          minLength: 1
        new_password:
          type: string
          minLength: 1
      required:
        - code
        - new_password
        - phone_number
        - token
    SMSPasswordResetRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 1
        user_type:
          type: string
          writeOnly: true
      required:
        - phone_number
    SlackAuth:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 31
        team_name:
          type: string
          nullable: true
          maxLength: 255
        channel_name:
          type: string
          nullable: true
          maxLength: 255
    Social:
      type: object
      description: Serializer which accepts an OAuth2 access token and provider.
      properties:
        provider:
          type: string
          maxLength: 255
        access_token:
          type: string
          maxLength: 4096
        id_token:
          type: string
          maxLength: 4096
      required:
        - provider
    SocialRequest:
      type: object
      description: Serializer which accepts an OAuth2 access token and provider.
      properties:
        provider:
          type: string
          minLength: 1
          maxLength: 255
        access_token:
          type: string
          minLength: 1
          maxLength: 4096
        id_token:
          type: string
          minLength: 1
          maxLength: 4096
      required:
        - provider
    SourceServiceEnum:
      enum:
        - icas
        - formz
        - crm
        - projectant
        - invoice
        - wallet
        - actions
        - appsumo
      type: string
    TypeEnum:
      enum:
        - generic
        - sms
        - email
      type: string
    VerifyEmail:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    VerifyEmailRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 1
      required:
        - token
    VerifyLogin:
      type: object
      properties:
        first_name:
          type: string
          readOnly: true
          title: Full name
        username:
          type: string
          readOnly: true
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        phone_number:
          type: string
        email:
          type: string
          format: email
    VerifyLoginRequest:
      type: object
      properties:
        phone_number:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
        token:
          type: string
          writeOnly: true
          minLength: 1
        user_type:
          type: string
          writeOnly: true
      required:
        - token
    VerifyPhone:
      type: object
      properties:
        token:
          type: string
      required:
        - token
    VerifyPhoneRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 1
      required:
        - token
    AccessEnum:
      enum:
        - read
        - editor
        - edit
        - delete
        - owner
      type: string
    AccessTypeDescription:
      type: object
      properties:
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        access:
          allOf:
            - $ref: '#/components/schemas/AccessEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        description:
          type: string
          description: >-
            what is shown to the user as the name and description of an access
            type
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
      required:
        - description
    AddRow:
      type: object
      properties:
        data:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            the form's submitted data, in json. a key value pair with fields's
            slug.
          readOnly: true
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/UserShort'
          readOnly: true
        form:
          allOf:
            - $ref: '#/components/schemas/FormShort'
          readOnly: true
        tracking_code:
          type: string
          nullable: true
          description: >-
            a tracking code to provide to end user. unique for each row in the
            form.
          readOnly: true
        submitter_referer_address:
          type: string
        redirection_url:
          type: string
          format: uri
          readOnly: true
        extra_response:
          type: object
          additionalProperties: {}
          readOnly: true
        readable_data:
          type: object
          additionalProperties: {}
          readOnly: true
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        row_tags:
          type: array
          items:
            type: string
        deleted:
          type: string
          format: date-time
          readOnly: true
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    AddRowRequest:
      type: object
      properties:
        uuid:
          type: string
          writeOnly: true
          minLength: 1
          description: the uuid of verified phone number if any exists
          maxLength: 200
        code:
          type: string
          writeOnly: true
          minLength: 1
          description: the token of verified phone number if any exists
          maxLength: 200
        email_uuid:
          type: string
          writeOnly: true
          minLength: 1
          description: the uuid of verified email if any exists
          maxLength: 200
        email_code:
          type: string
          writeOnly: true
          minLength: 1
          description: the token of verified email if any exists
          maxLength: 200
        submitter_referer_address:
          type: string
          minLength: 1
        row_tags:
          type: array
          items:
            type: string
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    BarcodeField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    BarcodeFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    Block:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - title
    BlockRequest:
      type: object
      properties:
        form:
          type: string
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - title
    Board:
      type: object
      properties:
        primary_form:
          allOf:
            - $ref: '#/components/schemas/ShowFormSummary'
          readOnly: true
        blocks:
          type: object
          additionalProperties: {}
          readOnly: true
        template:
          type: string
        copied_from:
          type: string
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        is_primary:
          type: boolean
          readOnly: true
          description: shows if this board is the primary board for the primary form.
        is_template:
          type: boolean
          readOnly: true
          description: shows if this board can be used as a template.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        share_address:
          type: string
          readOnly: true
          description: an auto-generated address to share the board with.
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
        thumbnail_url:
          type: string
          readOnly: true
          description: the thumbnail's url.
    BoardCopy:
      type: object
      properties:
        primary_form:
          allOf:
            - $ref: '#/components/schemas/ShowFormSummary'
          readOnly: true
        blocks:
          type: object
          additionalProperties: {}
          readOnly: true
        template:
          type: string
        copied_from:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        is_primary:
          type: boolean
          readOnly: true
          description: shows if this board is the primary board for the primary form.
        is_template:
          type: boolean
          description: shows if this board can be used as a template.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        share_address:
          type: string
          readOnly: true
          description: an auto-generated address to share the board with.
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
        thumbnail_slug:
          type: string
          nullable: true
          description: the thumbnail's slug.
          maxLength: 31
        thumbnail_url:
          type: string
          nullable: true
          description: the thumbnail's url.
          maxLength: 900
        tags:
          type: array
          items:
            type: integer
    BoardCopyRequest:
      type: object
      properties:
        template:
          type: string
        copied_from:
          type: string
          minLength: 1
        is_template:
          type: boolean
          description: shows if this board can be used as a template.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
        thumbnail_slug:
          type: string
          nullable: true
          description: the thumbnail's slug.
          maxLength: 31
        thumbnail_url:
          type: string
          nullable: true
          description: the thumbnail's url.
          maxLength: 900
        tags:
          type: array
          items:
            type: integer
    BoardFormStats:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional desctiption on the stats and what it shows.
          maxLength: 511
      required:
        - title
    BoardList:
      type: object
      properties:
        primary_form:
          allOf:
            - $ref: '#/components/schemas/ShowFormSummary'
          readOnly: true
        template:
          type: string
        copied_from:
          type: string
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        is_primary:
          type: boolean
          readOnly: true
          description: shows if this board is the primary board for the primary form.
        is_template:
          type: boolean
          readOnly: true
          description: shows if this board can be used as a template.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        share_address:
          type: string
          readOnly: true
          description: an auto-generated address to share the board with.
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
        thumbnail_url:
          type: string
          readOnly: true
          description: the thumbnail's url.
    BoardRequest:
      type: object
      properties:
        template:
          type: string
        copied_from:
          type: string
          minLength: 1
        thumbnail_slug:
          type: string
          writeOnly: true
          minLength: 1
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
    BoardTemplate:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: an optional short title to identify the template by.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the board template.
        settings:
          type: object
          additionalProperties: {}
          nullable: true
        is_default:
          type: boolean
          description: >-
            shows if this template is default for creating default blocks of
            boards
    BoardTemplateRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: an optional short title to identify the template by.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the board template.
        settings:
          type: object
          additionalProperties: {}
          nullable: true
        is_default:
          type: boolean
          description: >-
            shows if this template is default for creating default blocks of
            boards
    BoardUpdate:
      type: object
      properties:
        primary_form:
          allOf:
            - $ref: '#/components/schemas/ShowFormSummary'
          readOnly: true
        blocks:
          type: object
          additionalProperties: {}
          description: >-
            A dictionary of block locations and slug of the blocks in each
            location.
        template:
          type: string
        copied_from:
          type: string
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        refresh_share_address:
          type: boolean
          default: false
          description: >-
            If set true, the board's share address will be replaced by a new
            automaticly generated address. This change is irreversible.
        thumbnail_url:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        is_primary:
          type: boolean
          readOnly: true
          description: shows if this board is the primary board for the primary form.
        is_template:
          type: boolean
          readOnly: true
          description: shows if this board can be used as a template.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        share_address:
          type: string
          readOnly: true
          description: an auto-generated address to share the board with.
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
    BoardUpdateRequest:
      type: object
      properties:
        blocks:
          type: object
          additionalProperties: {}
          description: >-
            A dictionary of block locations and slug of the blocks in each
            location.
        template:
          type: string
        copied_from:
          type: string
          minLength: 1
        thumbnail_slug:
          type: string
          writeOnly: true
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        refresh_share_address:
          type: boolean
          default: false
          description: >-
            If set true, the board's share address will be replaced by a new
            automaticly generated address. This change is irreversible.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
    BooleanField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    BooleanFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    Category:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        parent_category:
          type: string
          nullable: true
          description: 'If the category has a parent category, send its slug on this field.'
        subcategories:
          type: array
          items:
            $ref: '#/components/schemas/SimpleCategory'
          readOnly: true
        shared_access:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
      required:
        - title
    CategoryBreadcrumb:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
        parent_category:
          type: integer
          nullable: true
          description: shows if this category is inside another category.
      required:
        - title
    CategoryRequest:
      type: object
      properties:
        parent_category:
          type: string
          nullable: true
          description: 'If the category has a parent category, send its slug on this field.'
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
      required:
        - title
    CategoryUser:
      type: object
      properties:
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        profile:
          type: string
        category:
          type: string
        access:
          allOf:
            - $ref: '#/components/schemas/AccessEnum'
          title: Access type
          description: shows the access type
      required:
        - category
        - profile
    CategoryUserRequest:
      type: object
      properties:
        profile:
          type: string
        category:
          type: string
        access:
          allOf:
            - $ref: '#/components/schemas/AccessEnum'
          title: Access type
          description: shows the access type
      required:
        - category
        - profile
    CharField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
        max_length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum length
          description: maximum acceptable length for the input text.
    CharFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
        max_length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum length
          description: maximum acceptable length for the input text.
    ChartTypeEnum:
      enum:
        - bar_chart
        - line_chart
        - pie_chart
        - gantt_chart
      type: string
    ChoiceFetchField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        choices_source:
          type: string
          format: uri
          description: the remote endpoint to fetch choices from
          maxLength: 200
      required:
        - choices_source
    ChoiceFetchFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        choices_source:
          type: string
          format: uri
          minLength: 1
          description: the remote endpoint to fetch choices from
          maxLength: 200
      required:
        - choices_source
    ChoiceField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    ChoiceFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this field's removed choices. (For
            when you're removing an existing choice from the field).
        bulk_choices:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          description: Use to send a bulk list of choices to add to the field
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    ChoiceGroup:
      type: object
      properties:
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          description: the groups title.
          maxLength: 255
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    ChoiceGroupRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          description: the groups title.
          maxLength: 255
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    ChoiceList:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: choice text.
          maxLength: 1023
    CityField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    CityFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    CombinedFieldsChart:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type3f2Enum'
          description: determines the type of this report.
          readOnly: true
        primary_form:
          type: string
        chart_data:
          type: string
          readOnly: true
        x_field:
          type: string
        y_fields:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
        chart_type:
          allOf:
            - $ref: '#/components/schemas/ChartTypeEnum'
          title: Type
          description: type of the chart.
        rows_y_fields:
          type: object
          additionalProperties: {}
          description: shows list of fields in rows that we use for Y-axis of chart
    CombinedFieldsChartCreate:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type3f2Enum'
          description: determines the type of this report.
          readOnly: true
        primary_form:
          type: string
        chart_data:
          type: string
          readOnly: true
        x_field:
          type: string
        y_fields:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
        chart_type:
          allOf:
            - $ref: '#/components/schemas/ChartTypeEnum'
          title: Type
          description: type of the chart.
        rows_y_fields:
          type: object
          additionalProperties: {}
          description: shows list of fields in rows that we use for Y-axis of chart
      required:
        - primary_form
    CombinedFieldsChartCreateRequest:
      type: object
      properties:
        primary_form:
          type: string
        x_field:
          type: string
        y_fields:
          type: array
          items:
            type: string
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
        chart_type:
          allOf:
            - $ref: '#/components/schemas/ChartTypeEnum'
          title: Type
          description: type of the chart.
        rows_y_fields:
          type: object
          additionalProperties: {}
          description: shows list of fields in rows that we use for Y-axis of chart
      required:
        - primary_form
    CopyForm:
      type: object
      properties:
        category:
          type: string
          nullable: true
          description: category's slug.
    CopyFormRequest:
      type: object
      properties:
        category:
          type: string
          nullable: true
          description: category's slug.
    CreateAPIKey:
      type: object
      properties:
        key:
          type: string
          readOnly: true
    CreateAPIKeyRequest:
      type: object
      properties:
        refresh:
          type: boolean
          writeOnly: true
          default: false
    CreateForm:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        forward_submit_emails_to:
          type: object
          additionalProperties: {}
          readOnly: true
        owner:
          allOf:
            - $ref: '#/components/schemas/User'
          readOnly: true
        category:
          type: string
          nullable: true
          description: category's slug.
        admin_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        user_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        fields:
          type: object
          additionalProperties: {}
          readOnly: true
        submit_count:
          type: integer
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        user_spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id of user
          description: id for the corresponding google sheet of user.
          readOnly: true
        user_spreadsheet_range:
          type: string
          nullable: true
          title: Google spreadsheet range
          description: range(name of sheet) for the corresponding google sheet of user.
          readOnly: true
        user_spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url of user
          description: url for the corresponding google sheet of user.
          readOnly: true
        export_in_progress:
          type: boolean
          description: Shows if there's an excel export task in progress for the form.
          readOnly: true
        last_export_file:
          type: string
          format: uri
          nullable: true
          readOnly: true
        last_export_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export created.
          readOnly: true
        copied_from:
          type: string
          readOnly: true
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        logic:
          type: object
          additionalProperties: {}
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        max_submit_per_ip_per_day:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Max submits per ip per day
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        spreadsheet_id:
          type: string
          readOnly: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
        spreadsheet_url:
          type: string
          readOnly: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
        last_submit_time:
          type: string
          format: date-time
          readOnly: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          readOnly: true
          description: shows how many submits the form has.
        total_size:
          type: integer
          readOnly: true
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
        primary_email:
          type: integer
          nullable: true
          description: 'an email field in the form, to send the submitted data to.'
    CreateFormRequest:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        form_fields:
          type: array
          items:
            type: string
            writeOnly: true
          writeOnly: true
          description: a list of form's fields' slug.
        category:
          type: string
          nullable: true
          description: category's slug.
        admin_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        user_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        logic:
          type: object
          additionalProperties: {}
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        max_submit_per_ip_per_day:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Max submits per ip per day
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: binary
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: binary
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: binary
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
        primary_email:
          type: integer
          nullable: true
          description: 'an email field in the form, to send the submitted data to.'
    CreateTypeEnum:
      enum:
        - api
        - excel
      type: string
    CreateUTMTracker:
      type: object
      properties:
        query:
          type: string
          readOnly: true
    CreateUTMTrackerRequest:
      type: object
      properties:
        source:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - source
    Currency:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        currency_code:
          type: string
          maxLength: 3
        sign:
          type: string
          nullable: true
          maxLength: 15
      required:
        - currency_code
        - title
    CurrencyEnum:
      enum:
        - irr
        - irt
        - usd
        - eur
        - other
      type: string
    CurrencyRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        currency_code:
          type: string
          minLength: 1
          maxLength: 3
        sign:
          type: string
          nullable: true
          maxLength: 15
      required:
        - currency_code
        - title
    DateField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        calculated_default_date:
          type: string
          readOnly: true
        calculated_relative_range_start:
          type: string
          readOnly: true
        calculated_relative_range_end:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        from_date:
          type: string
          format: date
          nullable: true
          title: Fom date
          description: minimum acceptable date
        to_date:
          type: string
          format: date
          nullable: true
          description: maximum acceptable date
        relative_range_start:
          type: string
          nullable: true
          description: >-
            define an offset for the accepted date, for example `-1m -2d` (for
            dates after 1 month and 2 days ago).
          pattern: ^(((\+|-)?\d+)(d|w|m|y)\s*)+$
          maxLength: 63
        relative_range_end:
          type: string
          nullable: true
          description: >-
            define an offset for the accepted date, for example `-1m -2d` (for
            dates before 1 month and 2 days ago.).
          pattern: ^(((\+|-)?\d+)(d|w|m|y)\s*)+$
          maxLength: 63
        default_date:
          type: string
          nullable: true
          description: >-
            If set, a defined date will be automatically set for the field upon
            submit. Choices are `today`, `custom`, or a date range like `-5y` or
            `+1d +2w` or etc.
          pattern: ^((custom)|(today)|((((\+|-)?\d+)(d|w|m|y)\s*)+))$
          maxLength: 63
        custom_default_date:
          type: string
          format: date
          nullable: true
          description: >-
            if `default_date` is set to `custom`, the default date should be
            read from this field.
        date_format:
          type: string
          nullable: true
          maxLength: 255
    DateFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        from_date:
          type: string
          format: date
          nullable: true
          title: Fom date
          description: minimum acceptable date
        to_date:
          type: string
          format: date
          nullable: true
          description: maximum acceptable date
        relative_range_start:
          type: string
          nullable: true
          description: >-
            define an offset for the accepted date, for example `-1m -2d` (for
            dates after 1 month and 2 days ago).
          pattern: ^(((\+|-)?\d+)(d|w|m|y)\s*)+$
          maxLength: 63
        relative_range_end:
          type: string
          nullable: true
          description: >-
            define an offset for the accepted date, for example `-1m -2d` (for
            dates before 1 month and 2 days ago.).
          pattern: ^(((\+|-)?\d+)(d|w|m|y)\s*)+$
          maxLength: 63
        default_date:
          type: string
          nullable: true
          description: >-
            If set, a defined date will be automatically set for the field upon
            submit. Choices are `today`, `custom`, or a date range like `-5y` or
            `+1d +2w` or etc.
          pattern: ^((custom)|(today)|((((\+|-)?\d+)(d|w|m|y)\s*)+))$
          maxLength: 63
        custom_default_date:
          type: string
          format: date
          nullable: true
          description: >-
            if `default_date` is set to `custom`, the default date should be
            read from this field.
        date_format:
          type: string
          nullable: true
          maxLength: 255
    DropdownField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    DropdownFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this field's removed choices. (For
            when you're removing an existing choice from the field).
        bulk_choices:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          description: Use to send a bulk list of choices to add to the field
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    DuplicateFieldRequest:
      type: object
      properties:
        copied_field:
          type: string
          writeOnly: true
          minLength: 1
          description: the slug of the field you want to copy.
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - copied_field
    EmailField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    EmailFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    EmailOTP:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
          description: a unique identifier for working with the object.
        tried:
          type: integer
          maximum: 32767
          minimum: 0
          description: number of times user send a token to validate the code and uuid.
        last_tried_date:
          type: string
          format: date-time
          title: Last_tried_time
          description: last time of retrying otp.
    EmailOTPRequest:
      type: object
      properties:
        tried:
          type: integer
          maximum: 32767
          minimum: 0
          description: number of times user send a token to validate the code and uuid.
        last_tried_date:
          type: string
          format: date-time
          title: Last_tried_time
          description: last time of retrying otp.
    EmailSender:
      type: object
      properties:
        sender_default_email:
          type: string
          format: email
          nullable: true
          description: >-
            sender's default email. if not set, email's will be sent from the
            system's default.
          maxLength: 255
        sender_default_name:
          type: string
          nullable: true
          description: >-
            sender's default name. you'll have to set the sender default email
            to use this.
          maxLength: 63
        default_reply_to_email:
          type: string
          format: email
          nullable: true
          description: >-
            the default address to set as the email's default `reply to` email
            address.
          maxLength: 254
        smtp_username:
          type: string
          nullable: true
          description: >-
            smtp username. you'll have to set this value to use the custom
            sender.
        smtp_host:
          type: string
          nullable: true
          description: >-
            smtp smtp host. you'll have to set this value to use the custom
            sender.
          maxLength: 255
        smtp_port:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          description: smtp port. you'll have to set this value to use the custom sender.
        smtp_use_tls:
          type: boolean
        is_enabled:
          type: boolean
          title: Enabled
          description: is this sender currently enabled?
        is_active:
          type: string
          readOnly: true
        slug:
          type: string
          nullable: true
          readOnly: true
        title:
          type: string
          nullable: true
          description: a title to identify this email sever
          maxLength: 255
    EmailSenderRequest:
      type: object
      properties:
        sender_default_email:
          type: string
          format: email
          nullable: true
          description: >-
            sender's default email. if not set, email's will be sent from the
            system's default.
          maxLength: 255
        sender_default_name:
          type: string
          nullable: true
          description: >-
            sender's default name. you'll have to set the sender default email
            to use this.
          maxLength: 63
        default_reply_to_email:
          type: string
          format: email
          nullable: true
          description: >-
            the default address to set as the email's default `reply to` email
            address.
          maxLength: 254
        smtp_username:
          type: string
          nullable: true
          description: >-
            smtp username. you'll have to set this value to use the custom
            sender.
        smtp_password:
          type: string
          writeOnly: true
        smtp_host:
          type: string
          nullable: true
          description: >-
            smtp smtp host. you'll have to set this value to use the custom
            sender.
          maxLength: 255
        smtp_port:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          description: smtp port. you'll have to set this value to use the custom sender.
        smtp_use_tls:
          type: boolean
        is_enabled:
          type: boolean
          title: Enabled
          description: is this sender currently enabled?
        title:
          type: string
          nullable: true
          description: a title to identify this email sever
          maxLength: 255
      required:
        - smtp_password
    EmailSenderShort:
      type: object
      properties:
        is_system_default:
          type: boolean
          description: is this a default email sender created by system?
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify this email sever
          maxLength: 255
    EmailSenderShortRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify this email sever
          maxLength: 255
    EmailTemplate:
      type: object
      properties:
        is_active:
          type: string
          readOnly: true
        email_server:
          allOf:
            - $ref: '#/components/schemas/EmailSenderShort'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify the email template
          maxLength: 255
        sender_email:
          type: string
          nullable: true
          description: >-
            use if you want to send the email from a specific address. can be
            read from the context.
          maxLength: 63
        reply_to_email:
          type: string
          nullable: true
          description: the address to set as the email's `reply to` email address.
          maxLength: 255
        sender_name:
          type: string
          nullable: true
          description: >-
            use if you want to set the sender's name. can be read from the
            context.
          maxLength: 63
        subject:
          type: string
          nullable: true
          title: Email subject
          description: use to set a template for emil's subject
          maxLength: 255
        body:
          type: string
          description: body of the email template
        is_enabled:
          type: boolean
    EmailTemplateExample:
      type: object
      properties:
        is_active:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify the email template
          maxLength: 255
        sender_email:
          type: string
          nullable: true
          description: >-
            use if you want to send the email from a specific address. can be
            read from the context.
          maxLength: 63
        reply_to_email:
          type: string
          nullable: true
          description: the address to set as the email's `reply to` email address.
          maxLength: 255
        sender_name:
          type: string
          nullable: true
          description: >-
            use if you want to set the sender's name. can be read from the
            context.
          maxLength: 63
        subject:
          type: string
          nullable: true
          title: Email subject
          description: use to set a template for emil's subject
          maxLength: 255
        body:
          type: string
          description: body of the email template
        is_enabled:
          type: boolean
        is_example:
          type: boolean
        thumbnail:
          type: string
          format: uri
          nullable: true
        email_server:
          type: integer
          nullable: true
          description: the email server used to send this email
    EmailTemplateExampleRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify the email template
          maxLength: 255
        sender_email:
          type: string
          nullable: true
          description: >-
            use if you want to send the email from a specific address. can be
            read from the context.
          maxLength: 63
        reply_to_email:
          type: string
          nullable: true
          description: the address to set as the email's `reply to` email address.
          maxLength: 255
        sender_name:
          type: string
          nullable: true
          description: >-
            use if you want to set the sender's name. can be read from the
            context.
          maxLength: 63
        subject:
          type: string
          nullable: true
          title: Email subject
          description: use to set a template for emil's subject
          maxLength: 255
        body:
          type: string
          description: body of the email template
        is_enabled:
          type: boolean
        is_example:
          type: boolean
        thumbnail:
          type: string
          format: binary
          nullable: true
        email_server:
          type: integer
          nullable: true
          description: the email server used to send this email
    EmailTemplateRequest:
      type: object
      properties:
        email_server_slug:
          type: string
          writeOnly: true
          nullable: true
          description: the email server used by this email template for sending emails.
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify the email template
          maxLength: 255
        sender_email:
          type: string
          nullable: true
          description: >-
            use if you want to send the email from a specific address. can be
            read from the context.
          maxLength: 63
        reply_to_email:
          type: string
          nullable: true
          description: the address to set as the email's `reply to` email address.
          maxLength: 255
        sender_name:
          type: string
          nullable: true
          description: >-
            use if you want to set the sender's name. can be read from the
            context.
          maxLength: 63
        subject:
          type: string
          nullable: true
          title: Email subject
          description: use to set a template for emil's subject
          maxLength: 255
        body:
          type: string
          description: body of the email template
        is_enabled:
          type: boolean
    EmailTemplateShort:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: a title to identify the email template
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        is_enabled:
          type: boolean
        is_active:
          type: string
          readOnly: true
    EmailVerificationStateEnum:
      enum:
        - not_required
        - not_verified
        - verified
      type: string
    ExportToGoogleSheetsRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
    Field:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
      required:
        - type
    FieldAction:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    FieldActionRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    FieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
      required:
        - type
    FileField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        file_type:
          allOf:
            - $ref: '#/components/schemas/FileTypeEnum'
          description: the acceptable file type.
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Maximum size (kbs)
          description: maximum file size (kbs).
    FileFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        file_type:
          allOf:
            - $ref: '#/components/schemas/FileTypeEnum'
          description: the acceptable file type.
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Maximum size (kbs)
          description: maximum file size (kbs).
    FileTypeEnum:
      enum:
        - image
        - document
        - all
      type: string
    ForceUpdate:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        type:
          allOf:
            - $ref: '#/components/schemas/ForceUpdateTypeEnum'
          description: type of force update
        from_version:
          type: string
          description: The version from which we have to ask the user to update the app.
          maxLength: 25
        to_version:
          type: string
          description: >-
            The version that we want the user to update the app until that
            version.
          maxLength: 25
      required:
        - from_version
        - title
        - to_version
    ForceUpdateTypeEnum:
      enum:
        - update
        - suggest_update
      type: string
    FormChartsBlock:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        subtype:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - title
    FormChartsBlockRequest:
      type: object
      properties:
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        subtype:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - title
    FormCurrencyTypeEnum:
      enum:
        - irr
        - dollar
        - irt
        - USD
        - EUR
        - GBP
        - AUD
        - CAD
        - CHF
        - NOK
        - SEK
        - DKK
        - MXN
        - NZD
        - BRL
        - JPY
        - INR
        - AED
        - IDR
      type: string
    FormDisplayBlock:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        subtype:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        display_type:
          $ref: '#/components/schemas/FormDisplayBlockDisplayTypeEnum'
      required:
        - title
    FormDisplayBlockDisplayTypeEnum:
      enum:
        - open_web
        - display_single_page
        - display_multi_page
      type: string
    FormDisplayBlockRequest:
      type: object
      properties:
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        subtype:
          type: string
          minLength: 1
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        display_type:
          $ref: '#/components/schemas/FormDisplayBlockDisplayTypeEnum'
      required:
        - title
    FormField:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: the form's display name.
          readOnly: true
        slug:
          type: string
          nullable: true
          readOnly: true
        suspended:
          type: boolean
          readOnly: true
        verified:
          type: boolean
          description: defines if the form is verified or not.
          readOnly: true
        permanently_verified:
          type: boolean
          description: >-
            defines if the form is permanently verified or not. meaning, event
            after changes, it won't need to be verified again.
          readOnly: true
        total_visits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many times the form was visited.
    FormFieldRequest:
      type: object
      properties:
        form_fields:
          type: array
          items: {}
          writeOnly: true
          description: a list of form fields' slug.
        total_visits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many times the form was visited.
      required:
        - form_fields
    FormImportRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          writeOnly: true
          description: An excel file containing the forms' rows and columns.
      required:
        - file
    FormLiveDashboard:
      type: object
      properties:
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        created_at:
          type: string
          format: date-time
          readOnly: true
        description:
          type: string
          nullable: true
          description: a description about form.
        fields_list:
          type: object
          additionalProperties: {}
          readOnly: true
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        stats:
          type: object
          additionalProperties: {}
          readOnly: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        visit_count:
          type: integer
          readOnly: true
        total_visits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many times the form was visited.
    FormLiveDashboardCode:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        subdomain:
          type: string
          readOnly: true
    FormLiveDashboardCodeRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
    FormResultBlockCreate:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        filters:
          type: object
          additionalProperties: {}
          nullable: true
      required:
        - title
    FormResultBlockCreateRequest:
      type: object
      properties:
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        filters:
          type: object
          additionalProperties: {}
          nullable: true
      required:
        - title
    FormResultBlockDuplicate:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        title:
          type: string
        menu_item:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        filters:
          type: object
          additionalProperties: {}
          nullable: true
    FormResultBlockDuplicateRequest:
      type: object
      properties:
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        title:
          type: string
          minLength: 1
        menu_item:
          type: string
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        filters:
          type: object
          additionalProperties: {}
          nullable: true
    FormSharedProfilesList:
      type: object
      properties:
        profile:
          type: object
          additionalProperties: {}
          readOnly: true
        category:
          type: object
          additionalProperties: {}
          readOnly: true
        direct_share:
          type: object
          additionalProperties: {}
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        access:
          allOf:
            - $ref: '#/components/schemas/AccessEnum'
          nullable: true
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        share_type:
          allOf:
            - $ref: '#/components/schemas/ShareTypeEnum'
          description: the field that user used to share form.
        category_user:
          type: integer
          nullable: true
          description: shows the category that gives access to form for user.
    FormShort:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        forward_submit_emails_to:
          type: object
          additionalProperties: {}
          readOnly: true
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
    FormShortRequest:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: binary
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: binary
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: binary
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
    FormStats:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        stats:
          type: object
          additionalProperties: {}
          readOnly: true
    FormSummary:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        owner:
          allOf:
            - $ref: '#/components/schemas/User'
          readOnly: true
        submit_count:
          type: integer
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        export_in_progress:
          type: boolean
          description: Shows if there's an excel export task in progress for the form.
          readOnly: true
        last_export_file:
          type: string
          format: uri
          nullable: true
          readOnly: true
        last_export_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export created.
          readOnly: true
        user_spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id of user
          description: id for the corresponding google sheet of user.
          readOnly: true
        user_spreadsheet_range:
          type: string
          nullable: true
          title: Google spreadsheet range
          description: range(name of sheet) for the corresponding google sheet of user.
          readOnly: true
        user_spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url of user
          description: url for the corresponding google sheet of user.
          readOnly: true
        category:
          allOf:
            - $ref: '#/components/schemas/Category'
          readOnly: true
        admin_email_notif_template:
          allOf:
            - $ref: '#/components/schemas/EmailTemplateShort'
          readOnly: true
        user_email_notif_template:
          allOf:
            - $ref: '#/components/schemas/EmailTemplateShort'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FormTag'
          readOnly: true
        copied_from:
          type: string
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        shared_access:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        active:
          type: boolean
          description: defines if the form is active and users can see and submit it.
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_export_start_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export task was started for the form?
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        is_empty:
          type: boolean
          title: Empty
          description: is the form empty
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
    FormTag:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        title:
          type: string
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
        address:
          type: string
          nullable: true
          description: A unique string to used by users to get all the forms with this tag.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    FormTagRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
        address:
          type: string
          nullable: true
          description: A unique string to used by users to get all the forms with this tag.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    FormTemplate:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        owner:
          type: object
          additionalProperties: {}
          readOnly: true
        submit_count:
          type: integer
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        export_in_progress:
          type: boolean
          description: Shows if there's an excel export task in progress for the form.
          readOnly: true
        last_export_file:
          type: string
          format: uri
          nullable: true
          readOnly: true
        last_export_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export created.
          readOnly: true
        user_spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id of user
          description: id for the corresponding google sheet of user.
          readOnly: true
        user_spreadsheet_range:
          type: string
          nullable: true
          title: Google spreadsheet range
          description: range(name of sheet) for the corresponding google sheet of user.
          readOnly: true
        user_spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url of user
          description: url for the corresponding google sheet of user.
          readOnly: true
        category:
          allOf:
            - $ref: '#/components/schemas/Category'
          readOnly: true
        admin_email_notif_template:
          allOf:
            - $ref: '#/components/schemas/EmailTemplateShort'
          readOnly: true
        user_email_notif_template:
          allOf:
            - $ref: '#/components/schemas/EmailTemplateShort'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/FormTag'
          readOnly: true
        copied_from:
          type: string
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        copies_count:
          type: integer
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        active:
          type: boolean
          description: defines if the form is active and users can see and submit it.
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
    FormTypeEnum:
      enum:
        - simple
        - multi_step
        - nps
      type: string
    FormUpdate:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        forward_submit_emails_to:
          type: array
          items:
            type: string
            format: email
          description: A list of emails to forward the form submit emails to.
        owner:
          allOf:
            - $ref: '#/components/schemas/User'
          readOnly: true
        fields:
          type: object
          additionalProperties: {}
          readOnly: true
        fields_list:
          type: object
          additionalProperties: {}
          readOnly: true
        submit_count:
          type: integer
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        has_email_fields:
          type: boolean
          readOnly: true
        user_spreadsheet_id:
          type: string
          nullable: true
        user_spreadsheet_range:
          type: string
          nullable: true
        user_spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url of user
          description: url for the corresponding google sheet of user.
          readOnly: true
        export_in_progress:
          type: boolean
          description: Shows if there's an excel export task in progress for the form.
          readOnly: true
        last_export_file:
          type: string
          format: uri
          nullable: true
          readOnly: true
        last_export_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export created.
          readOnly: true
        copied_from:
          type: string
          readOnly: true
        category:
          type: string
          nullable: true
          description: category's slug.
        admin_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        user_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          readOnly: true
        logic:
          type: object
          additionalProperties: {}
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          readOnly: true
        logic_metadata:
          type: object
          additionalProperties: {}
          readOnly: true
        shared_access:
          type: string
          readOnly: true
        row_tags:
          type: object
          additionalProperties: {}
          readOnly: true
        payment_method:
          type: string
          nullable: true
        redirection_address:
          type: string
          nullable: true
        fixed_payment_amount:
          type: string
          nullable: true
        logo_url:
          type: string
          readOnly: true
        background_image_url:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        max_submit_per_ip_per_day:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Max submits per ip per day
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        active:
          type: boolean
          description: defines if the form is active and users can see and submit it.
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_export_start_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export task was started for the form?
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
        primary_email:
          type: integer
          nullable: true
          description: 'an email field in the form, to send the submitted data to.'
        shared_users:
          type: array
          items:
            type: integer
          readOnly: true
      required:
        - fixed_payment_amount
        - payment_method
        - redirection_address
        - user_spreadsheet_id
        - user_spreadsheet_range
    FormUpdateRequest:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        forward_submit_emails_to:
          type: array
          items:
            type: string
            format: email
            minLength: 1
          description: A list of emails to forward the form submit emails to.
        user_spreadsheet_id:
          type: string
          nullable: true
          minLength: 1
        user_spreadsheet_range:
          type: string
          nullable: true
          minLength: 1
        category:
          type: string
          nullable: true
          description: category's slug.
        admin_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        user_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        logic:
          type: object
          additionalProperties: {}
        form_fields:
          type: array
          items:
            type: string
            writeOnly: true
          writeOnly: true
          description: a list of form fields' slug.
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this form's removed fields. (For
            when you're removing an existing field from the form).
        payment_method:
          type: string
          nullable: true
        redirection_address:
          type: string
          nullable: true
        fixed_payment_amount:
          type: string
          nullable: true
        shuffle_choices:
          type: boolean
          writeOnly: true
          nullable: true
        logo_slug:
          type: string
          writeOnly: true
        background_image_slug:
          type: string
          writeOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        max_submit_per_ip_per_day:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Max submits per ip per day
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: binary
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: binary
          nullable: true
          description: the logo to be shown on the top of form
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: binary
          nullable: true
          description: background image for this form.
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        active:
          type: boolean
          description: defines if the form is active and users can see and submit it.
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_export_start_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export task was started for the form?
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
        primary_email:
          type: integer
          nullable: true
          description: 'an email field in the form, to send the submitted data to.'
      required:
        - fixed_payment_amount
        - payment_method
        - redirection_address
        - user_spreadsheet_id
        - user_spreadsheet_range
    FormWebhook:
      type: object
      properties:
        url:
          type: string
          format: uri
          description: >-
            the call back url to send the data to after the webhook has been
            triggered.
          maxLength: 512
        secret:
          type: string
          nullable: true
          description: >-
            an optional secret key sent to the url, inside header (in a
            pre-defined header key).
        form_submit_events:
          type: boolean
          description: is called everytime form has a new submit.
        row_payment_events:
          type: boolean
          description: is called everytime form receives a successful payment.
        row_update_events:
          type: boolean
          description: is called everytime a row is edited.
        active:
          type: boolean
          description: whether the webhook is currently active or not.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - url
    FormWebhookRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          description: >-
            the call back url to send the data to after the webhook has been
            triggered.
          maxLength: 512
        secret:
          type: string
          nullable: true
          description: >-
            an optional secret key sent to the url, inside header (in a
            pre-defined header key).
        form_submit_events:
          type: boolean
          description: is called everytime form has a new submit.
        row_payment_events:
          type: boolean
          description: is called everytime form receives a successful payment.
        row_update_events:
          type: boolean
          description: is called everytime a row is edited.
        active:
          type: boolean
          description: whether the webhook is currently active or not.
      required:
        - url
    GatewayEnum:
      enum:
        - pasargad
        - zarrinpal
        - asan_pardakht
        - stripe
        - paypal
        - square
        - razorpay
      type: string
    GetLiveDashboardCode:
      type: object
      properties:
        code:
          type: string
          nullable: true
          description: the code with which the live dashboard will be shared.
          maxLength: 6
        form:
          allOf:
            - $ref: '#/components/schemas/FormLiveDashboardCode'
          readOnly: true
    GetLiveDashboardCodeRequest:
      type: object
      properties:
        code:
          type: string
          nullable: true
          description: the code with which the live dashboard will be shared.
          maxLength: 6
    HiddenField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    HiddenFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    KanbanBlockCreate:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        columns_field:
          type: string
        items_field:
          type: string
        featured_image_field:
          type: string
        base_block:
          type: string
        content_filters:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        filters:
          type: object
          additionalProperties: {}
          nullable: true
        settings:
          type: object
          additionalProperties: {}
          nullable: true
        mode:
          $ref: '#/components/schemas/ModeEnum'
        display_type:
          $ref: '#/components/schemas/KanbanBlockCreateDisplayTypeEnum'
      required:
        - items_field
        - title
    KanbanBlockCreateDisplayTypeEnum:
      enum:
        - kanban
        - grid_view
      type: string
    KanbanBlockCreateRequest:
      type: object
      properties:
        form:
          type: string
        fields:
          type: array
          items:
            type: string
        columns_field:
          type: string
        items_field:
          type: string
        featured_image_field:
          type: string
        base_block:
          type: string
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        filters:
          type: object
          additionalProperties: {}
          nullable: true
        settings:
          type: object
          additionalProperties: {}
          nullable: true
        mode:
          $ref: '#/components/schemas/ModeEnum'
        display_type:
          $ref: '#/components/schemas/KanbanBlockCreateDisplayTypeEnum'
      required:
        - items_field
        - title
    LiveDashboardCode:
      type: object
      properties:
        code:
          type: string
          readOnly: true
          description: the code with which the live dashboard will be shared.
        form:
          allOf:
            - $ref: '#/components/schemas/FormLiveDashboardCode'
          readOnly: true
        expiration_time:
          type: string
          format: date-time
          readOnly: true
          description: shows until wich time the code will be valid.
    LocationEnum:
      enum:
        - left-sidebar
        - right-sidebar
        - header
        - footer
        - main
        - non-primary
      type: string
    LocationField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    LocationFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    LogoPositionEnum:
      enum:
        - left
        - center
        - right
      type: string
    LookupField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        related_form:
          type: string
        field:
          type: string
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
        add_new_choice:
          type: boolean
          description: shows user can add new choice item or not.
    LookupFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this field's removed choices. (For
            when you're removing an existing choice from the field).
        related_form:
          type: string
        field:
          type: string
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
        add_new_choice:
          type: boolean
          description: shows user can add new choice item or not.
    MatrixField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        choice_groups:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceGroup'
          description: >-
            A list of choice group and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Group","slug":"GROUP_SLUG"},{"title":"New GROUP"}])
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    MatrixFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this field's removed choices. (For
            when you're removing an existing choice from the field).
        bulk_choices:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          description: Use to send a bulk list of choices to add to the field
        choice_groups:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceGroupRequest'
          description: >-
            A list of choice group and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Group","slug":"GROUP_SLUG"},{"title":"New GROUP"}])
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    MenuBlock:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - title
    MenuBlockRequest:
      type: object
      properties:
        form:
          type: string
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - title
    MenuItem:
      type: object
      properties:
        sub_items:
          type: object
          additionalProperties: {}
          readOnly: true
        block:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        type:
          $ref: '#/components/schemas/MenuItemTypeEnum'
        link:
          type: string
          format: uri
          nullable: true
          description: the link to wich the menu item is set.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: an optional desctiption on the menu item.
          maxLength: 511
        color:
          type: string
          nullable: true
          description: color of item
          maxLength: 63
      required:
        - title
        - type
    MenuItemRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        type:
          $ref: '#/components/schemas/MenuItemTypeEnum'
        link:
          type: string
          format: uri
          nullable: true
          description: the link to wich the menu item is set.
          maxLength: 200
        description:
          type: string
          nullable: true
          description: an optional desctiption on the menu item.
          maxLength: 511
        color:
          type: string
          nullable: true
          description: color of item
          maxLength: 63
      required:
        - title
        - type
    MenuItemTypeEnum:
      enum:
        - block
        - link
        - group
      type: string
    MetaField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/MetaFieldSubTypeEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        video_link:
          type: string
          format: uri
          nullable: true
          description: link to the embeded video's page for video meta fields
          maxLength: 200
      required:
        - sub_type
    MetaFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        file_slug:
          type: string
          writeOnly: true
          minLength: 1
        file_slugs:
          type: array
          items: {}
          writeOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/MetaFieldSubTypeEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        video_link:
          type: string
          format: uri
          nullable: true
          description: link to the embeded video's page for video meta fields
          maxLength: 200
      required:
        - sub_type
    MetaFieldSubTypeEnum:
      enum:
        - page_break
        - section
        - video
      type: string
    ModeEnum:
      enum:
        - editable
        - read_only
      type: string
    MoneyField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: the currency for money input.
    MoneyFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: the currency for money input.
    MultipleSelectField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
        min_selectable_choices:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: Minimum selectable choices
          description: The minimum number of choices that the user can select.
        max_selectable_choices:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: Maximum selectable choices
          description: The maximum number of choices that the user can select.
    MultipleSelectFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this field's removed choices. (For
            when you're removing an existing choice from the field).
        bulk_choices:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          description: Use to send a bulk list of choices to add to the field
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
        min_selectable_choices:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: Minimum selectable choices
          description: The minimum number of choices that the user can select.
        max_selectable_choices:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          title: Maximum selectable choices
          description: The maximum number of choices that the user can select.
    NumberField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
    NumberFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
    OembedField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        url:
          type: string
          format: uri
          nullable: true
          description: url of the content
          maxLength: 200
        oembed:
          type: object
          additionalProperties: {}
          nullable: true
        config:
          type: object
          additionalProperties: {}
          nullable: true
    OembedFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        url:
          type: string
          format: uri
          nullable: true
          description: url of the content
          maxLength: 200
        oembed:
          type: object
          additionalProperties: {}
          nullable: true
        config:
          type: object
          additionalProperties: {}
          nullable: true
    PaginatedAccessTypeDescriptionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/access_type_descriptions/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/access_type_descriptions/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        access_type_descriptions:
          type: array
          items:
            $ref: '#/components/schemas/AccessTypeDescription'
    PaginatedBlockList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/blocks/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/blocks/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/Block'
    PaginatedBoardListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/boards/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/boards/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        boards:
          type: array
          items:
            $ref: '#/components/schemas/BoardList'
    PaginatedBoardTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/board_templates/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/board_templates/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        board_templates:
          type: array
          items:
            $ref: '#/components/schemas/BoardTemplate'
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/categories/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/categories/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedCategoryUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/category_users/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/category_users/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        category_users:
          type: array
          items:
            $ref: '#/components/schemas/CategoryUser'
    PaginatedChoiceListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        objects:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceList'
    PaginatedCombinedFieldsChartList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/combined_fields_chartss/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/combined_fields_chartss/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        combined_fields_chartss:
          type: array
          items:
            $ref: '#/components/schemas/CombinedFieldsChart'
    PaginatedCurrencyList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/currencies/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/currencies/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
    PaginatedEmailSenderList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_servers/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_servers/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        email_servers:
          type: array
          items:
            $ref: '#/components/schemas/EmailSender'
    PaginatedEmailSenderShortList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_servers/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_servers/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        email_servers:
          type: array
          items:
            $ref: '#/components/schemas/EmailSenderShort'
    PaginatedEmailTemplateExampleList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_templates/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_templates/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        email_templates:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplateExample'
    PaginatedEmailTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_templates/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/email_templates/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        email_templates:
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplate'
    PaginatedForceUpdateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/force_updates/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/force_updates/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        force_updates:
          type: array
          items:
            $ref: '#/components/schemas/ForceUpdate'
    PaginatedFormSharedProfilesListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/shared_profiles/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/shared_profiles/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        shared_profiles:
          type: array
          items:
            $ref: '#/components/schemas/FormSharedProfilesList'
    PaginatedFormSummaryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        objects:
          type: array
          items:
            $ref: '#/components/schemas/FormSummary'
    PaginatedFormTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/form_tags/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/form_tags/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        form_tags:
          type: array
          items:
            $ref: '#/components/schemas/FormTag'
    PaginatedFormTemplateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/forms/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/forms/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        forms:
          type: array
          items:
            $ref: '#/components/schemas/FormTemplate'
    PaginatedPaymentMethodList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        objects:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaginatedReportList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/reports/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/reports/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    PaginatedRowList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/rows/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/rows/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        rows:
          type: array
          items:
            $ref: '#/components/schemas/Row'
    PaginatedRowSearchList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/rows/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/rows/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        rows:
          type: array
          items:
            $ref: '#/components/schemas/RowSearch'
    PaginatedRowTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/objects/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        objects:
          type: array
          items:
            $ref: '#/components/schemas/RowTag'
    PaginatedShowFormSummaryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/forms/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/forms/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        forms:
          type: array
          items:
            $ref: '#/components/schemas/ShowFormSummary'
    PaginatedTableChartList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/table_charts/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/table_charts/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        table_charts:
          type: array
          items:
            $ref: '#/components/schemas/TableChart'
    PaginatedThemeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/themes/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/themes/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        themes:
          type: array
          items:
            $ref: '#/components/schemas/Theme'
    PaginatedUserShortWithCategoryAccessList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/profiles/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/profiles/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        profiles:
          type: array
          items:
            $ref: '#/components/schemas/UserShortWithCategoryAccess'
    PatchedBlockRequest:
      type: object
      properties:
        form:
          type: string
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
    PatchedBoardUpdateRequest:
      type: object
      properties:
        blocks:
          type: object
          additionalProperties: {}
          description: >-
            A dictionary of block locations and slug of the blocks in each
            location.
        template:
          type: string
        copied_from:
          type: string
          minLength: 1
        thumbnail_slug:
          type: string
          writeOnly: true
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        refresh_share_address:
          type: boolean
          default: false
          description: >-
            If set true, the board's share address will be replaced by a new
            automaticly generated address. This change is irreversible.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
    PatchedCategoryRequest:
      type: object
      properties:
        parent_category:
          type: string
          nullable: true
          description: 'If the category has a parent category, send its slug on this field.'
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
    PatchedEmailSenderRequest:
      type: object
      properties:
        sender_default_email:
          type: string
          format: email
          nullable: true
          description: >-
            sender's default email. if not set, email's will be sent from the
            system's default.
          maxLength: 255
        sender_default_name:
          type: string
          nullable: true
          description: >-
            sender's default name. you'll have to set the sender default email
            to use this.
          maxLength: 63
        default_reply_to_email:
          type: string
          format: email
          nullable: true
          description: >-
            the default address to set as the email's default `reply to` email
            address.
          maxLength: 254
        smtp_username:
          type: string
          nullable: true
          description: >-
            smtp username. you'll have to set this value to use the custom
            sender.
        smtp_password:
          type: string
          writeOnly: true
        smtp_host:
          type: string
          nullable: true
          description: >-
            smtp smtp host. you'll have to set this value to use the custom
            sender.
          maxLength: 255
        smtp_port:
          type: integer
          maximum: 32767
          minimum: 0
          nullable: true
          description: smtp port. you'll have to set this value to use the custom sender.
        smtp_use_tls:
          type: boolean
        is_enabled:
          type: boolean
          title: Enabled
          description: is this sender currently enabled?
        title:
          type: string
          nullable: true
          description: a title to identify this email sever
          maxLength: 255
    PatchedEmailTemplateRequest:
      type: object
      properties:
        email_server_slug:
          type: string
          writeOnly: true
          nullable: true
          description: the email server used by this email template for sending emails.
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: a title to identify the email template
          maxLength: 255
        sender_email:
          type: string
          nullable: true
          description: >-
            use if you want to send the email from a specific address. can be
            read from the context.
          maxLength: 63
        reply_to_email:
          type: string
          nullable: true
          description: the address to set as the email's `reply to` email address.
          maxLength: 255
        sender_name:
          type: string
          nullable: true
          description: >-
            use if you want to set the sender's name. can be read from the
            context.
          maxLength: 63
        subject:
          type: string
          nullable: true
          title: Email subject
          description: use to set a template for emil's subject
          maxLength: 255
        body:
          type: string
          description: body of the email template
        is_enabled:
          type: boolean
    PatchedFieldActionRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    PatchedFormFieldRequest:
      type: object
      properties:
        form_fields:
          type: array
          items: {}
          writeOnly: true
          description: a list of form fields' slug.
        total_visits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many times the form was visited.
    PatchedFormTagRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
        address:
          type: string
          nullable: true
          description: A unique string to used by users to get all the forms with this tag.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    PatchedFormUpdateRequest:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        forward_submit_emails_to:
          type: array
          items:
            type: string
            format: email
            minLength: 1
          description: A list of emails to forward the form submit emails to.
        user_spreadsheet_id:
          type: string
          nullable: true
          minLength: 1
        user_spreadsheet_range:
          type: string
          nullable: true
          minLength: 1
        category:
          type: string
          nullable: true
          description: category's slug.
        admin_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        user_email_notif_template:
          type: string
          nullable: true
          description: email template's slug.
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        logic:
          type: object
          additionalProperties: {}
        form_fields:
          type: array
          items:
            type: string
            writeOnly: true
          writeOnly: true
          description: a list of form fields' slug.
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this form's removed fields. (For
            when you're removing an existing field from the form).
        payment_method:
          type: string
          nullable: true
        redirection_address:
          type: string
          nullable: true
        fixed_payment_amount:
          type: string
          nullable: true
        shuffle_choices:
          type: boolean
          writeOnly: true
          nullable: true
        logo_slug:
          type: string
          writeOnly: true
        background_image_slug:
          type: string
          writeOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        max_submit_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Maximum submit count
          description: the maximum times people can submit this form.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        max_submit_per_ip_per_day:
          type: integer
          maximum: 2147483647
          minimum: 0
          nullable: true
          title: Max submits per ip per day
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        send_emails_to:
          type: string
          format: email
          nullable: true
          description: an email address to send form data copy on each submit.
          maxLength: 254
        submit_email_notif:
          type: boolean
          title: Submit email notifications
          description: receive email notifications on each submit for the form.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        send_user_confirm:
          type: boolean
          description: whether to send a copy of data to user.
        submit_push_notif:
          type: boolean
          title: Send push notification
          description: receive push notifications on each submit for the form.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: binary
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: binary
          nullable: true
          description: the logo to be shown on the top of form
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        theme_name:
          type: string
          nullable: true
          description: the form's theme name.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: binary
          nullable: true
          description: background image for this form.
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        active:
          type: boolean
          description: defines if the form is active and users can see and submit it.
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_export_start_time:
          type: string
          format: date-time
          nullable: true
          description: when was last excel export task was started for the form?
        spreadsheet_id:
          type: string
          nullable: true
          title: Google spreadsheet id
          description: id for the corresponding google sheet.
          maxLength: 255
        spreadsheet_url:
          type: string
          nullable: true
          title: Google spreadsheet url
          description: url for the corresponding google sheet.
          maxLength: 255
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
        slack_accesses:
          type: object
          additionalProperties: {}
          nullable: true
          description: List of slack access slugs.
        primary_email:
          type: integer
          nullable: true
          description: 'an email field in the form, to send the submitted data to.'
    PatchedFormWebhookRequest:
      type: object
      properties:
        url:
          type: string
          format: uri
          minLength: 1
          description: >-
            the call back url to send the data to after the webhook has been
            triggered.
          maxLength: 512
        secret:
          type: string
          nullable: true
          description: >-
            an optional secret key sent to the url, inside header (in a
            pre-defined header key).
        form_submit_events:
          type: boolean
          description: is called everytime form has a new submit.
        row_payment_events:
          type: boolean
          description: is called everytime form receives a successful payment.
        row_update_events:
          type: boolean
          description: is called everytime a row is edited.
        active:
          type: boolean
          description: whether the webhook is currently active or not.
    PatchedProfileUpdateRequest:
      type: object
      properties:
        weekly_digest:
          type: boolean
        submit_email_notif:
          type: boolean
        submit_push_notif:
          type: boolean
        username:
          type: string
          minLength: 1
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: binary
          nullable: true
        subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the users' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their profile, if they want to show their forms
            on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        use_custom_emails:
          type: boolean
          description: >-
            if set false, all the settings for custom email templates and
            servers will be ignored.
    PatchedReportRequest:
      type: object
      properties:
        primary_form:
          type: string
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
    PatchedRowActionsRequest:
      type: object
      properties:
        row_tags:
          type: array
          items:
            type: string
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        submitter_referer_address:
          type: string
          nullable: true
          title: Referer
          description: which website was this request submitted on
          maxLength: 2048
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        data:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            the form's submitted data, in json. a key value pair with fields's
            slug.
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    PatchedRowTagRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
    PatchedVerifyEmailOTPRequest:
      type: object
      properties:
        code:
          type: string
          writeOnly: true
          minLength: 1
    PatchedVerifyPhoneOTPRequest:
      type: object
      properties:
        code:
          type: string
          writeOnly: true
          minLength: 1
    PaymentMethod:
      type: object
      properties:
        title:
          type: string
          description: payment method's display name.
          maxLength: 255
        name:
          type: string
          readOnly: true
          description: payment method's identifying name.
          pattern: '^[-a-zA-Z0-9_]+$'
        gateway:
          allOf:
            - $ref: '#/components/schemas/GatewayEnum'
          nullable: true
          description: >-
            To which gateway this payment methods redirects the request (e.g.
            pasargad).
        payment_type:
          allOf:
            - $ref: '#/components/schemas/PaymentTypeEnum'
          readOnly: true
          description: payment method's type.
        logo:
          type: string
          format: uri
          description: payment method's logo.
        description:
          type: string
          nullable: true
          description: any extra description to show with payment method.
          maxLength: 511
        active:
          type: boolean
          description: shows whether the method is currently active.
        terminal_code:
          type: string
          nullable: true
          description: the terminal code needed to connect to the gateway.
          maxLength: 255
        merchant_code:
          type: string
          nullable: true
          description: the merchant code needed to connect to the gateway.
          maxLength: 255
        private_key:
          type: string
          nullable: true
          description: the private key needed to sign the payment data.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: shows payment method ordering.
      required:
        - gateway
    PaymentMethodRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: payment method's display name.
          maxLength: 255
        gateway:
          allOf:
            - $ref: '#/components/schemas/GatewayEnum'
          nullable: true
          description: >-
            To which gateway this payment methods redirects the request (e.g.
            pasargad).
        logo:
          type: string
          format: binary
          description: payment method's logo.
        description:
          type: string
          nullable: true
          description: any extra description to show with payment method.
          maxLength: 511
        active:
          type: boolean
          description: shows whether the method is currently active.
        terminal_code:
          type: string
          nullable: true
          description: the terminal code needed to connect to the gateway.
          maxLength: 255
        merchant_code:
          type: string
          nullable: true
          description: the merchant code needed to connect to the gateway.
          maxLength: 255
        private_key:
          type: string
          nullable: true
          description: the private key needed to sign the payment data.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
          description: shows payment method ordering.
      required:
        - gateway
    PaymentTypeEnum:
      enum:
        - offline
        - gateway
      type: string
    PhoneField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
        phone_type:
          allOf:
            - $ref: '#/components/schemas/PhoneTypeEnum'
          description: 'shows if the field accepts mobile number, landline number, or both.'
    PhoneFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
        phone_type:
          allOf:
            - $ref: '#/components/schemas/PhoneTypeEnum'
          description: 'shows if the field accepts mobile number, landline number, or both.'
    PhoneTypeEnum:
      enum:
        - mobile
        - landline
        - both
      type: string
    PhoneVerificationField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    PhoneVerificationFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        acceptable_answers:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            set if the field only accepts answers from a predefined list (e.g. a
            list of emails for a email field).
    PhoneVerificationStateEnum:
      enum:
        - not_required
        - not_verified
        - verified
      type: string
    PrivateBoard:
      type: object
      properties:
        primary_form:
          allOf:
            - $ref: '#/components/schemas/PrivateShowFormSummary'
          readOnly: true
        blocks:
          type: object
          additionalProperties: {}
          readOnly: true
        template:
          type: string
        copied_from:
          type: string
        tags:
          type: array
          items:
            type: string
            nullable: true
          description: tags's slug.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        is_primary:
          type: boolean
          readOnly: true
          description: shows if this board is the primary board for the primary form.
        is_template:
          type: boolean
          readOnly: true
          description: shows if this board can be used as a template.
        title:
          type: string
          nullable: true
          description: an optional short title to identify the board by.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: an optional description on the board.
        share_address:
          type: string
          readOnly: true
          description: an auto-generated address to share the board with.
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_config:
          type: object
          additionalProperties: {}
          nullable: true
        thumbnail_url:
          type: string
          readOnly: true
          description: the thumbnail's url.
    PrivateShowFormSummary:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        fields:
          type: object
          additionalProperties: {}
          readOnly: true
        has_watermark:
          type: boolean
          readOnly: true
        recaptcha_code:
          type: string
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          readOnly: true
        shared_access:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
    ProductField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        images:
          type: object
          additionalProperties: {}
          description: >-
            a list of new or existing images for the product (each image sent as
            a base64 image).
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
          readOnly: true
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
        unit_price:
          type: string
          format: decimal
          pattern: '^-?\d{0,10}(?:\.\d{0,2})?$'
          description: the price for each item of the product.
    ProductFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        images:
          type: object
          additionalProperties: {}
          description: >-
            a list of new or existing images for the product (each image sent as
            a base64 image).
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
        unit_price:
          type: string
          format: decimal
          pattern: '^-?\d{0,10}(?:\.\d{0,2})?$'
          description: the price for each item of the product.
    Profile1:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        weekly_digest:
          type: boolean
        submit_email_notif:
          type: boolean
        submit_push_notif:
          type: boolean
        total_forms:
          type: integer
          readOnly: true
        total_submits:
          type: integer
          readOnly: true
        used_space:
          type: string
          readOnly: true
        plan:
          type: string
          readOnly: true
        plan_detail:
          type: string
          readOnly: true
        active_business:
          type: string
          readOnly: true
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: uri
          nullable: true
        verified_account:
          type: boolean
        verified_email:
          type: boolean
        verified_phone:
          type: boolean
          title: Verified phone number
        gift_credit:
          type: string
          format: decimal
          pattern: '^-?\d{0,18}(?:\.\d{0,2})?$'
          description: current amount of gift credit user has
        is_guest:
          type: boolean
        score:
          type: integer
          maximum: 2147483647
          minimum: 0
        subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the users' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their profile, if they want to show their forms
            on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        use_custom_emails:
          type: boolean
          description: >-
            if set false, all the settings for custom email templates and
            servers will be ignored.
      required:
        - submit_email_notif
        - submit_push_notif
        - username
        - weekly_digest
    ProfileExtensionsStats:
      type: object
      properties:
        stats:
          type: string
          readOnly: true
    ProfileUpdate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        verified_account:
          type: boolean
          readOnly: true
        verified_email:
          type: boolean
          readOnly: true
        verified_phone:
          type: boolean
          title: Verified phone number
          readOnly: true
        weekly_digest:
          type: boolean
        submit_email_notif:
          type: boolean
        submit_push_notif:
          type: boolean
        is_guest:
          type: boolean
          readOnly: true
        score:
          type: integer
          maximum: 2147483647
          minimum: 0
          readOnly: true
        used_space:
          type: string
          readOnly: true
        gift_credit:
          type: string
          format: decimal
          pattern: '^-?\d{0,18}(?:\.\d{0,2})?$'
          description: current amount of gift credit user has
          readOnly: true
        plan:
          type: string
          readOnly: true
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: uri
          nullable: true
        subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the users' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their profile, if they want to show their forms
            on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        use_custom_emails:
          type: boolean
          description: >-
            if set false, all the settings for custom email templates and
            servers will be ignored.
      required:
        - submit_email_notif
        - submit_push_notif
        - username
        - weekly_digest
    ProfileUpdateRequest:
      type: object
      properties:
        weekly_digest:
          type: boolean
        submit_email_notif:
          type: boolean
        submit_push_notif:
          type: boolean
        username:
          type: string
          minLength: 1
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        first_name:
          type: string
          title: Full name
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: binary
          nullable: true
        subdomain:
          type: string
          nullable: true
          description: a subdomain to for showing the users' forms.
          maxLength: 31
          pattern: '^[-a-zA-Z0-9_]+$'
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on their profile, if they want to show their forms
            on a custom domain (e.g. https://example.co/form_address/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        use_custom_emails:
          type: boolean
          description: >-
            if set false, all the settings for custom email templates and
            servers will be ignored.
      required:
        - submit_email_notif
        - submit_push_notif
        - username
        - weekly_digest
    RatingField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        has_custom_range:
          type: string
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/RatingFieldSubTypeEnum'
          title: Rating type
          description: type of the rating field.
        range_start:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
          description: >-
            if the scores have a minimum value (start of their acceptable
            range), define here.
        range_end:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
          description: >-
            if the scores have a maximum value (end of their acceptable range),
            define here.
        min_message:
          type: string
          description: text message for min value
          maxLength: 100
        max_message:
          type: string
          description: text message for max value
          maxLength: 100
        thumbnail_type:
          allOf:
            - $ref: '#/components/schemas/ThumbnailTypeEnum'
          nullable: true
          title: Rating type
          description: type of the rating field.
    RatingFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/RatingFieldSubTypeEnum'
          title: Rating type
          description: type of the rating field.
        range_start:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
          description: >-
            if the scores have a minimum value (start of their acceptable
            range), define here.
        range_end:
          type: integer
          maximum: 32767
          minimum: -32768
          nullable: true
          description: >-
            if the scores have a maximum value (end of their acceptable range),
            define here.
        min_message:
          type: string
          minLength: 1
          description: text message for min value
          maxLength: 100
        max_message:
          type: string
          minLength: 1
          description: text message for max value
          maxLength: 100
        thumbnail_type:
          allOf:
            - $ref: '#/components/schemas/ThumbnailTypeEnum'
          nullable: true
          title: Rating type
          description: type of the rating field.
    RatingFieldSubTypeEnum:
      enum:
        - star
        - like_dislike
        - nps
        - score
        - embeded
      type: string
    RegisterClient:
      type: object
      properties:
        key:
          type: string
          title: Slug
          maxLength: 255
      required:
        - key
    RegisterClientRequest:
      type: object
      properties:
        key:
          type: string
          title: Slug
          maxLength: 255
      required:
        - key
    Report:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type3f2Enum'
          description: determines the type of this report.
          readOnly: true
        primary_form:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
      required:
        - primary_form
    ReportBlock:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        report:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - report
        - title
    ReportBlockRequest:
      type: object
      properties:
        form:
          type: string
        report:
          type: string
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
      required:
        - report
        - title
    ReportRequest:
      type: object
      properties:
        primary_form:
          type: string
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
      required:
        - primary_form
    RequestEmailVerificationOTP:
      type: object
      properties:
        email_otp:
          allOf:
            - $ref: '#/components/schemas/EmailOTP'
          readOnly: true
    RequestEmailVerificationOTPRequest:
      type: object
      properties:
        owner_model:
          type: string
          writeOnly: true
          minLength: 1
        owner_slug:
          type: string
          writeOnly: true
          minLength: 1
        email:
          type: string
          format: email
          writeOnly: true
          minLength: 1
      required:
        - email
    RequestPhoneVerificationOTP:
      type: object
      properties:
        sms_otp:
          allOf:
            - $ref: '#/components/schemas/SMSOTP'
          readOnly: true
    RequestPhoneVerificationOTPRequest:
      type: object
      properties:
        owner_model:
          type: string
          writeOnly: true
          minLength: 1
        owner_slug:
          type: string
          writeOnly: true
          minLength: 1
        phone:
          type: string
          writeOnly: true
          minLength: 1
          pattern: ^\+?\d+$
      required:
        - phone
    ResendEmailOTP:
      type: object
      properties:
        tried:
          type: integer
          maximum: 32767
          minimum: 0
          description: number of times user send a token to validate the code and uuid.
          readOnly: true
        email_otp:
          allOf:
            - $ref: '#/components/schemas/EmailOTP'
          readOnly: true
    ResendPhoneOTP:
      type: object
      properties:
        tried:
          type: integer
          maximum: 32767
          minimum: 0
          description: number of times user send a token to validate the code and uuid.
          readOnly: true
        sms_otp:
          allOf:
            - $ref: '#/components/schemas/SMSOTP'
          readOnly: true
    Row:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/UserShort'
          readOnly: true
        form:
          type: string
          readOnly: true
        row_tags:
          type: array
          items:
            $ref: '#/components/schemas/RowTag'
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        data:
          type: string
          readOnly: true
        slug:
          type: string
          nullable: true
          readOnly: true
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          readOnly: true
        tracking_code:
          type: string
          nullable: true
          description: >-
            a tracking code to provide to end user. unique for each row in the
            form.
          readOnly: true
        upvotes_count:
          type: string
          readOnly: true
        downvotes_count:
          type: string
          readOnly: true
        votes_count:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        submitter_referer_address:
          type: string
          nullable: true
          title: Referer
          description: which website was this request submitted on
          maxLength: 2048
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
      required:
        - row_tags
    RowActions:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/UserShort'
          readOnly: true
        readable_data:
          type: object
          additionalProperties: {}
          readOnly: true
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        form:
          type: string
          readOnly: true
        row_tags:
          type: array
          items:
            type: string
        slug:
          type: string
          nullable: true
          readOnly: true
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          readOnly: true
        tracking_code:
          type: string
          nullable: true
          description: >-
            a tracking code to provide to end user. unique for each row in the
            form.
          readOnly: true
        next_row:
          type: string
          readOnly: true
        previous_row:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        submitter_referer_address:
          type: string
          nullable: true
          title: Referer
          description: which website was this request submitted on
          maxLength: 2048
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        data:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            the form's submitted data, in json. a key value pair with fields's
            slug.
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    RowActionsRequest:
      type: object
      properties:
        row_tags:
          type: array
          items:
            type: string
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        submitter_referer_address:
          type: string
          nullable: true
          title: Referer
          description: which website was this request submitted on
          maxLength: 2048
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        data:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            the form's submitted data, in json. a key value pair with fields's
            slug.
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    RowBulkDelete:
      type: object
      properties:
        slugs_list:
          type: array
          items:
            type: string
      required:
        - slugs_list
    RowBulkDeleteRequest:
      type: object
      properties:
        slugs_list:
          type: array
          items:
            type: string
            minLength: 1
      required:
        - slugs_list
    RowResult:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/UserShort'
          readOnly: true
        readable_data:
          type: object
          additionalProperties: {}
          readOnly: true
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        row_tags:
          type: array
          items:
            type: string
        slug:
          type: string
          nullable: true
          readOnly: true
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          readOnly: true
        tracking_code:
          type: string
          nullable: true
          description: >-
            a tracking code to provide to end user. unique for each row in the
            form.
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        submitter_referer_address:
          type: string
          nullable: true
          title: Referer
          description: which website was this request submitted on
          maxLength: 2048
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        data:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            the form's submitted data, in json. a key value pair with fields's
            slug.
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
        form:
          type: integer
          description: the form that's submitted.
      required:
        - form
    RowSearch:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/UserShort'
          readOnly: true
        form:
          $ref: '#/components/schemas/FormShort'
        row_tags:
          type: array
          items:
            $ref: '#/components/schemas/RowTag'
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        data:
          type: string
          readOnly: true
        slug:
          type: string
          nullable: true
          readOnly: true
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          readOnly: true
        tracking_code:
          type: string
          nullable: true
          description: >-
            a tracking code to provide to end user. unique for each row in the
            form.
          readOnly: true
        upvotes_count:
          type: string
          readOnly: true
        downvotes_count:
          type: string
          readOnly: true
        votes_count:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        submitter_referer_address:
          type: string
          nullable: true
          title: Referer
          description: which website was this request submitted on
          maxLength: 2048
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        searchable_data:
          type: object
          additionalProperties: {}
          description: >-
            a cache for the row's searchable data. only contains the field title
            and display value pair.
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
      required:
        - form
        - row_tags
    RowTag:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
      required:
        - title
    RowTagRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
      required:
        - title
    RowVote:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RowVoteTypeEnum'
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
    RowVoteRequest:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RowVoteTypeEnum'
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
    RowVoteTypeEnum:
      enum:
        - up_vote
        - down_vote
      type: string
    SMSOTP:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
          description: a unique identifier for working with the object.
        tried:
          type: integer
          maximum: 32767
          minimum: 0
          description: number of times user send a token to validate the code and uuid.
        last_tried_date:
          type: string
          format: date-time
          title: Last_tried_time
          description: last time of retrying otp.
    SMSOTPRequest:
      type: object
      properties:
        tried:
          type: integer
          maximum: 32767
          minimum: 0
          description: number of times user send a token to validate the code and uuid.
        last_tried_date:
          type: string
          format: date-time
          title: Last_tried_time
          description: last time of retrying otp.
    ShareAccessOnForm:
      type: object
      properties:
        profiles:
          type: array
          items:
            type: string
          description: >-
            The email or phone number with which the profile(s) have signed up
            in formaloo.
        access:
          allOf:
            - $ref: '#/components/schemas/AccessEnum'
          description: The access level we want to grant for the profile(s).
      required:
        - access
        - profiles
    ShareAccessOnFormRequest:
      type: object
      properties:
        profiles:
          type: array
          items:
            type: string
            minLength: 1
          description: >-
            The email or phone number with which the profile(s) have signed up
            in formaloo.
        access:
          allOf:
            - $ref: '#/components/schemas/AccessEnum'
          description: The access level we want to grant for the profile(s).
      required:
        - access
        - profiles
    ShareTypeEnum:
      enum:
        - phone_number
        - email
      type: string
    ShortBusiness:
      type: object
      properties:
        title:
          type: string
          description: business's title.
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          description: a description about the business.
        business_identifier:
          type: string
          readOnly: true
      required:
        - title
    ShowForm:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        fields:
          type: object
          additionalProperties: {}
          readOnly: true
        fields_list:
          type: object
          additionalProperties: {}
          readOnly: true
        has_watermark:
          type: boolean
          readOnly: true
        recaptcha_code:
          type: string
          readOnly: true
        logic:
          type: object
          additionalProperties: {}
          readOnly: true
        logic_metadata:
          type: object
          additionalProperties: {}
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
    ShowFormSummary:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        fields:
          type: object
          additionalProperties: {}
          readOnly: true
        has_watermark:
          type: boolean
          readOnly: true
        recaptcha_code:
          type: string
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        subdomain:
          type: string
          readOnly: true
        owner_custom_domain:
          type: string
          readOnly: true
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: uri
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: uri
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: uri
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
    ShowFormSummaryRequest:
      type: object
      properties:
        submit_start_time:
          type: string
          format: date-time
          nullable: true
        submit_end_time:
          type: string
          format: date-time
          nullable: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        address:
          type: string
          nullable: true
          description: >-
            A unique string to identify form for users. It's auto-generated if
            not set by user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: the form's display name.
          maxLength: 255
        show_title:
          type: boolean
          description: title visibility on form.
        description:
          type: string
          nullable: true
          description: a description about form.
        success_message:
          type: string
          nullable: true
          description: a messages to show if the form is successfully submitted.
        error_message:
          type: string
          nullable: true
          description: a messages to show if the form is not successfully submitted.
        button_text:
          type: string
          nullable: true
          description: a text to show on the form's submit button.
          maxLength: 63
        form_type:
          allOf:
            - $ref: '#/components/schemas/FormTypeEnum'
          title: Field type
          description: shows the forms type.
        needs_login:
          type: boolean
          description: whether the users need to login to submit the form.
        time_limit:
          type: string
          format: time
          nullable: true
          description: time limit to fill this form
        shuffle_fields:
          type: boolean
          description: shows wether to shuffle the ordering of the form field on show.
        form_redirects_after_submit:
          type: string
          nullable: true
          description: Either null or the url of destination.
          maxLength: 2000
        include_data_on_redirect:
          type: boolean
          description: >-
            if set true, the submitted data along with aliases will be included
            in the redirect url.
        row_update_email_notif:
          type: boolean
          title: Row update email notifications
          description: receive email notifications when a row is updated.
        row_update_push_notif:
          type: boolean
          title: Row update push notification
          description: receive push notifications when a row is updated.
        thumbnail:
          type: string
          format: binary
          nullable: true
          description: an optional thumbnail for the form
        logo:
          type: string
          format: binary
          nullable: true
          description: the logo to be shown on the top of form
        logo_slug:
          type: string
          nullable: true
          description: the logo's slug.
          maxLength: 31
        logo_url:
          type: string
          nullable: true
          description: the logo's url.
          maxLength: 900
        logo_position:
          allOf:
            - $ref: '#/components/schemas/LogoPositionEnum'
          nullable: true
          description: the logo's position.
        text_color:
          type: string
          nullable: true
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          nullable: true
          description: the form's button color.
          maxLength: 63
        theme_color:
          type: string
          nullable: true
          description: the form's theme color.
          maxLength: 63
        field_color:
          type: string
          nullable: true
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          nullable: true
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          nullable: true
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          nullable: true
          description: the form's submit text color.
          maxLength: 63
        background_image:
          type: string
          format: binary
          nullable: true
          description: background image for this form.
        background_image_slug:
          type: string
          nullable: true
          description: the background image's slug.
          maxLength: 31
        background_image_url:
          type: string
          nullable: true
          description: the background image's url.
          maxLength: 900
        theme_config:
          type: object
          additionalProperties: {}
          description: the form's additional theme configuration.
        custom_js:
          type: string
          nullable: true
        custom_css:
          type: string
          nullable: true
        config:
          type: string
          nullable: true
          description: the form's additional configuration.
          maxLength: 255
        show_calculations_score_result:
          type: boolean
          title: To show calculations result
          description: to show calculations result after user sumbits a form
        show_submit_tracking_code:
          type: boolean
          description: whether to show the tracking code after user has submitted the form.
        show_answers:
          type: boolean
          description: >-
            whether to show the reslts page containing answers and answer sheet
            after form submit.
        form_currency_type:
          allOf:
            - $ref: '#/components/schemas/FormCurrencyTypeEnum'
          nullable: true
          title: Calculation currency
          description: shows the currency of the calculations.
        position:
          type: integer
          maximum: 32767
          minimum: -32768
          description: forms position in relation to other forms.
        public_stats:
          type: boolean
          description: 'if set true, form stats will be publicly shared by a link.'
        public_rows:
          type: boolean
          description: 'if set true, submitted data will be publicly shared by a link.'
        live_dashboard_address:
          type: string
          nullable: true
          description: a read-only slug with wich the form's submitted data will be shared.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        live_dashboard_config:
          type: object
          additionalProperties: {}
          description: >-
            the form's additional live dashboard configuration, like what we
            show on dashboard or how we show them.
        address_is_universal:
          type: boolean
          title: Address is universall
          description: >-
            If set true, form's address should be universally unique, and the
            forms is accessible on the root domain, otherwise, it's only
            available on the user's domain and subdomain.
        custom_domain:
          type: string
          nullable: true
          description: >-
            user can set this on the form, if they want to show this form on a
            custom domain (e.g. https://example.co/).
          pattern: ^(\w+.)+\w+$
          maxLength: 255
        accept_draft_answers:
          type: boolean
          description: users can have draft answers on this form or not.
        last_submit_time:
          type: string
          format: date-time
          nullable: true
          description: when was the last submit on the form?
        total_submits_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: shows how many submits the form has.
        total_size:
          type: integer
          maximum: 9223372036854776000
          minimum: -9223372036854776000
          format: int64
          description: shows total size of the form and it's fields' fields in bytes.
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        has_recaptcha:
          type: boolean
          description: defines if show a recaptcha on form or not
    SignatureField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    SignatureFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    SimpleCategory:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
      required:
        - title
    SimpleCategoryRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        color:
          type: string
          nullable: true
          description: category color settings or color code.
          maxLength: 63
      required:
        - title
    StatsBlock:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type1eaEnum'
          description: 'determines the contents of this block. once set, can''t be edited.'
          readOnly: true
        form:
          type: string
        stats:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        stats_settings:
          type: object
          additionalProperties: {}
          description: >-
            shows list of available stats and whether they're active on the
            board.
      required:
        - title
    StatsBlockRequest:
      type: object
      properties:
        form:
          type: string
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          minLength: 1
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
        location:
          allOf:
            - $ref: '#/components/schemas/LocationEnum'
          description: >-
            determines the location of this block (e.g. in the sidebar, header,
            footer,...).
        color:
          type: string
          nullable: true
          description: color of block
          maxLength: 63
        stats_settings:
          type: object
          additionalProperties: {}
          description: >-
            shows list of available stats and whether they're active on the
            board.
      required:
        - title
    StatusEnum:
      enum:
        - draft
        - submit
      type: string
    SubmitForm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            the form's submitted data, in json. a key value pair with fields's
            slug.
          readOnly: true
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          allOf:
            - $ref: '#/components/schemas/UserShort'
          readOnly: true
        form:
          allOf:
            - $ref: '#/components/schemas/FormShort'
          readOnly: true
        tracking_code:
          type: string
          nullable: true
          description: >-
            a tracking code to provide to end user. unique for each row in the
            form.
          readOnly: true
        submitter_referer_address:
          type: string
        redirection_url:
          type: string
          format: uri
          readOnly: true
        extra_response:
          type: object
          additionalProperties: {}
          readOnly: true
        success_page:
          type: string
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        submitter_ip_address:
          type: string
          nullable: true
          maxLength: 127
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    SubmitFormRequest:
      type: object
      properties:
        uuid:
          type: string
          writeOnly: true
          minLength: 1
          description: the uuid of verified phone number if any exists
          maxLength: 200
        code:
          type: string
          writeOnly: true
          minLength: 1
          description: the token of verified phone number if any exists
          maxLength: 200
        email_uuid:
          type: string
          writeOnly: true
          minLength: 1
          description: the uuid of verified email if any exists
          maxLength: 200
        email_code:
          type: string
          writeOnly: true
          minLength: 1
          description: the token of verified email if any exists
          maxLength: 200
        submitter_referer_address:
          type: string
          minLength: 1
        recaptcha_value:
          type: string
          writeOnly: true
          minLength: 1
          maxLength: 200
        submit_code:
          type: string
          nullable: true
          description: a submit code to provide to user.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        submitter_ip_address:
          type: string
          nullable: true
          maxLength: 127
        sumbit_time:
          type: string
          format: time
          nullable: true
          description: time it took to fill this form
        phone_verification_state:
          allOf:
            - $ref: '#/components/schemas/PhoneVerificationStateEnum'
          title: Phone verification status
          description: >-
            shows the status of phone verification field. defualt is not
            required
        email_verification_state:
          allOf:
            - $ref: '#/components/schemas/EmailVerificationStateEnum'
          title: Email verification status
          description: >-
            shows the status of email verification field. defualt is not
            required
        calculation_score:
          type: object
          additionalProperties: {}
          nullable: true
          title: The score of calculation if there is any
          description: >-
            shows the sum of scores for each field in row. it is null if there
            is not any calculations
        create_type:
          allOf:
            - $ref: '#/components/schemas/CreateTypeEnum'
          description: shows the way that form created.
        status:
          allOf:
            - $ref: '#/components/schemas/StatusEnum'
          description: shows status of the row.
    TableChart:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type3f2Enum'
          description: determines the type of this report.
          readOnly: true
        primary_form:
          type: string
        chart_data:
          type: string
          readOnly: true
        x_field:
          type: string
        y_fields:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
        chart_type:
          allOf:
            - $ref: '#/components/schemas/ChartTypeEnum'
          title: Type
          description: type of the chart.
        rows_y_fields:
          type: object
          additionalProperties: {}
          description: shows list of fields in rows that we use for Y-axis of chart
    TableChartCreate:
      type: object
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/Type3f2Enum'
          description: determines the type of this report.
          readOnly: true
        primary_form:
          type: string
        chart_data:
          type: string
          readOnly: true
        x_field:
          type: string
        y_fields:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
        chart_type:
          allOf:
            - $ref: '#/components/schemas/ChartTypeEnum'
          title: Type
          description: type of the chart.
        rows_y_fields:
          type: object
          additionalProperties: {}
          description: shows list of fields in rows that we use for Y-axis of chart
      required:
        - primary_form
    TableChartCreateRequest:
      type: object
      properties:
        primary_form:
          type: string
        x_field:
          type: string
        y_fields:
          type: array
          items:
            type: string
        title:
          type: string
          nullable: true
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Descrption
          description: an optional descrption on the report.
        chart_type:
          allOf:
            - $ref: '#/components/schemas/ChartTypeEnum'
          title: Type
          description: type of the chart.
        rows_y_fields:
          type: object
          additionalProperties: {}
          description: shows list of fields in rows that we use for Y-axis of chart
      required:
        - primary_form
    TextChoiceField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    TextChoiceFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: object
          additionalProperties: {}
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        remove_related_form_logic:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            Remove any form logic related to this field's removed choices. (For
            when you're removing an existing choice from the field).
        bulk_choices:
          type: object
          additionalProperties: {}
          writeOnly: true
          nullable: true
          description: Use to send a bulk list of choices to add to the field
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        has_other_choice:
          type: boolean
          description: specifies that field has other choice or not.
        shuffle_choices:
          type: boolean
          description: shows whether to shuffle the ordering of the field choices or not.
    TextField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    TextFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    Theme:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_name:
          type: string
          description: the form's theme name.
          maxLength: 63
        text_color:
          type: string
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          description: the form's button color.
          maxLength: 63
        field_color:
          type: string
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          description: the form's submit text color.
          maxLength: 63
        cover_image:
          type: string
          format: uri
          description: cover image for this theme.
      required:
        - background_color
        - border_color
        - button_color
        - cover_image
        - field_color
        - submit_text_color
        - text_color
        - theme_name
    ThemeRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        theme_name:
          type: string
          minLength: 1
          description: the form's theme name.
          maxLength: 63
        text_color:
          type: string
          minLength: 1
          description: the form's text color.
          maxLength: 63
        button_color:
          type: string
          minLength: 1
          description: the form's button color.
          maxLength: 63
        field_color:
          type: string
          minLength: 1
          description: the form's field color.
          maxLength: 63
        background_color:
          type: string
          minLength: 1
          description: the form's background color.
          maxLength: 63
        border_color:
          type: string
          minLength: 1
          description: the form's border color.
          maxLength: 63
        submit_text_color:
          type: string
          minLength: 1
          description: the form's submit text color.
          maxLength: 63
        cover_image:
          type: string
          format: binary
          description: cover image for this theme.
      required:
        - background_color
        - border_color
        - button_color
        - cover_image
        - field_color
        - submit_text_color
        - text_color
        - theme_name
    ThumbnailTypeEnum:
      enum:
        - monster
        - funny_face
        - star
        - heart
        - outlined
        - flat_face
      type: string
    TimeField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        from_time:
          type: string
          format: time
          nullable: true
          title: Fom time
          description: minimum acceptable time
        to_time:
          type: string
          format: time
          nullable: true
          description: maximum acceptable time
    TimeFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
        from_time:
          type: string
          format: time
          nullable: true
          title: Fom time
          description: minimum acceptable time
        to_time:
          type: string
          format: time
          nullable: true
          description: maximum acceptable time
    Type1eaEnum:
      enum:
        - generic
        - menu
        - stats
        - form_display
        - form_result
        - form_charts
        - report
        - kanban
      type: string
    Type3f2Enum:
      enum:
        - generic
        - combined_fields_chart
        - table_chart
      type: string
    Type9ddEnum:
      enum:
        - number
        - money
        - product
        - rating
        - short_text
        - long_text
        - regex
        - website
        - email
        - phone
        - checkbox
        - yes_no
        - choice
        - dropdown
        - multiple_select
        - matrix
        - text_choice
        - time
        - date
        - file
        - signature
        - meta
        - oembed
        - email_verification
        - phone_verification
        - barcode
        - location
        - hidden
        - city
        - table
        - lookup
        - success_page
        - variable
        - choice_fetch
        - generic_field
      type: string
    UnRegisterClient:
      type: object
      properties:
        key:
          type: string
          title: Slug
          maxLength: 255
    UnRegisterClientRequest:
      type: object
      properties:
        key:
          type: string
          title: Slug
          maxLength: 255
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Full name
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        user_type:
          type: string
          readOnly: true
      required:
        - username
    UserRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Full name
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          minLength: 1
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
        - username
    UserShort:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Full name
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    UserShortRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Full name
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    UserShortWithCategoryAccess:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          title: Full name
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        shared_access:
          type: string
          readOnly: true
        category_user:
          type: string
          readOnly: true
    VerifyEmailOTP:
      type: object
      properties:
        email_otp:
          allOf:
            - $ref: '#/components/schemas/EmailOTP'
          readOnly: true
    VerifyEmailOTPRequest:
      type: object
      properties:
        code:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - code
    VerifyPhoneOTP:
      type: object
      properties:
        sms_otp:
          allOf:
            - $ref: '#/components/schemas/SMSOTP'
          readOnly: true
    VerifyPhoneOTPRequest:
      type: object
      properties:
        code:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - code
    WebhookSampleData:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        url:
          type: string
          format: uri
          description: >-
            the call back url to send the data to after the webhook has been
            triggered.
          maxLength: 512
      required:
        - url
    WebsiteField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    WebsiteFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    YesNoField:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        form:
          type: string
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type9ddEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    YesNoFieldRequest:
      type: object
      properties:
        form:
          type: string
          minLength: 1
          description: the form to which this field will be added. (form slug)
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        alias:
          type: string
          nullable: true
          description: >-
            a user-defined slug to identify the field, which is unique
            form-wide, unless null.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        answer_description:
          type: string
          nullable: true
          description: any description on this question and it's answers.
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        admin_only:
          type: boolean
          description: >-
            if set true, it will be set as admin only, and end users won't be
            able to see/submit it.
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        is_calculatable:
          type: boolean
          description: is this a calcutable field that have calculations?
        calculation_items:
          type: object
          additionalProperties: {}
          nullable: true
          description: the field's additional calculations.
        is_random_sortable:
          type: boolean
          description: 'if value is True, can randomly sort this field'
    BulkFileVerify:
      type: object
      properties:
        valid_types:
          type: array
          items: {}
        forbidden_types:
          type: array
          items: {}
        max_size:
          type: integer
        delete_old_file:
          type: boolean
          default: true
        slugs:
          type: array
          items: {}
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        model:
          type: string
          nullable: true
          description: 'shows this file belongs to which model. (Example: Form)'
          maxLength: 255
        object_slug:
          type: string
          nullable: true
          description: 'shows this file belongs to which object. (Example: Form object)'
          maxLength: 255
        field:
          type: string
          nullable: true
          description: 'shows this file belongs to which field. (Example: logo)'
          maxLength: 255
        uploaded_file:
          type: string
          format: uri
          nullable: true
          title: File
        is_active:
          type: boolean
          description: shows if this file is active or not
        type:
          $ref: '#/components/schemas/TypeEnum1'
        meta_data:
          type: object
          additionalProperties: {}
          description: meta data for file.
        app:
          type: integer
          nullable: true
          description: shows this file belongs to which app.
      required:
        - slugs
    BulkFileVerifyRequest:
      type: object
      properties:
        valid_types:
          type: array
          items: {}
        forbidden_types:
          type: array
          items: {}
        max_size:
          type: integer
        delete_old_file:
          type: boolean
          default: true
        slugs:
          type: array
          items: {}
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        model:
          type: string
          nullable: true
          description: 'shows this file belongs to which model. (Example: Form)'
          maxLength: 255
        object_slug:
          type: string
          nullable: true
          description: 'shows this file belongs to which object. (Example: Form object)'
          maxLength: 255
        field:
          type: string
          nullable: true
          description: 'shows this file belongs to which field. (Example: logo)'
          maxLength: 255
        uploaded_file:
          type: string
          format: binary
          nullable: true
          title: File
        is_active:
          type: boolean
          description: shows if this file is active or not
        type:
          $ref: '#/components/schemas/TypeEnum1'
        meta_data:
          type: object
          additionalProperties: {}
          description: meta data for file.
        app:
          type: integer
          nullable: true
          description: shows this file belongs to which app.
      required:
        - slugs
    FileRetrieve:
      type: object
      properties:
        path:
          type: string
          readOnly: true
        uploaded_file:
          type: string
          format: uri
          nullable: true
          title: File
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        meta_data:
          type: object
          additionalProperties: {}
          description: meta data for file.
    FileUpload:
      type: object
      properties:
        slug:
          type: string
          readOnly: true
          pattern: '^[-a-zA-Z0-9_]+$'
        url:
          type: string
          readOnly: true
        meta_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: meta data for file.
        uploaded_file:
          type: string
          format: uri
          readOnly: true
          title: File
    FileUploadRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          writeOnly: true
        upload_to:
          type: string
          writeOnly: true
          minLength: 1
      required:
        - file
    FileVerify:
      type: object
      properties:
        path:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        model:
          type: string
          nullable: true
          description: 'shows this file belongs to which model. (Example: Form)'
          maxLength: 255
        object_slug:
          type: string
          nullable: true
          description: 'shows this file belongs to which object. (Example: Form object)'
          maxLength: 255
        field:
          type: string
          nullable: true
          description: 'shows this file belongs to which field. (Example: logo)'
          maxLength: 255
        uploaded_file:
          type: string
          format: uri
          nullable: true
          title: File
        is_active:
          type: boolean
          description: shows if this file is active or not
        type:
          $ref: '#/components/schemas/TypeEnum1'
        meta_data:
          type: object
          additionalProperties: {}
          description: meta data for file.
        app:
          type: integer
          nullable: true
          description: shows this file belongs to which app.
    FileVerifyRequest:
      type: object
      properties:
        valid_types:
          type: array
          items: {}
          writeOnly: true
        forbidden_types:
          type: array
          items: {}
          writeOnly: true
        max_size:
          type: integer
          writeOnly: true
        delete_old_file:
          type: boolean
          writeOnly: true
          default: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        model:
          type: string
          nullable: true
          description: 'shows this file belongs to which model. (Example: Form)'
          maxLength: 255
        object_slug:
          type: string
          nullable: true
          description: 'shows this file belongs to which object. (Example: Form object)'
          maxLength: 255
        field:
          type: string
          nullable: true
          description: 'shows this file belongs to which field. (Example: logo)'
          maxLength: 255
        uploaded_file:
          type: string
          format: binary
          nullable: true
          title: File
        is_active:
          type: boolean
          description: shows if this file is active or not
        type:
          $ref: '#/components/schemas/TypeEnum1'
        meta_data:
          type: object
          additionalProperties: {}
          description: meta data for file.
        app:
          type: integer
          nullable: true
          description: shows this file belongs to which app.
    PatchedFileVerifyRequest:
      type: object
      properties:
        valid_types:
          type: array
          items: {}
          writeOnly: true
        forbidden_types:
          type: array
          items: {}
          writeOnly: true
        max_size:
          type: integer
          writeOnly: true
        delete_old_file:
          type: boolean
          writeOnly: true
          default: true
        slug:
          type: string
          nullable: true
          maxLength: 63
          pattern: '^[-a-zA-Z0-9_]+$'
        model:
          type: string
          nullable: true
          description: 'shows this file belongs to which model. (Example: Form)'
          maxLength: 255
        object_slug:
          type: string
          nullable: true
          description: 'shows this file belongs to which object. (Example: Form object)'
          maxLength: 255
        field:
          type: string
          nullable: true
          description: 'shows this file belongs to which field. (Example: logo)'
          maxLength: 255
        uploaded_file:
          type: string
          format: binary
          nullable: true
          title: File
        is_active:
          type: boolean
          description: shows if this file is active or not
        type:
          $ref: '#/components/schemas/TypeEnum1'
        meta_data:
          type: object
          additionalProperties: {}
          description: meta data for file.
        app:
          type: integer
          nullable: true
          description: shows this file belongs to which app.
    TypeEnum1:
      enum:
        - image
        - video
        - pdf
        - excel
        - unknown
      type: string
    ActionType:
      type: object
      properties:
        title:
          type: string
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        integration:
          allOf:
            - $ref: '#/components/schemas/ShortIntegrationSerialier'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        slug:
          type: string
          readOnly: true
        is_owned:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        default_operation_type:
          allOf:
            - $ref: '#/components/schemas/DefaultOperationTypeEnum'
          description: >-
            shows the default operation type for the activities with this action
            type.
        activity_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities with this action
            type. for example {"en": "An order with was the order code
            {order_code} was created."}
        action_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Custom action score
          description: >-
            how much score will a customer gain by performing a activity with
            this action type? (as defined by action type owner.)
        group:
          allOf:
            - $ref: '#/components/schemas/ActionTypeGroup'
          readOnly: true
      required:
        - title
    ActionTypeCreate:
      type: object
      properties:
        title:
          type: string
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        integration:
          type: string
          description: the integration on which we're defining the action type.
        tags:
          type: array
          items:
            type: string
            title: tags
          description: >-
            list of the slugs of tags we want to add to the customer after
            activity with this action type is raised.
        slug:
          type: string
          readOnly: true
        is_owned:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        default_operation_type:
          allOf:
            - $ref: '#/components/schemas/DefaultOperationTypeEnum'
          description: >-
            shows the default operation type for the activities with this action
            type.
        activity_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities with this action
            type. for example {"en": "An order with was the order code
            {order_code} was created."}
        action_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Custom action score
          description: >-
            how much score will a customer gain by performing a activity with
            this action type? (as defined by action type owner.)
        group:
          type: string
          description: the group on which we're defining the action type's behaviour.
      required:
        - integration
        - title
    ActionTypeCreateRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        integration:
          type: string
          description: the integration on which we're defining the action type.
        tags:
          type: array
          items:
            type: string
            title: tags
          description: >-
            list of the slugs of tags we want to add to the customer after
            activity with this action type is raised.
        default_operation_type:
          allOf:
            - $ref: '#/components/schemas/DefaultOperationTypeEnum'
          description: >-
            shows the default operation type for the activities with this action
            type.
        activity_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities with this action
            type. for example {"en": "An order with was the order code
            {order_code} was created."}
        action_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Custom action score
          description: >-
            how much score will a customer gain by performing a activity with
            this action type? (as defined by action type owner.)
        group:
          type: string
          description: the group on which we're defining the action type's behaviour.
      required:
        - integration
        - title
    ActionTypeGroup:
      type: object
      properties:
        title:
          type: string
          description: action type group's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: >-
            a short and optional desctiption on the nature of the action type
            group.
          maxLength: 511
        default_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities in this group. for
            example {"en": "An order with was the order code {order_code} was
            created."}
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - title
    ActionTypeShort:
      type: object
      properties:
        title:
          type: string
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        slug:
          type: string
          readOnly: true
      required:
        - title
    ActionTypeUpdate:
      type: object
      properties:
        title:
          type: string
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        integration:
          allOf:
            - $ref: '#/components/schemas/ShortIntegrationSerialier'
          readOnly: true
        tags:
          type: array
          items:
            type: string
            title: tags
          description: >-
            list of the slugs of tags we want to add to the customer after
            activity with this action type is raised.
        slug:
          type: string
          readOnly: true
        is_owned:
          type: boolean
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        default_operation_type:
          allOf:
            - $ref: '#/components/schemas/DefaultOperationTypeEnum'
          description: >-
            shows the default operation type for the activities with this action
            type.
        activity_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities with this action
            type. for example {"en": "An order with was the order code
            {order_code} was created."}
        action_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Custom action score
          description: >-
            how much score will a customer gain by performing a activity with
            this action type? (as defined by action type owner.)
        group:
          type: string
          description: the group on which we're defining the action type's behaviour.
      required:
        - title
    ActionTypeUpdateRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        tags:
          type: array
          items:
            type: string
            title: tags
          description: >-
            list of the slugs of tags we want to add to the customer after
            activity with this action type is raised.
        default_operation_type:
          allOf:
            - $ref: '#/components/schemas/DefaultOperationTypeEnum'
          description: >-
            shows the default operation type for the activities with this action
            type.
        activity_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities with this action
            type. for example {"en": "An order with was the order code
            {order_code} was created."}
        action_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Custom action score
          description: >-
            how much score will a customer gain by performing a activity with
            this action type? (as defined by action type owner.)
        group:
          type: string
          description: the group on which we're defining the action type's behaviour.
      required:
        - title
    ActivityBatchImportSerialier:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/StatusBf0Enum'
          readOnly: true
          description: what's the status on this batch import job?
        file:
          type: string
          format: uri
          description: 'the file, containig the activity data we''re importing.'
        activities_data:
          type: object
          additionalProperties: {}
          description: Use if you want to send json data without using a file.
        slug:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        imported_at:
          type: string
          format: date-time
          readOnly: true
          description: >-
            when was the batch data successfully imported? (null, if not
            imported).
        import_results:
          type: object
          additionalProperties: {}
          readOnly: true
          description: >-
            will contain the data about he imported batch, like activities
            count, new activity and existing activities etc.
        error_log:
          type: object
          additionalProperties: {}
          readOnly: true
          description: >-
            will contain the proper errors of the import job failed for any
            reason.
        error_log_file:
          type: string
          format: uri
          readOnly: true
          description: >-
            will contain the proper errors of the import job failed for any
            reason.
    ActivityBatchImportSerialierRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: 'the file, containig the activity data we''re importing.'
        activities_data:
          type: object
          additionalProperties: {}
          description: Use if you want to send json data without using a file.
    ActivityCustomer:
      type: object
      properties:
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        username:
          type: string
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        updated_at:
          type: string
          format: date-time
          readOnly: true
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
        level:
          type: integer
          readOnly: true
          description: customer's level based on their score and other customers' score.
    ActivityCustomerRequest:
      type: object
      properties:
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        username:
          type: string
          minLength: 1
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
    ActivityList:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ActionTypeShort'
        operation_type:
          allOf:
            - $ref: '#/components/schemas/OperationTypeEnum'
          description: >-
            shows the activity operation type (create, read, update, delete). if
            not sent, will be set to the actiom type's default opertation type.
        description:
          type: string
          readOnly: true
        activity_date:
          type: string
          format: date-time
          description: the date and time in which the activity has happend.
        activity_data:
          type: object
          additionalProperties: {}
          title: Data
          description: any data available on the activity in json format.
        customer:
          allOf:
            - $ref: '#/components/schemas/ShortCustomer'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - action
    ActivityRelation:
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/Instance'
        relation_name:
          type: string
          description: >-
            name of the relation between the activity and the instance (like
            field name).
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - instance
        - relation_name
    ActivityRelationRequest:
      type: object
      properties:
        instance:
          $ref: '#/components/schemas/InstanceRequest'
        relation_name:
          type: string
          minLength: 1
          description: >-
            name of the relation between the activity and the instance (like
            field name).
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - instance
        - relation_name
    ActivityShort:
      type: object
      properties:
        action:
          $ref: '#/components/schemas/ActionTypeShort'
        operation_type:
          allOf:
            - $ref: '#/components/schemas/OperationTypeEnum'
          description: >-
            shows the activity operation type (create, read, update, delete). if
            not sent, will be set to the actiom type's default opertation type.
        description:
          type: string
          readOnly: true
        currency:
          allOf:
            - $ref: '#/components/schemas/Currency1'
          readOnly: true
        monetary_value:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: >-
            monetary value of the activty. (e.g. payment amount for a purchase
            activity).
        activity_date:
          type: string
          format: date-time
          description: the date and time in which the activity has happend.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - action
    AddTag:
      type: object
      properties:
        title:
          type: string
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        slug:
          type: string
          nullable: true
          maxLength: 31
    AddTagRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        slug:
          type: string
          nullable: true
          maxLength: 31
    BooleanField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    BooleanFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    Business1:
      type: object
      properties:
        title:
          type: string
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        slug:
          type: string
          readOnly: true
        business_identifier:
          type: string
          readOnly: true
        calculate_rfm:
          type: boolean
          description: whether or not to calculate rfm for this business' customers.
        logo:
          type: string
          format: uri
          nullable: true
          description: business's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: business's web address.
          maxLength: 200
      required:
        - title
    BusinessGamificationSettings:
      type: object
      properties:
        cash_back_minimum:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: used as a minimum to calculate customers' cash value.
        cash_back_maximum:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: used as a maximum to calculate customers' cash value.
        cash_back_formula:
          type: object
          additionalProperties: {}
          nullable: true
          description: use this for any custom cash back formula.
          readOnly: true
    BusinessGamificationSettingsRequest:
      type: object
      properties:
        cash_back_minimum:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: used as a minimum to calculate customers' cash value.
        cash_back_maximum:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: used as a maximum to calculate customers' cash value.
    BusinessIntegrationSettings:
      type: object
      properties:
        facebook_access_token:
          type: string
          nullable: true
          description: the access token for Facebook CAPI.
          maxLength: 511
          pattern: '^[-a-zA-Z0-9_]+$'
        facebook_pixel_id:
          type: string
          nullable: true
          description: the pixel id for Facebook CAPI.
          maxLength: 256
          pattern: '^[-a-zA-Z0-9_]+$'
    BusinessIntegrationSettingsRequest:
      type: object
      properties:
        facebook_access_token:
          type: string
          nullable: true
          description: the access token for Facebook CAPI.
          maxLength: 511
          pattern: '^[-a-zA-Z0-9_]+$'
        facebook_pixel_id:
          type: string
          nullable: true
          description: the pixel id for Facebook CAPI.
          maxLength: 256
          pattern: '^[-a-zA-Z0-9_]+$'
    BusinessRequest1:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        calculate_rfm:
          type: boolean
          description: whether or not to calculate rfm for this business' customers.
        logo:
          type: string
          format: binary
          nullable: true
          description: business's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: business's web address.
          maxLength: 200
      required:
        - title
    BusinessStats:
      type: object
      properties:
        stats:
          type: object
          additionalProperties: {}
          readOnly: true
        charts:
          type: object
          additionalProperties: {}
          readOnly: true
    CharField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        max_length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum length
          description: maximum acceptable length for the input text.
    CharFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        max_length:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Maximum length
          description: maximum acceptable length for the input text.
    Choice:
      type: object
      properties:
        title:
          type: string
          description: choice text.
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the choice on the field. (e.g. 2)
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          description: an auto-generated slug field representing the choice.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    ChoiceField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    ChoiceFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceRequest'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    ChoiceGroup1:
      type: object
      properties:
        title:
          type: string
          description: the groups title.
          maxLength: 255
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          description: an auto-generated slug field representing the choice group.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    ChoiceGroupRequest1:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: the groups title.
          maxLength: 255
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          minLength: 1
          description: an auto-generated slug field representing the choice group.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    ChoiceRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: choice text.
          maxLength: 255
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the choice on the field. (e.g. 2)
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          minLength: 1
          description: an auto-generated slug field representing the choice.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - title
    City:
      type: object
      properties:
        state:
          allOf:
            - $ref: '#/components/schemas/State'
          readOnly: true
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - name
    Country:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - name
    CreateActivitySrializer:
      type: object
      properties:
        action:
          type: string
          description: Which action type is being raised by this activity?
        customer:
          allOf:
            - $ref: '#/components/schemas/ActivityCustomer'
          description: >-
            Data for the new or existing customer to whom the activity is
            related?
        activity_data:
          type: object
          additionalProperties: {}
          default: {}
          description: >-
            Any extra data on the activity in the json format (e.g. How long did
            the activity take, on which platform did the user raise it, etc).
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTag'
          description: >-
            Any tags we want to add to the customer after activity is
            created.(e.g. a tag for the product in an order creation activity).
        operation_type:
          allOf:
            - $ref: '#/components/schemas/OperationTypeEnum'
          description: >-
            shows the activity operation type (create, read, update, delete). if
            not sent, will be set to the actiom type's default opertation type.
        description:
          type: string
          readOnly: true
        currency:
          type: string
          description: what is the activity's currency (if it has a monetary value)?
          pattern: '^[-a-zA-Z0-9_]+$'
        monetary_value:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: >-
            monetary value of the activty. (e.g. payment amount for a purchase
            activity).
        activity_date:
          type: string
          format: date-time
          description: the date and time in which the activity has happend.
        relations:
          type: array
          items:
            $ref: '#/components/schemas/ActivityRelation'
          description: >-
            Objects to which the activity is related (e.g. order, products,
            ticket etc) along withthe relation name.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
      required:
        - action
        - customer
    CreateActivitySrializerRequest:
      type: object
      properties:
        action:
          type: string
          description: Which action type is being raised by this activity?
        customer:
          allOf:
            - $ref: '#/components/schemas/ActivityCustomerRequest'
          description: >-
            Data for the new or existing customer to whom the activity is
            related?
        activity_data:
          type: object
          additionalProperties: {}
          default: {}
          description: >-
            Any extra data on the activity in the json format (e.g. How long did
            the activity take, on which platform did the user raise it, etc).
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTagRequest'
          description: >-
            Any tags we want to add to the customer after activity is
            created.(e.g. a tag for the product in an order creation activity).
        operation_type:
          allOf:
            - $ref: '#/components/schemas/OperationTypeEnum'
          description: >-
            shows the activity operation type (create, read, update, delete). if
            not sent, will be set to the actiom type's default opertation type.
        currency:
          type: string
          minLength: 1
          description: what is the activity's currency (if it has a monetary value)?
          pattern: '^[-a-zA-Z0-9_]+$'
        monetary_value:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: >-
            monetary value of the activty. (e.g. payment amount for a purchase
            activity).
        activity_date:
          type: string
          format: date-time
          description: the date and time in which the activity has happend.
        relations:
          type: array
          items:
            $ref: '#/components/schemas/ActivityRelationRequest'
          description: >-
            Objects to which the activity is related (e.g. order, products,
            ticket etc) along withthe relation name.
      required:
        - action
        - customer
    CreateCustomer:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        dedicated_tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTag'
          description: Any tags we want to add to the customer after creation or update.
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        username:
          type: string
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        updated_at:
          type: string
          format: date-time
          readOnly: true
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        level:
          type: integer
          readOnly: true
          description: customer's level based on their score and other customers' score.
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
        notes:
          type: array
          items:
            $ref: '#/components/schemas/CustomerNote'
          readOnly: true
        city:
          type: string
          description: Customer's city slug.
        language:
          type: string
          description: Customer's language slug.
        fields_list:
          type: string
          readOnly: true
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        cash_back:
          type: number
          format: float
          readOnly: true
        gamification_data:
          type: object
          additionalProperties: {}
          readOnly: true
        remove_other_tags:
          type: boolean
          description: >-
            if set true, any customer tag not present in the sent tags list will
            be deleted. if set false, the othe tags will not be deleted. if not
            sent, endpoint's default behaviour will be applied.
    CreateCustomerRequest:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTagRequest'
          description: Any tags we want to add to the customer after creation or update.
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        username:
          type: string
          minLength: 1
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
        reset_score:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            If set true, exusting customer's score will be set to the newly sent
            score (or 0 if no score is sent).
        city:
          type: string
          description: Customer's city slug.
        language:
          type: string
          description: Customer's language slug.
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        remove_other_tags:
          type: boolean
          description: >-
            if set true, any customer tag not present in the sent tags list will
            be deleted. if set false, the othe tags will not be deleted. if not
            sent, endpoint's default behaviour will be applied.
    CreateIntegration:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        slug:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        business:
          type: string
          description: >-
            if the integrations i going to be specific for one business, set the
            business slug here.
        key:
          type: string
          readOnly: true
        write_only_key:
          type: string
          readOnly: true
        secret:
          type: string
          readOnly: true
        can_edit:
          type: boolean
          readOnly: true
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
        enabled:
          type: boolean
      required:
        - title
    CreateIntegrationRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        business:
          type: string
          description: >-
            if the integrations i going to be specific for one business, set the
            business slug here.
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
        enabled:
          type: boolean
      required:
        - title
    Currency1:
      type: object
      properties:
        title:
          type: string
          description: currency's display name.
          maxLength: 255
        iso_code:
          type: string
          description: the iso code for the currency.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - iso_code
        - title
    Customer:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        dedicated_tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ShortTag'
          readOnly: true
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        level:
          type: integer
          maximum: 32767
          minimum: 0
          description: customer's level based on their score and other customers' score.
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: how much score does the customer have? (as shown to the business).
        notes:
          type: array
          items:
            $ref: '#/components/schemas/CustomerNote'
          readOnly: true
        city:
          allOf:
            - $ref: '#/components/schemas/City'
          readOnly: true
        language:
          allOf:
            - $ref: '#/components/schemas/Language'
          readOnly: true
        fields_list:
          type: string
          readOnly: true
        data:
          type: object
          additionalProperties: {}
          readOnly: true
        cash_back:
          type: number
          format: float
          readOnly: true
        gamification_data:
          type: object
          additionalProperties: {}
          readOnly: true
    CustomerBatchImport:
      type: object
      properties:
        status:
          allOf:
            - $ref: '#/components/schemas/StatusBf0Enum'
          readOnly: true
          description: what's the status on this batch import job?
        file:
          type: string
          format: uri
          description: 'the file, containig the customer data we''re importing.'
        customers_data:
          type: object
          additionalProperties: {}
          description: Use if you want to send json data without using a file.
        file_type:
          allOf:
            - $ref: '#/components/schemas/CustomerBatchImportFileTypeEnum'
          description: what's the type of the data we're importing?
        slug:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        imported_at:
          type: string
          format: date-time
          readOnly: true
          description: >-
            when was the batch data successfully imported? (null, if not
            imported).
        import_results:
          type: object
          additionalProperties: {}
          readOnly: true
          description: >-
            will contain the data about he imported batch, like customers count,
            new customer and existing customers etc.
        error_log:
          type: object
          additionalProperties: {}
          description: >-
            will contain the proper errors of the import job failed for any
            reason.
        error_log_file:
          type: string
          format: uri
          nullable: true
          description: >-
            will contain the proper errors of the import job failed for any
            reason, in a file.
    CustomerBatchImportFileTypeEnum:
      enum:
        - excel
        - json
      type: string
    CustomerBatchImportRequest:
      type: object
      properties:
        file:
          type: string
          format: binary
          description: 'the file, containig the customer data we''re importing.'
        customers_data:
          type: object
          additionalProperties: {}
          description: Use if you want to send json data without using a file.
        file_type:
          allOf:
            - $ref: '#/components/schemas/CustomerBatchImportFileTypeEnum'
          description: what's the type of the data we're importing?
        error_log:
          type: object
          additionalProperties: {}
          description: >-
            will contain the proper errors of the import job failed for any
            reason.
        error_log_file:
          type: string
          format: binary
          nullable: true
          description: >-
            will contain the proper errors of the import job failed for any
            reason, in a file.
    CustomerBulkAddTag:
      type: object
      properties:
        customers:
          type: array
          items:
            type: string
            title: Customers
          description: list of slug for the customers we want to take the action on.
        tags:
          type: array
          items:
            type: string
            title: Tags
          description: Slug of the tags we want to add to the customers.
      required:
        - customers
        - tags
    CustomerBulkAddTagRequest:
      type: object
      properties:
        customers:
          type: array
          items:
            type: string
            title: Customers
          description: list of slug for the customers we want to take the action on.
        tags:
          type: array
          items:
            type: string
            title: Tags
          description: Slug of the tags we want to add to the customers.
      required:
        - customers
        - tags
    CustomerBulkDelete:
      type: object
      properties:
        customers:
          type: array
          items:
            type: string
            title: Customers
          description: list of slug for the customers we want to take the action on.
      required:
        - customers
    CustomerBulkDeleteRequest:
      type: object
      properties:
        customers:
          type: array
          items:
            type: string
            title: Customers
          description: list of slug for the customers we want to take the action on.
      required:
        - customers
    CustomerDataRequest:
      type: object
      properties:
        desctiption:
          type: string
          nullable: true
          title: Description
          description: any description on the action request
        slug:
          type: string
          nullable: true
          maxLength: 31
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/Status52aEnum'
          description: what's the status of this request?
        business:
          allOf:
            - $ref: '#/components/schemas/Business1'
          readOnly: true
        customer:
          allOf:
            - $ref: '#/components/schemas/ShortCustomer'
          readOnly: true
    CustomerDataRequestRequest:
      type: object
      properties:
        desctiption:
          type: string
          nullable: true
          title: Description
          description: any description on the action request
        slug:
          type: string
          nullable: true
          maxLength: 31
        status:
          allOf:
            - $ref: '#/components/schemas/Status52aEnum'
          description: what's the status of this request?
    CustomerNote:
      type: object
      properties:
        text:
          type: string
          description: text written on the note.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        writer:
          allOf:
            - $ref: '#/components/schemas/User1'
          readOnly: true
        slug:
          type: string
          readOnly: true
      required:
        - text
    CustomerNoteRequest:
      type: object
      properties:
        text:
          type: string
          minLength: 1
          description: text written on the note.
      required:
        - text
    DateField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        from_date:
          type: string
          format: date
          nullable: true
          title: Fom date
          description: minimum acceptable date
        to_date:
          type: string
          format: date
          nullable: true
          description: maximum acceptable date
    DateFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        from_date:
          type: string
          format: date
          nullable: true
          title: Fom date
          description: minimum acceptable date
        to_date:
          type: string
          format: date
          nullable: true
          description: maximum acceptable date
    DefaultOperationTypeEnum:
      enum:
        - create
        - read
        - update
        - delete
        - undefined
      type: string
    DeleteBusinessRequest:
      type: object
      properties:
        desctiption:
          type: string
          nullable: true
          title: Description
          description: any description on the action request
        slug:
          type: string
          nullable: true
          maxLength: 31
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/Status52aEnum'
          description: what's the status of this request?
        business:
          allOf:
            - $ref: '#/components/schemas/Business1'
          readOnly: true
    DeleteBusinessRequestRequest:
      type: object
      properties:
        desctiption:
          type: string
          nullable: true
          title: Description
          description: any description on the action request
        slug:
          type: string
          nullable: true
          maxLength: 31
        status:
          allOf:
            - $ref: '#/components/schemas/Status52aEnum'
          description: what's the status of this request?
    DeleteCustomerRequest:
      type: object
      properties:
        desctiption:
          type: string
          nullable: true
          title: Description
          description: any description on the action request
        slug:
          type: string
          nullable: true
          maxLength: 31
        created_at:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
            - $ref: '#/components/schemas/Status52aEnum'
          description: what's the status of this request?
        business:
          allOf:
            - $ref: '#/components/schemas/Business1'
          readOnly: true
        customer:
          allOf:
            - $ref: '#/components/schemas/ShortCustomer'
          readOnly: true
    DeleteCustomerRequestRequest:
      type: object
      properties:
        desctiption:
          type: string
          nullable: true
          title: Description
          description: any description on the action request
        slug:
          type: string
          nullable: true
          maxLength: 31
        status:
          allOf:
            - $ref: '#/components/schemas/Status52aEnum'
          description: what's the status of this request?
    DropdownField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Option","slug":"OPTION_SLUG"},{"title":"New Option"}])
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    DropdownFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceRequest'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Option","slug":"OPTION_SLUG"},{"title":"New Option"}])
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    EmailField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    EmailFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    Entity:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: optional title for the entity.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the entity.
          maxLength: 511
        model_name:
          type: string
          nullable: true
          description: >-
            app label and model name for the entity model (e.g.
            'support.ticket').
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          nullable: true
          maxLength: 31
    EntityRequest:
      type: object
      properties:
        title:
          type: string
          nullable: true
          description: optional title for the entity.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the entity.
          maxLength: 511
        model_name:
          type: string
          nullable: true
          description: >-
            app label and model name for the entity model (e.g.
            'support.ticket').
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          nullable: true
          maxLength: 31
    Field1:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        deleted:
          type: string
          format: date-time
          readOnly: true
        type:
          allOf:
            - $ref: '#/components/schemas/FieldTypeEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - type
    FieldAction1:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          description: A unique string to represent the field. It's auto-generated.
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    FieldActionRequest1:
      type: object
      properties:
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    FieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/FieldTypeEnum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
      required:
        - type
    FieldTypeEnum:
      enum:
        - number
        - money
        - rating
        - short_text
        - long_text
        - website
        - email
        - phone
        - checkbox
        - yes_no
        - choice
        - dropdown
        - multiple_select
        - matrix
        - text_choice
        - time
        - date
        - file
        - meta
      type: string
    FileField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        file_type:
          allOf:
            - $ref: '#/components/schemas/FileFieldFileTypeEnum'
          description: the acceptable file type.
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Maximum size (kbs)
          description: maximum file size (kbs).
    FileFieldFileTypeEnum:
      enum:
        - image
        - document
        - all
      type: string
    FileFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        file_type:
          allOf:
            - $ref: '#/components/schemas/FileFieldFileTypeEnum'
          description: the acceptable file type.
        max_size:
          type: integer
          maximum: 2147483647
          minimum: 0
          title: Maximum size (kbs)
          description: maximum file size (kbs).
    GamificationCalculationCreateFormulaSerialier:
      type: object
      properties:
        formula:
          type: object
          additionalProperties: {}
          title: fomula
          description: >-
            The fomula with which we calculate the gamification for the
            customers. Contains a list of operations.
        description:
          type: string
          nullable: true
          description: an optional short description on the formula and what it does.
        is_public:
          type: boolean
          description: can other businesses see this formula?
        is_default:
          type: boolean
          description: >-
            is this the default formula for the business? (if business has noo
            default formaula, its fir fomula is used as default.)
        can_edit:
          type: boolean
          readOnly: true
      required:
        - formula
    GamificationCalculationCreateFormulaSerialierRequest:
      type: object
      properties:
        formula:
          type: object
          additionalProperties: {}
          title: fomula
          description: >-
            The fomula with which we calculate the gamification for the
            customers. Contains a list of operations.
        description:
          type: string
          nullable: true
          description: an optional short description on the formula and what it does.
        is_public:
          type: boolean
          description: can other businesses see this formula?
        is_default:
          type: boolean
          description: >-
            is this the default formula for the business? (if business has noo
            default formaula, its fir fomula is used as default.)
      required:
        - formula
    GamificationCalculationFormulaSerialier:
      type: object
      properties:
        formula:
          type: object
          additionalProperties: {}
          readOnly: true
        description:
          type: string
          nullable: true
          description: an optional short description on the formula and what it does.
        is_public:
          type: boolean
          description: can other businesses see this formula?
        is_default:
          type: boolean
          description: >-
            is this the default formula for the business? (if business has noo
            default formaula, its fir fomula is used as default.)
        can_edit:
          type: boolean
          readOnly: true
    GamificationCalculationJobSerialier:
      type: object
      properties:
        formula:
          type: string
          description: >-
            What formula will you use for the calculations? (If not set, will
            use system default.)
        gamification_date:
          type: string
          format: date
          nullable: true
          description: >-
            what date is the base for the calculations? (if not set, the
            execution date will be used).
        executed_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the gamification calculation job excecuted?
        status:
          allOf:
            - $ref: >-
                #/components/schemas/GamificationCalculationJobSerialierStatusEnum
          readOnly: true
          description: what's the status on this calculation job?
        log_data:
          type: object
          additionalProperties: {}
          readOnly: true
          description: will contain any log data related to the execution.
        created_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
    GamificationCalculationJobSerialierRequest:
      type: object
      properties:
        formula:
          type: string
          description: >-
            What formula will you use for the calculations? (If not set, will
            use system default.)
        gamification_date:
          type: string
          format: date
          nullable: true
          description: >-
            what date is the base for the calculations? (if not set, the
            execution date will be used).
    GamificationCalculationJobSerialierStatusEnum:
      enum:
        - new
        - queued
        - in_progress
        - finished
        - failed
        - canceled
      type: string
    Instance:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/Entity'
        identifier_value:
          type: string
          description: the identifying value of the instance in source serivce.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            optional title for the instance, set from source service. (normally,
            the reurn value of its __str__).
          maxLength: 255
        instance_data:
          type: object
          additionalProperties: {}
          title: Data
          description: any data available on the instance in json format.
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - entity
        - identifier_value
    InstanceRequest:
      type: object
      properties:
        entity:
          $ref: '#/components/schemas/EntityRequest'
        identifier_value:
          type: string
          minLength: 1
          description: the identifying value of the instance in source serivce.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          description: >-
            optional title for the instance, set from source service. (normally,
            the reurn value of its __str__).
          maxLength: 255
        instance_data:
          type: object
          additionalProperties: {}
          title: Data
          description: any data available on the instance in json format.
      required:
        - entity
        - identifier_value
    Integration:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        slug:
          type: string
          nullable: true
          maxLength: 31
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        business:
          allOf:
            - $ref: '#/components/schemas/Business1'
          readOnly: true
        key:
          type: string
          readOnly: true
        write_only_key:
          type: string
          readOnly: true
        secret:
          type: string
          readOnly: true
        can_edit:
          type: boolean
          readOnly: true
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
        enabled:
          type: boolean
      required:
        - title
    IntegrationList:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        slug:
          type: string
          nullable: true
          maxLength: 31
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        business:
          allOf:
            - $ref: '#/components/schemas/Business1'
          readOnly: true
        can_edit:
          type: boolean
          readOnly: true
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
      required:
        - title
    Language:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - title
    MatrixField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Option","slug":"OPTION_SLUG"},{"title":"New Option"}])
        choice_groups:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceGroup1'
          description: >-
            A list of choice group and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Group","slug":"GROUP_SLUG"},{"title":"New GROUP"}])
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    MatrixFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceRequest'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Option","slug":"OPTION_SLUG"},{"title":"New Option"}])
        choice_groups:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceGroupRequest1'
          description: >-
            A list of choice group and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Group","slug":"GROUP_SLUG"},{"title":"New GROUP"}])
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    MetaField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/MetaFieldSubTypeEnum1'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
      required:
        - sub_type
    MetaFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/MetaFieldSubTypeEnum1'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
      required:
        - sub_type
    MetaFieldSubTypeEnum1:
      enum:
        - page_break
        - section
      type: string
    MoneyField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: the currency for money input.
    MoneyFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: the currency for money input.
    MultipleSelectField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Option","slug":"OPTION_SLUG"},{"title":"New Option"}])
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    MultipleSelectFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceRequest'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing
            Option","slug":"OPTION_SLUG"},{"title":"New Option"}])
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    NumberField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
    NumberFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        min_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Minimum value
          description: the minimum accepted value for the field.
        max_value:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          nullable: true
          title: Maximum value
          description: the maximum accepted value for the field.
    OperationTypeEnum:
      enum:
        - create
        - read
        - update
        - delete
        - undefined
      type: string
    PaginatedActionTypeGroupList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/action_type_groups/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/action_type_groups/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        action_type_groups:
          type: array
          items:
            $ref: '#/components/schemas/ActionTypeGroup'
    PaginatedActionTypeList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/action_types/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/action_types/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        action_types:
          type: array
          items:
            $ref: '#/components/schemas/ActionType'
    PaginatedActivityListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/activities/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/activities/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityList'
    PaginatedActivityShortList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/activities/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/activities/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        activities:
          type: array
          items:
            $ref: '#/components/schemas/ActivityShort'
    PaginatedCityList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/cities/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/cities/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        cities:
          type: array
          items:
            $ref: '#/components/schemas/City'
    PaginatedCountryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/countries/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/countries/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        countries:
          type: array
          items:
            $ref: '#/components/schemas/Country'
    PaginatedCurrencyList1:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/currencies/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/currencies/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency1'
    PaginatedCustomerNoteList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/notes/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/notes/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        notes:
          type: array
          items:
            $ref: '#/components/schemas/CustomerNote'
    PaginatedFieldList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/fields/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/fields/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field1'
    PaginatedGamificationCalculationFormulaSerialierList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: >-
            https://api.formaloo.net/v1.0/gamification_calculation_formulas/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: >-
            https://api.formaloo.net/v1.0/gamification_calculation_formulas/?page=2
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        gamification_calculation_formulas:
          type: array
          items:
            $ref: '#/components/schemas/GamificationCalculationFormulaSerialier'
    PaginatedGamificationCalculationJobSerialierList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/gamification_calculation_jobs/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/gamification_calculation_jobs/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        gamification_calculation_jobs:
          type: array
          items:
            $ref: '#/components/schemas/GamificationCalculationJobSerialier'
    PaginatedIntegrationListList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/integrations/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/integrations/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        integrations:
          type: array
          items:
            $ref: '#/components/schemas/IntegrationList'
    PaginatedRegionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/regions/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/regions/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        regions:
          type: array
          items:
            $ref: '#/components/schemas/Region'
    PaginatedShortCustomerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/customers/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/customers/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        customers:
          type: array
          items:
            $ref: '#/components/schemas/ShortCustomer'
    PaginatedShortTagList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/tags/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/tags/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ShortTag'
    PaginatedStateList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/states/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/states/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        states:
          type: array
          items:
            $ref: '#/components/schemas/State'
    PatchedActionTypeUpdateRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: action type's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: a short and optional desctiption on the nature of the action type.
          maxLength: 511
        tags:
          type: array
          items:
            type: string
            title: tags
          description: >-
            list of the slugs of tags we want to add to the customer after
            activity with this action type is raised.
        default_operation_type:
          allOf:
            - $ref: '#/components/schemas/DefaultOperationTypeEnum'
          description: >-
            shows the default operation type for the activities with this action
            type.
        activity_text_template:
          type: object
          additionalProperties: {}
          description: >-
            add a series of text templates for the activities with this action
            type. for example {"en": "An order with was the order code
            {order_code} was created."}
        action_score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          title: Custom action score
          description: >-
            how much score will a customer gain by performing a activity with
            this action type? (as defined by action type owner.)
        group:
          type: string
          description: the group on which we're defining the action type's behaviour.
    PatchedBusinessGamificationSettingsRequest:
      type: object
      properties:
        cash_back_minimum:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: used as a minimum to calculate customers' cash value.
        cash_back_maximum:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          description: used as a maximum to calculate customers' cash value.
    PatchedBusinessIntegrationSettingsRequest:
      type: object
      properties:
        facebook_access_token:
          type: string
          nullable: true
          description: the access token for Facebook CAPI.
          maxLength: 511
          pattern: '^[-a-zA-Z0-9_]+$'
        facebook_pixel_id:
          type: string
          nullable: true
          description: the pixel id for Facebook CAPI.
          maxLength: 256
          pattern: '^[-a-zA-Z0-9_]+$'
    PatchedBusinessRequest1:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: business entity's title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: any description on the business.
        calculate_rfm:
          type: boolean
          description: whether or not to calculate rfm for this business' customers.
        logo:
          type: string
          format: binary
          nullable: true
          description: business's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: business's web address.
          maxLength: 200
    PatchedFieldActionRequest1:
      type: object
      properties:
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    PatchedGamificationCalculationCreateFormulaSerialierRequest:
      type: object
      properties:
        formula:
          type: object
          additionalProperties: {}
          title: fomula
          description: >-
            The fomula with which we calculate the gamification for the
            customers. Contains a list of operations.
        description:
          type: string
          nullable: true
          description: an optional short description on the formula and what it does.
        is_public:
          type: boolean
          description: can other businesses see this formula?
        is_default:
          type: boolean
          description: >-
            is this the default formula for the business? (if business has noo
            default formaula, its fir fomula is used as default.)
    PatchedTagRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        color_code:
          type: string
          nullable: true
          description: a hexadecimal color code for the tag.
          maxLength: 8
          pattern: '^[-a-zA-Z0-9_]+$'
        fields:
          type: array
          items:
            type: string
            nullable: true
            title: Fields
          description: A list of slugs for the fields on this tag.
    PatchedUpdateCustomerSeializerRequest:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTagRequest'
          description: Any tags we want to add to the customer after creation or update.
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        username:
          type: string
          minLength: 1
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
        reset_score:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            If set true, exusting customer's score will be set to the newly sent
            score (or 0 if no score is sent).
        city:
          type: string
          description: Customer's city slug.
        language:
          type: string
          description: Customer's language slug.
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        remove_other_tags:
          type: boolean
          description: >-
            if set true, any customer tag not present in the sent tags list will
            be deleted. if set false, the othe tags will not be deleted. if not
            sent, endpoint's default behaviour will be applied.
    PatchedUpdateIntegrationRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        business:
          type: string
          description: >-
            if the integrations i going to be specific for one business, set the
            business slug here.
        refresh_key:
          type: boolean
          default: false
          description: >-
            if set true, the existing application key will be invalidated an a
            new one will be created.
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
        enabled:
          type: boolean
    PhoneField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        phone_type:
          allOf:
            - $ref: '#/components/schemas/PhoneTypeEnum'
          description: 'shows if the field accepts mobile number, landline number, or both.'
    PhoneFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        phone_type:
          allOf:
            - $ref: '#/components/schemas/PhoneTypeEnum'
          description: 'shows if the field accepts mobile number, landline number, or both.'
    RatingField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/RatingFieldSubTypeEnum1'
          title: Rating type
          description: type of the rating field.
        min_message:
          type: string
          nullable: true
          description: text message for min value
          maxLength: 100
        max_message:
          type: string
          nullable: true
          description: text message for max value
          maxLength: 100
    RatingFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        sub_type:
          allOf:
            - $ref: '#/components/schemas/RatingFieldSubTypeEnum1'
          title: Rating type
          description: type of the rating field.
        min_message:
          type: string
          nullable: true
          description: text message for min value
          maxLength: 100
        max_message:
          type: string
          nullable: true
          description: text message for max value
          maxLength: 100
    RatingFieldSubTypeEnum1:
      enum:
        - star
        - like_dislike
        - nps
        - score
      type: string
    Region:
      type: object
      properties:
        city:
          allOf:
            - $ref: '#/components/schemas/City'
          readOnly: true
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - name
    ShortCustomer:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/ShortTag'
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        data:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: how much score does the customer have? (as shown to the business).
        level:
          type: integer
          maximum: 32767
          minimum: 0
          description: customer's level based on their score and other customers' score.
    ShortCustomerRequest:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        slug:
          type: string
          nullable: true
          maxLength: 31
        score:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
          description: how much score does the customer have? (as shown to the business).
        level:
          type: integer
          maximum: 32767
          minimum: 0
          description: customer's level based on their score and other customers' score.
    ShortIntegrationSerialier:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
      required:
        - title
    ShortIntegrationSerialierRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
      required:
        - title
    ShortTag:
      type: object
      properties:
        title:
          type: string
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        color_code:
          type: string
          nullable: true
          description: a hexadecimal color code for the tag.
          maxLength: 8
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          nullable: true
          maxLength: 31
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - title
    ShortTagRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        color_code:
          type: string
          nullable: true
          description: a hexadecimal color code for the tag.
          maxLength: 8
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - title
    State:
      type: object
      properties:
        country:
          allOf:
            - $ref: '#/components/schemas/Country'
          readOnly: true
        name:
          type: string
          maxLength: 50
        slug:
          type: string
          nullable: true
          maxLength: 31
      required:
        - name
    Status52aEnum:
      enum:
        - new
        - in_progress
        - finished
        - rejected
        - canceled
      type: string
    StatusBf0Enum:
      enum:
        - new
        - queued
        - in_progress
        - imported
        - failed
        - canceled
      type: string
    Tag:
      type: object
      properties:
        title:
          type: string
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        color_code:
          type: string
          nullable: true
          description: a hexadecimal color code for the tag.
          maxLength: 8
          pattern: '^[-a-zA-Z0-9_]+$'
        slug:
          type: string
          readOnly: true
        fields:
          type: array
          items:
            type: string
            nullable: true
            title: Fields
          description: A list of slugs for the fields on this tag.
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
        - title
    TagRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: tag's assigned or auto-generated title.
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Desctiption
          description: an optional description on the tag.
          maxLength: 511
        color_code:
          type: string
          nullable: true
          description: a hexadecimal color code for the tag.
          maxLength: 8
          pattern: '^[-a-zA-Z0-9_]+$'
        fields:
          type: array
          items:
            type: string
            nullable: true
            title: Fields
          description: A list of slugs for the fields on this tag.
      required:
        - title
    TextChoiceField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/Choice'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    TextChoiceFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        choice_items:
          type: array
          items:
            $ref: '#/components/schemas/ChoiceRequest'
          description: >-
            A list of choice titles and their slugs (for editing the existing
            choices). (e.g. [{"title":"Existing Option","slug":"OPTION_SLUG",
            "image":"base64 Image"},{"title":"New Option", "image":"base64
            Image"}])
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    TextField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    TextFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    TimeField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        from_time:
          type: string
          format: time
          nullable: true
          title: Fom time
          description: minimum acceptable time
        to_time:
          type: string
          format: time
          nullable: true
          description: maximum acceptable time
    TimeFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
        from_time:
          type: string
          format: time
          nullable: true
          title: Fom time
          description: minimum acceptable time
        to_time:
          type: string
          format: time
          nullable: true
          description: maximum acceptable time
    Type566Enum:
      enum:
        - number
        - money
        - rating
        - short_text
        - long_text
        - website
        - email
        - phone
        - checkbox
        - yes_no
        - choice
        - dropdown
        - multiple_select
        - matrix
        - text_choice
        - time
        - date
        - file
        - meta
        - generic_field
      type: string
    UpdateCustomerSeializer:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        dedicated_tag:
          allOf:
            - $ref: '#/components/schemas/Tag'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTag'
          description: Any tags we want to add to the customer after creation or update.
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        username:
          type: string
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        updated_at:
          type: string
          format: date-time
          readOnly: true
        rendered_data:
          type: object
          additionalProperties: {}
          readOnly: true
        level:
          type: integer
          readOnly: true
          description: customer's level based on their score and other customers' score.
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
        notes:
          type: array
          items:
            $ref: '#/components/schemas/CustomerNote'
          readOnly: true
        city:
          type: string
          description: Customer's city slug.
        language:
          type: string
          description: Customer's language slug.
        fields_list:
          type: string
          readOnly: true
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        cash_back:
          type: number
          format: float
          readOnly: true
        gamification_data:
          type: object
          additionalProperties: {}
          readOnly: true
        remove_other_tags:
          type: boolean
          description: >-
            if set true, any customer tag not present in the sent tags list will
            be deleted. if set false, the othe tags will not be deleted. if not
            sent, endpoint's default behaviour will be applied.
    UpdateCustomerSeializerRequest:
      type: object
      properties:
        full_name:
          type: string
          nullable: true
          description: >-
            customer's full name (in case it's not stored as the first name and
            last name).
          maxLength: 255
        first_name:
          type: string
          nullable: true
          description: customer's first name.
          maxLength: 255
        last_name:
          type: string
          nullable: true
          description: customer's last name.
          maxLength: 255
        email:
          type: string
          format: email
          nullable: true
          description: customer's primary email address.
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          description: customer's primary phone number.
          maxLength: 31
        tags:
          type: array
          items:
            $ref: '#/components/schemas/AddTagRequest'
          description: Any tags we want to add to the customer after creation or update.
        code:
          type: string
          format: uuid
          description: a unique code identifying the customer.
        username:
          type: string
          minLength: 1
          description: >-
            any username or identifier on your system which you use to identify
            the customer.
        created_at:
          type: string
          format: date-time
          description: when was the customer created?
        score:
          type: integer
          default: 0
          description: >-
            If you want the customer have an initial score (or and update on
            exisintg customer's score) send the score on this field.
        reset_score:
          type: boolean
          writeOnly: true
          default: false
          description: >-
            If set true, exusting customer's score will be set to the newly sent
            score (or 0 if no score is sent).
        city:
          type: string
          description: Customer's city slug.
        language:
          type: string
          description: Customer's language slug.
        customer_data:
          type: object
          additionalProperties: {}
          description: any data available on the customer in json format.
        remove_other_tags:
          type: boolean
          description: >-
            if set true, any customer tag not present in the sent tags list will
            be deleted. if set false, the othe tags will not be deleted. if not
            sent, endpoint's default behaviour will be applied.
    UpdateIntegration:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        slug:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        business:
          type: string
          description: >-
            if the integrations i going to be specific for one business, set the
            business slug here.
        key:
          type: string
          readOnly: true
        write_only_key:
          type: string
          readOnly: true
        secret:
          type: string
          readOnly: true
        refresh_key:
          type: boolean
          default: false
          description: >-
            if set true, the existing application key will be invalidated an a
            new one will be created.
        can_edit:
          type: boolean
          readOnly: true
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
        enabled:
          type: boolean
      required:
        - title
    UpdateIntegrationRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          nullable: true
        is_public_app:
          type: boolean
        business:
          type: string
          description: >-
            if the integrations i going to be specific for one business, set the
            business slug here.
        refresh_key:
          type: boolean
          default: false
          description: >-
            if set true, the existing application key will be invalidated an a
            new one will be created.
        website:
          type: string
          format: uri
          nullable: true
          title: Application url
          maxLength: 200
        enabled:
          type: boolean
      required:
        - title
    User1:
      type: object
      properties:
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
      required:
        - username
    UserRequest1:
      type: object
      properties:
        first_name:
          type: string
          title: Full name
          maxLength: 100
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          minLength: 1
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: '^[\w.@+-]+$'
          maxLength: 150
      required:
        - username
    WebsiteField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    WebsiteFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    YesNoField1:
      type: object
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: when was the field created.
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Created at
          description: when was the field las updated.
        slug:
          type: string
          pattern: '^[-a-zA-Z0-9_]+$'
        type:
          allOf:
            - $ref: '#/components/schemas/Type566Enum'
          title: Field type
          description: 'shows the fields type. once defined, it can''t be changed.'
          readOnly: true
        deleted:
          type: string
          format: date-time
          readOnly: true
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    YesNoFieldRequest1:
      type: object
      properties:
        slug:
          type: string
          minLength: 1
          pattern: '^[-a-zA-Z0-9_]+$'
        title:
          type: string
          nullable: true
          title: Field name
          description: >-
            field title or label to be shown to user. (e.g. "your contact
            email")
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Help text
          description: >-
            extra info on the field (if any). (e.g. "please use the email
            account you always check.")
        position:
          type: integer
          maximum: 32767
          minimum: 0
          description: the order of the field on the form. (e.g. 2)
        required:
          type: boolean
          description: is the field required?
        unique:
          type: boolean
          description: should the submitted value be unique for the form?
        additional_data_field:
          type: boolean
          title: Affitional data field
          description: >-
            shows if this field belongs to the additional data (e.g. auto
            generated).
        json_key:
          type: string
          nullable: true
          description: A string to represent the field value in a json output.
          maxLength: 255
          pattern: '^[-a-zA-Z0-9_]+$'
    CampaignCreate:
      type: object
      properties:
        company:
          allOf:
            - $ref: '#/components/schemas/ShortCompany'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
        tags_data:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
        customers_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: how many customer are included in this campaign?
        message_type:
          allOf:
            - $ref: '#/components/schemas/MessageTypeEnum'
          description: what's the type of message we're ending in this campaign?
        status:
          allOf:
            - $ref: '#/components/schemas/Status588Enum'
          readOnly: true
          title: Campaign status
          description: what's the status on this campaign?
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
        sent_at:
          type: string
          format: date-time
          readOnly: true
          title: Scheduled at
          description: when was the campaign sent?
      required:
        - message_type
    CampaignCreateRequest:
      type: object
      properties:
        tags_data:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
        customers_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: how many customer are included in this campaign?
        message_type:
          allOf:
            - $ref: '#/components/schemas/MessageTypeEnum'
          description: what's the type of message we're ending in this campaign?
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
      required:
        - message_type
    CampaignUpdate:
      type: object
      properties:
        company:
          allOf:
            - $ref: '#/components/schemas/ShortCompany'
          readOnly: true
        sms_text:
          type: string
          description: Body of the sms user wants to send in a sms campaign.
          maxLength: 1023
        email_subject:
          type: string
          description: Body of the email user wants to send in a email campaign.
        email_text:
          type: string
          description: Subject of the email user wants to send in a email campaign.
        status:
          allOf:
            - $ref: '#/components/schemas/CampaignUpdateStatusEnum'
          description: What will be the new status for the campaign?
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
        tags_data:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
        customers_count:
          type: integer
          readOnly: true
          description: how many customer are included in this campaign?
        message_type:
          allOf:
            - $ref: '#/components/schemas/MessageTypeEnum'
          readOnly: true
          description: what's the type of message we're ending in this campaign?
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
        sent_at:
          type: string
          format: date-time
          readOnly: true
          title: Scheduled at
          description: when was the campaign sent?
      required:
        - status
    CampaignUpdateRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            pattern: '^[-a-zA-Z0-9_]+$'
          writeOnly: true
          description: >-
            List of slugs for campaign tags. Any customer with these tags will
            be included in the campaign.
        sms_text:
          type: string
          minLength: 1
          description: Body of the sms user wants to send in a sms campaign.
          maxLength: 1023
        email_subject:
          type: string
          minLength: 1
          description: Body of the email user wants to send in a email campaign.
        email_text:
          type: string
          minLength: 1
          description: Subject of the email user wants to send in a email campaign.
        status:
          allOf:
            - $ref: '#/components/schemas/CampaignUpdateStatusEnum'
          description: What will be the new status for the campaign?
        tags_data:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
      required:
        - status
    CampaignUpdateStatusEnum:
      enum:
        - scheduled
        - canceled
      type: string
    Company:
      type: object
      properties:
        is_owner:
          type: boolean
          readOnly: true
        business_identifier:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          nullable: true
          maxLength: 31
        coordinates:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            The latitude and longitude of the given point. e.g. {"lat":30.3,
            "long":100.1}
        title:
          type: string
          description: company's title.
          maxLength: 255
        logo:
          type: string
          format: uri
          nullable: true
          description: company's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: company's web address.
          maxLength: 200
        physical_address:
          type: string
          nullable: true
          maxLength: 511
        description:
          type: string
          nullable: true
          description: a description about the plan to show to users.
      required:
        - title
    CompanyRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 31
        coordinates:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            The latitude and longitude of the given point. e.g. {"lat":30.3,
            "long":100.1}
        title:
          type: string
          minLength: 1
          description: company's title.
          maxLength: 255
        logo:
          type: string
          format: binary
          nullable: true
          description: company's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: company's web address.
          maxLength: 200
        physical_address:
          type: string
          nullable: true
          maxLength: 511
        description:
          type: string
          nullable: true
          description: a description about the plan to show to users.
      required:
        - title
    FullCampaign:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/ShortCompany'
        tags:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        received_count:
          type: integer
          readOnly: true
        sms_text:
          type: string
          readOnly: true
        email_text:
          type: string
          readOnly: true
        email_subject:
          type: string
          readOnly: true
        visit_stats:
          type: object
          additionalProperties: {}
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
        customers_count:
          type: integer
          readOnly: true
          description: how many customer are included in this campaign?
        message_type:
          allOf:
            - $ref: '#/components/schemas/MessageTypeEnum'
          description: what's the type of message we're ending in this campaign?
        status:
          allOf:
            - $ref: '#/components/schemas/Status588Enum'
          readOnly: true
          title: Campaign status
          description: what's the status on this campaign?
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
        sent_at:
          type: string
          format: date-time
          readOnly: true
          title: Scheduled at
          description: when was the campaign sent?
      required:
        - company
        - message_type
    MessageTypeEnum:
      enum:
        - sms
        - email
      type: string
    Operator:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        first_name:
          type: string
          title: Full name
          maxLength: 100
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: uri
          nullable: true
        verified_account:
          type: boolean
          readOnly: true
        verified_email:
          type: boolean
          readOnly: true
        verified_phone:
          type: boolean
          readOnly: true
          title: Verified phone number
        balance:
          type: string
          format: decimal
          pattern: '^-?\d{0,9}(?:\.\d{0,2})?$'
          readOnly: true
          title: Account balance
    OperatorRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Full name
          maxLength: 100
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: binary
          nullable: true
    PaginatedShortCampaignList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/campaigns/?page=4'
        previous:
          type: string
          nullable: true
          format: uri
          example: 'https://api.formaloo.net/v1.0/campaigns/?page=2'
        page_size:
          type: integer
          example: 10
        page_count:
          type: integer
          example: 13
        current_page:
          type: integer
          example: 3
        campaigns:
          type: array
          items:
            $ref: '#/components/schemas/ShortCampaign'
    PatchedCampaignUpdateRequest:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            pattern: '^[-a-zA-Z0-9_]+$'
          writeOnly: true
          description: >-
            List of slugs for campaign tags. Any customer with these tags will
            be included in the campaign.
        sms_text:
          type: string
          minLength: 1
          description: Body of the sms user wants to send in a sms campaign.
          maxLength: 1023
        email_subject:
          type: string
          minLength: 1
          description: Body of the email user wants to send in a email campaign.
        email_text:
          type: string
          minLength: 1
          description: Subject of the email user wants to send in a email campaign.
        status:
          allOf:
            - $ref: '#/components/schemas/CampaignUpdateStatusEnum'
          description: What will be the new status for the campaign?
        tags_data:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
    PatchedCompanyRequest:
      type: object
      properties:
        slug:
          type: string
          nullable: true
          maxLength: 31
        coordinates:
          type: object
          additionalProperties: {}
          nullable: true
          description: >-
            The latitude and longitude of the given point. e.g. {"lat":30.3,
            "long":100.1}
        title:
          type: string
          minLength: 1
          description: company's title.
          maxLength: 255
        logo:
          type: string
          format: binary
          nullable: true
          description: company's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: company's web address.
          maxLength: 200
        physical_address:
          type: string
          nullable: true
          maxLength: 511
        description:
          type: string
          nullable: true
          description: a description about the plan to show to users.
    PatchedOperatorRequest:
      type: object
      properties:
        first_name:
          type: string
          title: Full name
          maxLength: 100
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        phone_number:
          type: string
          nullable: true
          maxLength: 16
        avatar:
          type: string
          format: binary
          nullable: true
    ShortCampaign:
      type: object
      properties:
        company:
          $ref: '#/components/schemas/ShortCompany'
        tags:
          type: object
          additionalProperties: {}
          description: a list including slugs of the tags related to this campaign.
          readOnly: true
        visit_count:
          type: integer
          readOnly: true
        received_count:
          type: integer
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        slug:
          type: string
          readOnly: true
        customers_count:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: how many customer are included in this campaign?
        message_type:
          allOf:
            - $ref: '#/components/schemas/MessageTypeEnum'
          description: what's the type of message we're ending in this campaign?
        status:
          allOf:
            - $ref: '#/components/schemas/Status588Enum'
          readOnly: true
          title: Campaign status
          description: what's the status on this campaign?
        title:
          type: string
          nullable: true
          description: the campaign's identifying title.
          maxLength: 255
        description:
          type: string
          nullable: true
          description: 'a description on the campaign, if any.'
        scheduled_at:
          type: string
          format: date-time
          nullable: true
          description: when are we going to send the campaign?
        sent_at:
          type: string
          format: date-time
          readOnly: true
          title: Scheduled at
          description: when was the campaign sent?
      required:
        - company
        - message_type
    ShortCompany:
      type: object
      properties:
        title:
          type: string
          description: company's title.
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 31
        description:
          type: string
          nullable: true
          description: a description about the plan to show to users.
        is_owner:
          type: boolean
          readOnly: true
        logo:
          type: string
          format: uri
          nullable: true
          description: company's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: company's web address.
          maxLength: 200
        physical_address:
          type: string
          nullable: true
          maxLength: 511
        business_identifier:
          type: string
          readOnly: true
      required:
        - title
    ShortCompanyRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
          description: company's title.
          maxLength: 255
        slug:
          type: string
          nullable: true
          maxLength: 31
        description:
          type: string
          nullable: true
          description: a description about the plan to show to users.
        logo:
          type: string
          format: binary
          nullable: true
          description: company's logo.
        website:
          type: string
          format: uri
          nullable: true
          description: company's web address.
          maxLength: 200
        physical_address:
          type: string
          nullable: true
          maxLength: 511
      required:
        - title
    Status588Enum:
      enum:
        - draft
        - scheduled
        - in_progress
        - sent
        - canceled
      type: string
